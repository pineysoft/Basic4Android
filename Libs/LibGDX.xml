<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.InputListener</name>
        <shortname>lgScn2DInputListener</shortname>
        <comment>EventListener for low-level input events. Unpacks {@link InputEvent}s and calls the appropriate method. By default the methods
 here do nothing with the event. Users are expected to override the methods they are interested in, like this:
 
 &lt;pre&gt;
 actor.addListener(new InputListener() {
 	public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
 		Gdx.app.log(&amp;quot;Example&amp;quot;, &amp;quot;touch started at (&amp;quot; + x + &amp;quot;, &amp;quot; + y + &amp;quot;)&amp;quot;);
 	}
 
 	public void touchUp (InputEvent event, float x, float y, int pointer, int button) {
 		Gdx.app.log(&amp;quot;Example&amp;quot;, &amp;quot;touch done at (&amp;quot; + x + &amp;quot;, &amp;quot; + y + &amp;quot;)&amp;quot;);
 	}
 });
 &lt;/pre&gt;</comment>
        <owner>process</owner>
        <event>Enter(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int, FromActor As lgScn2DActor)</event>
        <event>Exit(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int, ToActor As lgScn2DActor)</event>
        <event>KeyDown(Event As lgScn2DInputEvent, KeyCode As Int)</event>
        <event>KeyUp(Event As lgScn2DInputEvent, KeyCode As Int)</event>
        <event>KeyTyped(Event As lgScn2DInputEvent, Character As Char)</event>
        <event>TouchDown(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchUp(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchDragged(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <method>
            <name>Initialize</name>
            <comment>Creates an event listener for low-level input events. Returns the created instance.
EvtPrefix: Prefix of the input events.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.InputListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>handle</name>
            <comment>Try to handle the given event, if it is applicable.
Returns True if the event should be considered handled by scene2d.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>e</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.InputEvent</name>
        <shortname>lgScn2DInputEvent</shortname>
        <comment>Event for actor input: touch, mouse, keyboard, and scroll.</comment>
        <owner>process</owner>
        <method>
            <name>isCapture</name>
            <comment>Returns whether the event was fired during the capture phase.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>stop</name>
            <comment>Marks this event has being stopped. This halts event propagation. Any other listeners on the listener actor are notified. After that, no other listeners are notified.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toCoordinates</name>
            <comment>Sets actorCoords to this event's coordinates relative to the specified actor.
actorCoords: Output for resulting coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>actorCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>handle</name>
            <comment>Marks this event as handled. This does not affect event propagation inside Scene2d, but causes the Stage event handlers to return True, which will eat the event so it is not passed on to the application under the stage.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isCancelled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>cancel</name>
            <comment>Marks this event cancelled. This handles the event and stops the event propagation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isTouchFocusCancel</name>
            <comment>Returns True if this event is a TouchUp triggered by CancelTouchFocus.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isHandled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isStopped</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>StageX</name>
            <returntype>float</returntype>
            <parameter>
                <name>stageX</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the stage X coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, enter, and exit.</comment>
        </property>
        <property>
            <name>StageY</name>
            <returntype>float</returntype>
            <parameter>
                <name>stageY</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the stage Y coordinate where the event occurred. Valid for: touchDown, touchDragged, touchUp, enter, and exit.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.InputEvent.Type</returntype>
            <parameter>
                <name>type</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.InputEvent.Type</type>
            </parameter>
            <comment>Gets or sets the type of input event.</comment>
        </property>
        <property>
            <name>Pointer</name>
            <returntype>int</returntype>
            <parameter>
                <name>pointer</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the pointer index for the event. The first touch is index 0, second touch is index 1, etc. Valid for: touchDown, touchDragged, touchUp, enter, and exit.</comment>
        </property>
        <property>
            <name>Character</name>
            <returntype>char</returntype>
            <parameter>
                <name>character</name>
                <type>char</type>
            </parameter>
            <comment>Gets or sets the character for the key that was typed. Valid for: keyTyped.</comment>
        </property>
        <property>
            <name>RelatedActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>The actor related to the event. Valid for: enter and exit. For enter, this is the actor being exited, or null. For exit,
 this is the actor being entered, or null.</comment>
        </property>
        <property>
            <name>Target</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the actor that the event originated from.</comment>
        </property>
        <property>
            <name>KeyCode</name>
            <returntype>int</returntype>
            <parameter>
                <name>keyCode</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the key code of the key that was pressed. Valid for: keyDown and keyUp.</comment>
        </property>
        <property>
            <name>Stage</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
            <comment>The stage for the actor the event was fired on.</comment>
        </property>
        <property>
            <name>Bubbles</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>bubbles</name>
                <type>boolean</type>
            </parameter>
            <comment>If True, after the event is fired on the target actor, it will also be fired on each of the parent actors, all the way to the root.</comment>
        </property>
        <property>
            <name>ListenerActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the actor that this listener is attached to.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.Group</name>
        <shortname>lgScn2DGroup</shortname>
        <comment>2D scene graph node that may contain other actors.
 &lt;p&gt;
 Actors have a z-order equal to the order they were inserted into the group. Actors inserted later will be drawn on top of
 actors added earlier. Touch events that hit more than one actor are distributed to topmost actors first.</comment>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>addActorAt</name>
            <comment>Adds an actor as a child of this group, at a specific index. The actor is first removed from its parent group, if any.
index: May be greater than the number of children.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Raises the Draw event of the group and its children. Typically this is called each frame by Stage.Draw.
lgSpriteBatch.Begin has already been called and the SpriteBatch has been transformed (if Transform was set to True).
ParentAlpha: Should be multiplied with the actor's alpha, allowing a parent's alpha to affect all children.
Example:&lt;code&gt;
Sub MyGroup_Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)
	Dim Group As lgScn2DGroup = Sender
	SpriteBatch.SetColorRGBA(Group.Color.R, Group.Color.G, Group.Color.B, Group.Color.A * ParentAlpha)
	SpriteBatch.DrawRegion3(MyTexRegion, Group.X, Group.Y, Group.OriginX, Group.OriginY, Group.Width, Group.Height, Group.ScaleX, Group.ScaleY, Group.Rotation)
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new group.
EvtPrefix: The prefix of Act and Draw events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addActor</name>
            <comment>Adds an actor as a child of this group. The actor is first removed from its parent group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>addActorBefore</name>
            <comment>Adds an actor as a child of this group, immediately before another child actor. The actor is first removed from its parent
 group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actorBefore</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>addActorAfter</name>
            <comment>Adds an actor as a child of this group, immediately after another child actor. The actor is first removed from its parent
 group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actorAfter</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.Event</name>
        <shortname>lgScn2DEvent</shortname>
        <comment>The base class for all events.
 &lt;p&gt;
 By default an event will "bubble" up through an actor's parent's handlers (see {@link #setBubbles(boolean)}).
 &lt;p&gt;
 An actor's capture listeners can {@link #stop()} an event to prevent child actors from seeing it. 
 &lt;p&gt;
 An Event may be marked as "handled" which will end its propagation outside of the Stage (see {@link #handle()}). The default
 {@link Actor#fire(Event)} will mark events handled if an {@link EventListener} returns true.
 &lt;p&gt;
 A cancelled event will be stopped and handled. Additionally, many actors will undo the side-effects of a canceled event. (See
 {@link #cancel()}.)</comment>
        <owner>process</owner>
        <method>
            <name>isCapture</name>
            <comment>Returns whether the event was fired during the capture phase.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>stop</name>
            <comment>Marks this event has being stopped. This halts event propagation. Any other listeners on the listener actor are notified. After that, no other listeners are notified.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>handle</name>
            <comment>Marks this event as handled. This does not affect event propagation inside Scene2d, but causes the Stage event handlers to return True, which will eat the event so it is not passed on to the application under the stage.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isCancelled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>cancel</name>
            <comment>Marks this event cancelled. This handles the event and stops the event propagation.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isHandled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isStopped</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Target</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the actor that the event originated from.</comment>
        </property>
        <property>
            <name>Stage</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
            <comment>The stage for the actor the event was fired on.</comment>
        </property>
        <property>
            <name>Bubbles</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>bubbles</name>
                <type>boolean</type>
            </parameter>
            <comment>If True, after the event is fired on the target actor, it will also be fired on each of the parent actors, all the way to the root.</comment>
        </property>
        <property>
            <name>ListenerActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the actor that this listener is attached to.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.Actor</name>
        <shortname>lgScn2DActor</shortname>
        <comment>2D scene graph node. An actor has a position, rectangular size, origin, scale, rotation, Z index, and color. The position
 corresponds to the unrotated, unscaled bottom left corner of the actor. The position is relative to the actor's parent. The
 origin is relative to the position and is used for scale and rotation.
 &lt;p&gt;
 An actor has a list of in progress {@link Action actions} that are applied to the actor (often over time). These are generally
 used to change the presentation of the actor (moving it, resizing it, etc). See {@link #act(float)}, {@link Action} and its
 many subclasses.
 &lt;p&gt;
 An actor has two kinds of listeners associated with it: "capture" and regular. The listeners are notified of events the actor
 or its children receive. The regular listeners are designed to allow an actor to respond to events that have been delivered.
 The capture listeners are designed to allow a parent or container actor to handle events before child actors. See {@link #fire}
 for more details.
 &lt;p&gt;
 An {@link InputListener} can receive all the basic input events. More complex listeners (like {@link ClickListener} and
 {@link ActorGestureListener}) can listen for and combine primitive events and recognize complex interactions like multi-touch
 or pinch.</comment>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Raises the Draw event to draw the actor. Typically this is called each frame by the Draw function of the actor's parent.
lgSpriteBatch.Begin has already been called. The SpriteBatch is configured to draw in the parent's coordinate system.
ParentAlpha: Should be multiplied with the actor's alpha, allowing a parent's alpha to affect all children.
Example:&lt;code&gt;
Sub MyActor_Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)
	Dim Actor As lgScn2DActor = Sender
	SpriteBatch.SetColorRGBA(Actor.Color.R, Actor.Color.G, Actor.Color.B, Actor.Color.A * ParentAlpha)
	SpriteBatch.DrawRegion3(MyTexRegion, Actor.X, Actor.Y, Actor.OriginX, Actor.OriginY, Actor.Width, Actor.Height, Actor.ScaleX, Actor.ScaleY, Actor.Rotation)
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new actor.
EvtPrefix: The prefix of Act and Draw events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.Action</name>
        <shortname>lgScn2DAction</shortname>
        <comment>Actions attach to an {@link Actor} and perform some task, often over time.</comment>
        <owner>process</owner>
        <method>
            <name>restart</name>
            <comment>Sets the state of the action so it can be run again.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>Actor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the actor this action is used for, or Null if the action is not attached to an actor.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.actions.Actions</name>
        <shortname>lgScn2DActions</shortname>
        <comment>Static convenience methods for using pooled actions, intended for static import.</comment>
        <owner>process</owner>
        <method>
            <name>RotateBy</name>
            <comment>Rotates the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateByAction</returntype>
            <parameter>
                <name>rotationAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddListener2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>targetActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>Visible</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.VisibleAction</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>After</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AfterAction</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>FadeOut</name>
            <comment>Transitions from the alpha at the time this action starts to an alpha of 0.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddActionToActor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AddAction</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>targetActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>Delay</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.DelayAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ScaleTo</name>
            <comment>Scales the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RotateTo3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateToAction</returntype>
            <parameter>
                <name>rotation</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Forever</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RepeatAction</returntype>
            <parameter>
                <name>repeatedAction</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>TimeScale</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaledAction</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>RotateTo2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateToAction</returntype>
            <parameter>
                <name>rotation</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Sequence</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SequenceAction</returntype>
            <parameter>
                <name>actions</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action[]</type>
            </parameter>
        </method>
        <method>
            <name>Alpha3</name>
            <comment>Transitions from the alpha at the time this action starts to the specified alpha.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>FadeOut2</name>
            <comment>Transitions from the alpha at the time this action starts to an alpha of 0.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Repeat</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RepeatAction</returntype>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>repeatedAction</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>Alpha2</name>
            <comment>Transitions from the alpha at the time this action starts to the specified alpha.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RemoveActionFromActor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RemoveAction</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>targetActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>Show</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.VisibleAction</returntype>
        </method>
        <method>
            <name>Parallel2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ParallelAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>Parallel</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ParallelAction</returntype>
            <parameter>
                <name>actions</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action[]</type>
            </parameter>
        </method>
        <method>
            <name>Parallel4</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ParallelAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action4</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>Parallel3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ParallelAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>SizeBy</name>
            <comment>Sizes the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveBy</name>
            <comment>Moves the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Touchable</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.TouchableAction</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
        </method>
        <method>
            <name>Parallel5</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ParallelAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action4</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action5</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>SizeTo</name>
            <comment>Sizes the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Color</name>
            <comment>Sets the actor's color instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ColorAction</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>RemoveActor2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction</returntype>
            <parameter>
                <name>removeActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>RotateBy3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateByAction</returntype>
            <parameter>
                <name>rotationAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>RotateBy2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateByAction</returntype>
            <parameter>
                <name>rotationAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>FadeIn2</name>
            <comment>Transitions from the alpha at the time this action starts to an alpha of 1.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>CallSub</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RunnableAction</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>SubName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Parameter</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>MoveBy2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveBy3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Alpha</name>
            <comment>Sets the actor's alpha instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SizeBy3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>SizeBy2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SizeTo2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SizeTo3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SizeToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>RemoveListener2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>targetActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>Hide</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.VisibleAction</returntype>
        </method>
        <method>
            <name>removeActor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction</returntype>
        </method>
        <method>
            <name>FadeIn</name>
            <comment>Transitions from the alpha at the time this action starts to an alpha of 1.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AlphaAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ScaleBy2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ScaleBy3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Color3</name>
            <comment>Transitions from the color at the time this action starts to the specified color.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ColorAction</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>AddListener</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>MoveTo</name>
            <comment>Moves the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Sequence5</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SequenceAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action4</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action5</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>ScaleBy</name>
            <comment>Scales the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction</returntype>
            <parameter>
                <name>amountX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>amountY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Sequence2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SequenceAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>Sequence4</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SequenceAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action4</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>Sequence3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.SequenceAction</returntype>
            <parameter>
                <name>action1</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action2</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
            <parameter>
                <name>action3</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>MoveTo2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveTo3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.MoveToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Delay2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.DelayAction</returntype>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>delayedAction</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>ScaleTo3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>interpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
        </method>
        <method>
            <name>Color2</name>
            <comment>Transitions from the color at the time this action starts to the specified color.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ColorAction</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ScaleTo2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RotateTo</name>
            <comment>Rotates the actor instantly.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.actions.RotateToAction</returntype>
            <parameter>
                <name>rotation</name>
                <type>float</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.glutils.PixmapTextureData</name>
        <shortname>lgPixmapTextureData</shortname>
        <owner>process</owner>
        <method>
            <name>consumeCompressedData</name>
            <comment>Uploads the pixel data to the OpenGL ES texture. The caller must bind an OpenGL ES texture. A call to Prepare must precede a call to this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>Format</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>DisposePixmap</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isPrepared</name>
            <comment>Returns whether the TextureData is prepared or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>consumePixmap</name>
            <comment>Returns the Pixmap for upload by Texture. A call to Prepare must precede a call to this method. Any internal datastructures created in Prepare should be disposed of here.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
        </method>
        <method>
            <name>useMipMaps</name>
            <comment>Returns whether to generate mipmaps or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>disposePixmap</name>
            <comment>Returns whether the caller of ConsumePixmap should dispose the Pixmap returned by ConsumePixmap.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>prepare</name>
            <comment>Prepares the TextureData for a call to ConsumePixmap or ConsumeCompressedData. This method can be called from a non OpenGL thread and should thus not interact with OpenGL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isManaged</name>
            <comment>Returns whether this implementation can cope with a EGL context loss.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Format</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>DATATYPE_Float</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Compressed</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Pixmap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.glutils.FileTextureData</name>
        <shortname>lgFileTextureData</shortname>
        <owner>process</owner>
        <method>
            <name>consumeCompressedData</name>
            <comment>Uploads the pixel data to the OpenGL ES texture. The caller must bind an OpenGL ES texture. A call to Prepare must precede a call to this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>PreloadedPixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>Format</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>consumePixmap</name>
            <comment>Returns the Pixmap for upload by Texture. A call to Prepare must precede a call to this method. Any internal datastructures created in Prepare should be disposed of here.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
        </method>
        <method>
            <name>isPrepared</name>
            <comment>Returns whether the TextureData is prepared or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>useMipMaps</name>
            <comment>Returns whether to generate mipmaps or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>disposePixmap</name>
            <comment>Returns whether the caller of ConsumePixmap should dispose the Pixmap returned by ConsumePixmap.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>prepare</name>
            <comment>Prepares the TextureData for a call to ConsumePixmap or ConsumeCompressedData. This method can be called from a non OpenGL thread and should thus not interact with OpenGL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isManaged</name>
            <comment>Returns whether this implementation can cope with a EGL context loss.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Format</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FileHandle</name>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>DATATYPE_Float</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>copyToPOT</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>DATATYPE_Compressed</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Pixmap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.glutils.ETC1TextureData</name>
        <shortname>lgETC1TextureData</shortname>
        <owner>process</owner>
        <method>
            <name>consumeCompressedData</name>
            <comment>Uploads the pixel data to the OpenGL ES texture. The caller must bind an OpenGL ES texture. A call to Prepare must precede a call to this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>consumePixmap</name>
            <comment>Returns the Pixmap for upload by Texture. A call to Prepare must precede a call to this method. Any internal datastructures created in Prepare should be disposed of here.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
        </method>
        <method>
            <name>isPrepared</name>
            <comment>Returns whether the TextureData is prepared or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>useMipMaps</name>
            <comment>Returns whether to generate mipmaps or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>disposePixmap</name>
            <comment>Returns whether the caller of ConsumePixmap should dispose the Pixmap returned by ConsumePixmap.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>prepare</name>
            <comment>Prepares the TextureData for a call to ConsumePixmap or ConsumeCompressedData. This method can be called from a non OpenGL thread and should thus not interact with OpenGL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isManaged</name>
            <comment>Returns whether this implementation can cope with a EGL context loss.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Format</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>DATATYPE_Float</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Compressed</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Pixmap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.WindowedMean</name>
        <shortname>lgMathWindowedMean</shortname>
        <comment>A simple class keeping track of the mean of a stream of values within a certain window. the WindowedMean will only return a
 value in case enough data has been sampled. After enough data has been sampled the oldest sample will be replaced by the newest
 in case a new sample is added.</comment>
        <owner>process</owner>
        <method>
            <name>addValue</name>
            <comment>adds a new sample to this mean. In case the window is full the oldest value will be replaced by this new value.
value: The value to add</comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>clears this WindowedMean. The class will only return meaningful values after enough data has been added again.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>standardDeviation</name>
            <comment>
Return type: @return:The standard deviation</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>hasEnoughData</name>
            <comment>
Return type: @return:whether the value returned will be meaningful</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Latest</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Oldest</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Mean</name>
            <returntype>float</returntype>
            <comment>returns the mean of the samples added to this instance. Only returns meaningful results when at least window_size samples
 as specified in the constructor have been added.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Vector3</name>
        <shortname>lgMathVector3</shortname>
        <comment>Encapsulates a 3D vector. Allows chaining operations by returning a reference to itself in all modification methods.</comment>
        <owner>process</owner>
        <method>
            <name>dst2</name>
            <comment>Returns the squared distance between this point and the given point
point: The other point
Return type: @return:The squared distance</comment>
            <returntype>float</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>scale</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>scalarX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scalarY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scalarZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sub</name>
            <comment>Subtracts the given vector from this vector
a_vec: The other vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>a_vec</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>rotate</name>
            <comment>Rotates this vector by the given angle in degrees around the given axis.
degrees: the angle in degrees
axisX: the x-component of the axis
axisY: the y-component of the axis
axisZ: the z-component of the axis
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>axisX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>axisY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>axisZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>slerp</name>
            <comment>Spherically interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is
 stored in this vector.
target: The target vector
alpha: The interpolation coefficient
Return type: @return:This vector for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>target</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>set</name>
            <comment>Sets the vector to the given components
x: The x-component
y: The y-component
z: The z-component
Return type: @return:this vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>div</name>
            <comment>
value: The value
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isUnit</name>
            <comment>
Return type: @return:Whether this vector is a unit length vector</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dst</name>
            <comment>
Return type: @return:The euclidian distance between the two specified vectors</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>add</name>
            <comment>Adds the given vector to this vector
vector: The other vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>dot</name>
            <comment>Returns the dot product between this and the given vector.
x: The x-component of the other vector
y: The y-component of the other vector
z: The z-component of the other vector
Return type: @return:The dot product</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isUnit2</name>
            <comment>
Return type: @return:Whether this vector is a unit length vector within the given margin
 Comparison is done using len2(), it is up to the application to supply margin^2 argument if necessary.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>margin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>set2</name>
            <comment>Sets the components from the array. The array must have at least 3 elements</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>limit</name>
            <comment>Limits this vector's length to given value
limit: Max length
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>limit</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>crs</name>
            <comment>Sets this vector to the cross product between it and the other vector.
vector: The other vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>rot</name>
            <comment>Multiplies this vector by the first three columns of the matrix, essentially only applying rotation and scaling.
matrix: The matrix
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>epsilonEquals</name>
            <comment>Compares this vector with the other vector, using the supplied epsilon for fuzzy equality testing.
obj: 
epsilon: 
Return type: @return:whether the vectors are the same.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>epsilon</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>idt</name>
            <comment>
vector: The other vector
Return type: @return:Wether this and the other vector are equal</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>len2</name>
            <comment>
Return type: @return:The squared euclidian length</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>len</name>
            <comment>
Return type: @return:The euclidian length</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>mul</name>
            <comment>Left-multiplies the vector by the given matrix, assuming the fourth (w) component of the vector is 1.
matrix: The matrix
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>cpy</name>
            <comment>
Return type: @return:a copy of this vector</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </method>
        <method>
            <name>nor</name>
            <comment>Normalizes this vector to unit length. Does nothing if it is zero.
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </method>
        <method>
            <name>clamp</name>
            <comment>Clamps this vector's length to given value
min: Min length
max: Max length
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero2</name>
            <comment>
Return type: @return:Whether the length of this vector is smaller than the given margin
 Comparison is done using len2(), it is up to the application to supply margin^2 argument if necessary.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>margin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>prj</name>
            <comment>Multiplies this vector by the given matrix dividing by w, assuming the fourth (w) component of the vector is 1.
 This is mostly used to project/unproject vectors via a perspective projection matrix.
matrix: The matrix.
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>scl</name>
            <comment>Scales this vector by the given value
value: The value
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero</name>
            <comment>
Return type: @return:Whether this vector is a zero vector</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>lerp</name>
            <comment>Linearly interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is stored
 in this vector.
target: The target vector
alpha: The interpolation coefficient
Return type: @return:This vector for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>target</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>Y3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>X3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>Zero</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>z</name>
            <comment>the z-component of this vector</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>Z3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>y</name>
            <comment>the y-component of this vector</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>x</name>
            <comment>the x-component of this vector</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Vector2</name>
        <shortname>lgMathVector2</shortname>
        <comment>Encapsulates a 2D vector. Allows chaining methods by returning a reference to itself</comment>
        <owner>process</owner>
        <method>
            <name>dst2</name>
            <comment>Returns the squared distance between this vector and the other vector.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>dst2_xy</name>
            <comment>Returns the squared distance between this vector and the other vector.
x: The x-component of the other vector
y: The y-component of the other vector</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sub</name>
            <comment>Subtracts the given vector from this vector.
v: The vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotate</name>
            <comment>Rotates the Vector2 by the given angle, counter-clockwise assuming the y-axis points up.
degrees: the angle in degrees</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rotate90</name>
            <comment>Rotates the Vector2 by 90 degrees in the specified direction, where &amp;gt;= 0 is counter-clockwise and &amp;lt; 0 is clockwise.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>div</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isUnit</name>
            <comment>
Return type: @return:Whether this vector is a unit length vector</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dst</name>
            <comment>Returns the distance between this vector and the other vector.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>add</name>
            <comment>Adds the given vector to this vector
v: The vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isUnit2</name>
            <comment>
Return type: @return:Whether this vector is a unit length vector within the given margin.
 Comparison is done using len2(), it is up to the application to supply margin^2 argument if necessary.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>margin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dot</name>
            <comment>Returns the dot product between this vector and the other vector.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>add2</name>
            <comment>Adds the given components to this vector
x: The x-component
y: The y-component
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>crs2</name>
            <comment>Calculates the 2D cross product between this and the given vector.
x: the x-coordinate of the other vector
y: the y-coordinate of the other vector
Return type: @return:the cross product</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Sets the components of this vector
x: The x-component
y: The y-component
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>div3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>other</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>div2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>vx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>limit</name>
            <comment>Limits this vector's length to given value
limit: Max length
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>limit</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>crs</name>
            <comment>Calculates the 2D cross product between this and the given vector.
v: the other vector
Return type: @return:the cross product</comment>
            <returntype>float</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>epsilonEquals</name>
            <comment>Compares this vector with the other vector, using the supplied epsilon for fuzzy equality testing.
x: 
y: 
epsilon: 
Return type: @return:whether the vectors are the same.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>epsilon</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>epsilonEquals2</name>
            <comment>Compares this vector with the other vector, using the supplied epsilon for fuzzy equality testing.
obj: 
epsilon: 
Return type: @return:whether the vectors are the same.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>epsilon</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>len2</name>
            <comment>
Return type: @return:The squared euclidian length</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>len</name>
            <comment>
Return type: @return:The euclidian length</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>mul</name>
            <comment>Left-multiplies this vector by the given matrix
mat: the matrix
Return type: @return:this vector</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>mat</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>cpy</name>
            <comment>
Return type: @return:a copy of this vector</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets this vector from the given vector
v: The vector
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>nor</name>
            <comment>Normalizes this vector. Does nothing if it is zero.
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </method>
        <method>
            <name>clamp</name>
            <comment>Clamps this vector's length to given value
min: Min length
max: Max length
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero2</name>
            <comment>
Return type: @return:Whether the length of this vector is smaller than the given margin
 Comparison is done using len2(), it is up to the application to supply margin^2 argument if necessary.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>margin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>dst_xy</name>
            <comment>Returns the distance between this vector and the other vector.
x: The x-component of the other vector
y: The y-component of the other vector</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero</name>
            <comment>
Return type: @return:Whether this vector is a zero vector</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>lerp</name>
            <comment>Linearly interpolates between this vector and the target vector by alpha which is in the range [0,1]. The result is stored
 in this vector.
target: The target vector
alpha: The interpolation coefficient
Return type: @return:This vector for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>target</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scl</name>
            <comment>Multiplies this vector by a scalar
scalar: The scalar
Return type: @return:This vector for chaining</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>scalar</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Angle</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the angle in degrees of this vector (point) relative to the x-axis.
Angles are towards the positive y-axis (typically counter-clockwise) and between 0 and 360.</comment>
        </property>
        <field>
            <name>X2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>Y2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>Zero</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>y</name>
            <comment>the y-component of this vector</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>x</name>
            <comment>the x-component of this vector</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Rectangle</name>
        <shortname>lgMathRectangle</shortname>
        <comment>Encapsulates a 2D rectangle defined by it's bottom corner point and its extends in x (width) and y (height).</comment>
        <owner>process</owner>
        <method>
            <name>getCenter</name>
            <comment>Calculates the center of the rectangle. Results are located in the given Vector2
vector: the Vector2 to use
Return type: @return:the given vector with results stored inside</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the squared size of this rectangle
sizeXY: The size
Return type: @return:this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>sizeXY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>fitOutside</name>
            <comment>Fits this rectangle around another rectangle while maintaining aspect ratio This scales and centers the rectangle to the
 other rectangle (e.g. Having a camera translate and scale to show a given area)
rect: the other rectangle to fit this rectangle around
Return type: @return:this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>rect</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>setSize2</name>
            <comment>Sets the width and height of this rectangle
width: The width
height: The height
 Returns this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>merge</name>
            <comment>Merges this rectangle with the other rectangle.
rect: the other rectangle
 Returns this rectangle for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>rect</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y-coordinates of the bottom left corner from vector
position: The position vector
Return type: @return:this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>setPosition2</name>
            <comment>Sets the x and y-coordinates of the bottom left corner
x: The x-coordinate
y: The y-coordinate
 Returns this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>contains</name>
            <comment>
x: point x coordinate
y: point y coordinate
Return type: @return:whether the point is contained in the rectangle</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getPosition</name>
            <comment>return the Vector2 with coordinates of this rectangle
position: The Vector2</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets the values of the given rectangle to this rectangle.
rect: the other rectangle
 Returns this rectangle for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>rect</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>SetCenter2</name>
            <comment>Moves this rectangle so that its center point is located at a given position
x: the position's x
y: the position's y
Return type: @return:this for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overlaps</name>
            <comment>
r: the other {@link Rectangle}
Return type: @return:whether this rectangle overlaps the other rectangle.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>r</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>fitInside</name>
            <comment>Fits this rectangle into another rectangle while maintaining aspect ratio. This scales and centers the rectangle to the
 other rectangle (e.g. Scaling a texture within a arbitrary cell without squeezing)
rect: the other rectangle to fit this rectangle inside
Return type: @return:this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>rect</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment>
x: bottom-left x coordinate
y: bottom-left y coordinate
width: width
height: height
 Returns this rectangle for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getSize</name>
            <comment>
size: The Vector2
Return type: @return:the Vector2 with size of this rectangle</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>size</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>setCenter</name>
            <comment>Moves this rectangle so that its center point is located at a given position
position: the position
Return type: @return:this for chaining</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>AspectRatio</name>
            <returntype>float</returntype>
            <comment>Calculates the aspect ratio ( width / height ) of this rectangle
 Returns Float.NaN if height is 0 to avoid ArithmeticException</comment>
        </property>
        <field>
            <name>tmp2</name>
            <comment>Static temporary rectangle. Use with care! Use only when sure other code will not also use this.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
        </field>
        <field>
            <name>height</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>width</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>tmp</name>
            <comment>Static temporary rectangle. Use with care! Use only when sure other code will not also use this.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
        </field>
        <field>
            <name>y</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>x</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Polyline</name>
        <shortname>lgMathPolyline</shortname>
        <owner>process</owner>
        <method>
            <name>setOrigin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>amount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rotate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>calculateScaledLength</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dirty</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>translate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>calculateLength</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScaledLength</name>
            <returntype>float</returntype>
            <comment>Returns the euclidean length of the polyline</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Length</name>
            <returntype>float</returntype>
            <comment>Returns the euclidean length of the polyline without scaling</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TransformedVertices</name>
            <returntype>float[]</returntype>
            <comment>Returns vertices scaled, rotated, and offset by the polygon position.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment>Returns vertices without scaling or rotation and without being offset by the polyline position.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Polygon</name>
        <shortname>lgMathPolygon</shortname>
        <comment>Encapsulates a 2D polygon defined by it's vertices relative to an origin point (default of 0, 0).</comment>
        <owner>process</owner>
        <method>
            <name>setOrigin</name>
            <comment>Sets the origin point to which all of the polygon's local vertices are relative to.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scale</name>
            <comment>Applies additional scaling to the polygon by the supplied amount.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>area</name>
            <comment>Returns the area contained within the polygon.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>rotate</name>
            <comment>Applies additional rotation to the polygon by the supplied degrees.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dirty</name>
            <comment>Sets the polygon's world vertices to be recalculated when calling {@link #getTransformedVertices() getTransformedVertices}.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the amount of scaling to be applied to the polygon.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the polygon's position within the world.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>contains</name>
            <comment>Returns whether an x, y pair is contained within the polygon.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>translate</name>
            <comment>Translates the polygon's position by the specified horizontal and vertical amounts.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <comment>Returns the y-coordinate of the polygon's origin point.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <comment>Returns the x-coordinate of the polygon's origin point.</comment>
        </property>
        <property>
            <name>BoundingRectangle</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment>Returns an axis-aligned bounding box of this polygon.  
Note the returned Rectangle is cached in this polygon, and will be reused if this Polygon is changed.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment>Returns the y-coordinate of the polygon's position within the world.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment>Returns the total rotation applied to the polygon.</comment>
        </property>
        <property>
            <name>TransformedVertices</name>
            <returntype>float[]</returntype>
            <comment>Calculates and returns the vertices of the polygon after scaling, rotation, and positional translations have been applied,
 as they are position within the world.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment>Returns the x-coordinate of the polygon's position within the world.</comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
            <comment>Returns the polygon's local vertices without scaling or rotation and without being offset by the polygon position.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <comment>Returns the total horizontal scaling applied to the polygon.</comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <comment>Returns the total vertical scaling applied to the polygon.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Plane</name>
        <shortname>lgMathPlane</shortname>
        <comment>A plane defined via a unit length normal and the distance from the origin, as you learned in your math class.</comment>
        <owner>process</owner>
        <method>
            <name>distance</name>
            <comment>Calculates the shortest signed distance between the plane and the given point.
point: The point
Return type: @return:the shortest signed distance between the plane and the point</comment>
            <returntype>float</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>isFrontFacing</name>
            <comment>Returns whether the plane is facing the direction vector. Think of the direction vector as the direction a camera looks in.
 This method will return true if the front side of the plane determined by its normal faces the camera.
direction: the direction
Return type: @return:whether the plane is front facing</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>direction</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Set6</name>
            <comment>Sets this plane from the given plane
plane: the plane</comment>
            <returntype>void</returntype>
            <parameter>
                <name>plane</name>
                <type>com.badlogic.gdx.math.Plane</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Constructs a new plane based on the normal and distance to the origin.
normal: The plane normal
d: The distance to the origin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>normal</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>d</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set4</name>
            <comment>Sets the plane to the given point and normal.
point: the point on the plane
normal: the normal of the plane</comment>
            <returntype>void</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>normal</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>Set5</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pointX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>norX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>norY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>norZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>testPoint</name>
            <comment>Returns on which side the given point lies relative to the plane and its normal. PlaneSide.Front refers to the side the
 plane normal points to.
point: The point
Return type: @return:The side the point lies relative to the plane</comment>
            <returntype EnumType="true">com.badlogic.gdx.math.Plane.PlaneSide</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets the plane normal and distance to the origin based on the three given points which are considered to be on the plane.
 The normal is calculated via a cross product between (point1-point2)x(point2-point3)
point1: 
point2: 
point3: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>point1</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>point2</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>point3</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>Set3</name>
            <comment>Sets the plane normal and distance
nx: normal x-component
ny: normal y-component
nz: normal z-component
d: distance to origin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>nx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ny</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>nz</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>d</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>D</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Normal</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment></comment>
        </property>
        <field>
            <name>PLANESIDE_OnPlane</name>
            <comment>Enum specifying on which side a point lies respective to the plane and it's normal. {@link PlaneSide#Front} is the side to
 which the normal points.</comment>
            <returntype EnumType="true">com.badlogic.gdx.math.Plane.PlaneSide</returntype>
        </field>
        <field>
            <name>PLANESIDE_Back</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.math.Plane.PlaneSide</returntype>
        </field>
        <field>
            <name>PLANESIDE_Front</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.math.Plane.PlaneSide</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Matrix4</name>
        <shortname>lgMathMatrix4</shortname>
        <comment>Encapsulates a &lt;a href="http://en.wikipedia.org/wiki/Row-major_order#Column-major_order"&gt;column major&lt;/a&gt; 4 by 4 matrix. Like
 the {@link Vector3} class it allows the chaining of methods by returning a reference to itself. For example:
 
 &lt;pre&gt;
 Matrix4 mat = new Matrix4().trn(position).mul(camera.combined);
 &lt;/pre&gt;</comment>
        <owner>process</owner>
        <method>
            <name>scale</name>
            <comment>Postmultiplies this matrix with a scale matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
scaleX: The scale in the x-axis.
scaleY: The scale in the y-axis.
scaleZ: The scale in the z-axis.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>det</name>
            <comment>Computes the determinante of the given matrix. The matrix array is assumed to hold a 4x4 column major matrix as you can get
 from {@link Matrix4#val}.
values: the matrix values.
Return type: @return:the determinante.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>rotate</name>
            <comment>Postmultiplies this matrix with a (counter-clockwise) rotation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
axis: The vector axis to rotate around.
degrees: The angle in degrees.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>set</name>
            <comment>Sets the matrix to the given matrix.
matrix: The matrix that is to be copied. (The given matrix is not modified)
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>setToOrtho2D</name>
            <comment>Sets this matrix to an orthographic projection matrix with the origin at (x,y) extending by width and height. The near plane
 is set to 0, the far plane is set to 1.
x: The x-coordinate of the origin
y: The y-coordinate of the origin
width: The width
height: The height
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToRotation</name>
            <comment>Sets the matrix to a rotation matrix around the given axis.
axis: The axis
degrees: The angle in degrees
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToOrtho</name>
            <comment>Sets the matrix to an orthographic projection like glOrtho (http://www.opengl.org/sdk/docs/man/xhtml/glOrtho.xml) following
 the OpenGL equivalent
left: The left clipping plane
right: The right clipping plane
bottom: The bottom clipping plane
top: The top clipping plane
near: The near clipping plane
far: The far clipping plane
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>near</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>far</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scl2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>scl3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setFromEulerAngles</name>
            <comment>Sets this matrix to a rotation matrix from the given euler angles.
yaw: the yaw in degrees
pitch: the pitch in degrees
roll: the roll in degrees
Return type: @return:This matrix</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>yaw</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pitch</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>roll</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToTranslation</name>
            <comment>Sets this matrix to a translation matrix, overwriting it first by an identity matrix and then setting the 4th column to the
 translation vector.
vector: The translation vector
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>getScale</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>getTranslation</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>setToWorld</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>forward</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>up</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>toNormalMatrix</name>
            <comment>removes the translational part and transposes the matrix.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
        </method>
        <method>
            <name>setTranslation</name>
            <comment>Sets the 4th column to the translation vector.
vector: The translation vector
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>det3x3</name>
            <comment>
Return type: @return:The determinant of the 3x3 upper left matrix</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>rot</name>
            <comment>Multiplies the vector with the top most 3x3 sub-matrix of the given matrix. The matrix array is assumed to hold a 4x4 column
 major matrix as you can get from {@link Matrix4#val}. The vector array is assumed to hold a 3-component vector, with x being
 the first element, y being the second and z being the last component. The result is stored in the vector array. This is the
 same as {@link Vector3#rot(Matrix4)}.
mat: the matrix
vec: the vector.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>vec</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>translate2</name>
            <comment>Postmultiplies this matrix by a translation matrix. Postmultiplication is also used by OpenGL ES'
 glTranslate/glRotate/glScale
translation: 
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>translation</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>idt</name>
            <comment>Sets the matrix to an identity matrix.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
        </method>
        <method>
            <name>tra</name>
            <comment>Transposes the matrix.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
        </method>
        <method>
            <name>mul</name>
            <comment>Postmultiplies this matrix with the given matrix, storing the result in this matrix. For example:
 
 &lt;pre&gt;
 A.mul(B) results in A := AB.
 &lt;/pre&gt;
matrix: The other matrix to multiply by.
Return type: @return:This matrix for the purpose of chaining operations together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>cpy</name>
            <comment>
Return type: @return:a copy of this matrix</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
        </method>
        <method>
            <name>setToLookAt</name>
            <comment>Sets the matrix to a look at matrix with a direction and an up vector. Multiply with a translation matrix to get a camera
 model view matrix.
direction: The direction vector
up: The up vector
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>direction</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>up</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>setToScaling</name>
            <comment>Sets this matrix to a scaling matrix
vector: The scaling vector
Return type: @return:This matrix for chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>mulVec</name>
            <comment>Multiplies the vector with the given matrix. The matrix array is assumed to hold a 4x4 column major matrix as you can get
 from {@link Matrix4#val}. The vector array is assumed to hold a 3-component vector, with x being the first element, y being
 the second and z being the last component. The result is stored in the vector array. This is the same as
 {@link Vector3#mul(Matrix4)}.
mat: the matrix
vec: the vector.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>vec</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>setToProjection</name>
            <comment>Sets the matrix to a projection matrix with a near- and far plane, a field of view in degrees and an aspect ratio.
near: The near plane
far: The far plane
fov: The field of view in degrees
aspectRatio: The "width over height" aspect ratio
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>near</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>far</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fov</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>aspectRatio</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToRotationRad</name>
            <comment>Sets the matrix to a rotation matrix around the given axis.
axis: The axis
radians: The angle in radians
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>radians</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToTranslationAndScaling</name>
            <comment>Sets this matrix to a translation and scaling matrix by first overwriting it with an identity and then setting the
 translation vector in the 4th column and the scaling vector in the diagonal.
translation: The translation vector
scaling: The scaling vector
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>translation</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>scaling</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>trn</name>
            <comment>Adds a translational component to the matrix in the 4th column. The other columns are untouched.
vector: The translation vector to add to the current matrix. (This vector is not modified)
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>inv</name>
            <comment>Inverts the matrix. Stores the result in this matrix.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
        </method>
        <method>
            <name>translate</name>
            <comment>Postmultiplies this matrix by a translation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
x: Translation in the x-axis.
y: Translation in the y-axis.
z: Translation in the z-axis.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>prj</name>
            <comment>Multiplies the vector with the given matrix, performing a division by w. The matrix array is assumed to hold a 4x4 column
 major matrix as you can get from {@link Matrix4#val}. The vector array is assumed to hold a 3-component vector, with x being
 the first element, y being the second and z being the last component. The result is stored in the vector array. This is the
 same as {@link Vector3#prj(Matrix4)}.
mat: the matrix
vec: the vector.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>vec</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>lerp</name>
            <comment>Linearly interpolates between this matrix and the given matrix mixing by alpha
matrix: the matrix
alpha: the alpha value in the range [0,1]
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scl</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Values</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
        <field>
            <name>val</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>M31</name>
            <comment>WY: Typically the value zero. On Vector3 multiplication this value is ignored.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M00</name>
            <comment>XX: Typically the unrotated X component for scaling, also the cosine of the angle when rotated on the Y and/or Z axis. On
 Vector3 multiplication this value is multiplied with the source X component and added to the target X component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M13</name>
            <comment>YW: Typically the translation of the Y component. On Vector3 multiplication this value is added to the target Y component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M12</name>
            <comment>YZ: Typically the negative sine of the angle when rotated on the X axis. On Vector3 multiplication this value is multiplied
 with the source Z component and added to the target Y component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M30</name>
            <comment>WX: Typically the value zero. On Vector3 multiplication this value is ignored.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M02</name>
            <comment>XZ: Typically the sine of the angle when rotated on the Y axis. On Vector3 multiplication this value is multiplied with the
 source Z component and added to the target X component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M11</name>
            <comment>YY: Typically the unrotated Y component for scaling, also the cosine of the angle when rotated on the X and/or Z axis. On
 Vector3 multiplication this value is multiplied with the source Y component and added to the target Y component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M20</name>
            <comment>ZX: Typically the negative sine of the angle when rotated on the Y axis. On Vector3 multiplication this value is multiplied
 with the source X component and added to the target Z component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M01</name>
            <comment>XY: Typically the negative sine of the angle when rotated on the Z axis. On Vector3 multiplication this value is multiplied
 with the source Y component and added to the target X component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M10</name>
            <comment>YX: Typically the sine of the angle when rotated on the Z axis. On Vector3 multiplication this value is multiplied with the
 source X component and added to the target Y component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M22</name>
            <comment>ZZ: Typically the unrotated Z component for scaling, also the cosine of the angle when rotated on the X and/or Y axis. On
 Vector3 multiplication this value is multiplied with the source Z component and added to the target Z component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M21</name>
            <comment>ZY: Typical the sine of the angle when rotated on the X axis. On Vector3 multiplication this value is multiplied with the
 source Y component and added to the target Z component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M33</name>
            <comment>WW: Typically the value one. On Vector3 multiplication this value is ignored.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M32</name>
            <comment>WZ: Typically the value zero. On Vector3 multiplication this value is ignored.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M23</name>
            <comment>ZW: Typically the translation of the Z component. On Vector3 multiplication this value is added to the target Z component.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>tmp</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>M03</name>
            <comment>XW: Typically the translation of the X component. On Vector3 multiplication this value is added to the target X component.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Matrix3</name>
        <shortname>lgMathMatrix3</shortname>
        <comment>A 3x3 &lt;a href="http://en.wikipedia.org/wiki/Row-major_order#Column-major_order"&gt;column major&lt;/a&gt; matrix; useful for 2D
 transforms.</comment>
        <owner>process</owner>
        <method>
            <name>scale</name>
            <comment>Postmultiplies this matrix with a scale matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
scaleX: The scale in the x-axis.
scaleY: The scale in the y-axis.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>det</name>
            <comment>
Return type: @return:The determinant of this matrix</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>transpose</name>
            <comment>Transposes the current matrix.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
        </method>
        <method>
            <name>rotate</name>
            <comment>Postmultiplies this matrix with a (counter-clockwise) rotation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
degrees: The angle in degrees
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToRotation</name>
            <comment>Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis.
degrees: the angle in degrees.
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scl2</name>
            <comment>Scale this matrix using the x and y components of the vector but leave the rest of the matrix alone.
scale: The {@link Vector3} to use to scale this matrix.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>scl3</name>
            <comment>Scale this matrix using the x and y components of the vector but leave the rest of the matrix alone.
scale: The {@link Vector3} to use to scale this matrix. The z component will be ignored.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>setToRotation2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToTranslation</name>
            <comment>Sets this matrix to a translation matrix.
x: the translation in x
y: the translation in y
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getScale</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateRad</name>
            <comment>Postmultiplies this matrix with a (counter-clockwise) rotation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
radians: The angle in degrees
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>radians</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getTranslation</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Copies the values from the provided matrix to this matrix.
mat: The matrix to copy.
Return type: @return:This matrix for the purposes of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>mat</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>setToRotation3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>cos</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>sin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scale2</name>
            <comment>Postmultiplies this matrix with a scale matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
scale: The vector to scale the matrix by.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scale</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>translate2</name>
            <comment>Postmultiplies this matrix by a translation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
translation: The translation vector.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>translation</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>idt</name>
            <comment>Sets this matrix to the identity matrix
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
        </method>
        <method>
            <name>setToTranslation2</name>
            <comment>Sets this matrix to a translation matrix.
translation: The translation vector.
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>translation</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>mul</name>
            <comment>Postmultiplies this matrix with the provided matrix and stores the result in this matrix. For example:
 
 &lt;pre&gt;
 A.mul(B) results in A := AB
 &lt;/pre&gt;
m: Matrix to multiply by.
Return type: @return:This matrix for the purpose of chaining operations together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>m</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets this 3x3 matrix to the top left 3x3 corner of the provided 4x4 matrix.
mat: The matrix whose top left corner will be copied. This matrix will not be modified.
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>mat</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>Set3</name>
            <comment>Sets the matrix to the given matrix as a float array. The float array must have at least 9 elements; the first 9 will be
 copied.
values: The matrix, in float form, that is to be copied. Remember that this matrix is in &lt;a
           href="http://en.wikipedia.org/wiki/Row-major_order#Column-major_order"&gt;column major&lt;/a&gt; order.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>setToScaling</name>
            <comment>Sets this matrix to a scaling matrix.
scaleX: the scale in x
scaleY: the scale in y
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setToRotationRad</name>
            <comment>Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis.
radians: the angle in degrees.
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>radians</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>trn</name>
            <comment>Adds a translational component to the matrix in the 3rd column. The other columns are untouched.
x: The x-component of the translation vector.
y: The y-component of the translation vector.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>trn3</name>
            <comment>Adds a translational component to the matrix in the 3rd column. The other columns are untouched.
vector: The translation vector. (The z-component of the vector is ignored because this is a 3x3 matrix)
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>trn2</name>
            <comment>Adds a translational component to the matrix in the 3rd column. The other columns are untouched.
vector: The translation vector.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>vector</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>inv</name>
            <comment>Inverts this matrix given that the determinant is != 0.
Return type: @return:This matrix for the purpose of chaining operations.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>translate</name>
            <comment>Postmultiplies this matrix by a translation matrix. Postmultiplication is also used by OpenGL ES' 1.x
 glTranslate/glRotate/glScale.
x: The x-component of the translation vector.
y: The y-component of the translation vector.
Return type: @return:This matrix for the purpose of chaining.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scl</name>
            <comment>Scale the matrix in the both the x and y components by the scalar value.
scale: The single value that will be used to scale both the x and y components.
Return type: @return:This matrix for the purpose of chaining methods together.</comment>
            <returntype>com.badlogic.gdx.math.Matrix3</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Values</name>
            <returntype>float[]</returntype>
            <comment>Get the values in this matrix.</comment>
        </property>
        <property>
            <name>RotationRad</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>val</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>M00</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M12</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M20</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M11</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M02</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M10</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M01</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M22</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>M21</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.MathUtils</name>
        <shortname>lgMathUtils</shortname>
        <comment>Utility and fast math functions.
 &lt;p&gt;
 Thanks to Riven on JavaGaming.org for the basis of sin/cos/atan2/floor/ceil.</comment>
        <owner>process</owner>
        <method>
            <name>sinDeg</name>
            <comment>Returns the sine in radians from a lookup table.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>cos</name>
            <comment>Returns the cosine in radians from a lookup table.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>radians</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ceil</name>
            <comment>Returns the smallest integer greater than or equal to the specified float. This method will only properly ceil floats from
 -(2^14) to (Float.MAX_VALUE - 2^14).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>round</name>
            <comment>Returns the closest integer to the specified float. This method will only properly round floats from -(2^14) to
 (Float.MAX_VALUE - 2^14).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>atan2</name>
            <comment>Returns atan2 in radians from a lookup table.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>cosDeg</name>
            <comment>Returns the cosine in radians from a lookup table.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>roundPositive</name>
            <comment>Returns the closest integer to the specified float. This method will only properly round floats that are positive.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>floorPositive</name>
            <comment>Returns the largest integer less than or equal to the specified float. This method will only properly floor floats that are
 positive. Note this method simply casts the float to int.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RandomBoolean2</name>
            <comment>Returns true if a random value between 0 and 1 is less than the specified value.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>chance</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ceilPositive</name>
            <comment>Returns the smallest integer greater than or equal to the specified float. This method will only properly ceil floats that
 are positive.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>randomBoolean</name>
            <comment>Returns a random boolean value.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isPowerOfTwo</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isEqual2</name>
            <comment>Returns true if a is nearly equal to b.
a: the first value.
b: the second value.
tolerance: represent an upper bound below which the value is considered zero.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>tolerance</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RandomFloat</name>
            <comment>Returns random number between 0.0 (inclusive) and 1.0 (exclusive).</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>nextPowerOfTwo</name>
            <comment>Returns the next power of two. Returns the specified value if the value is already a power of two.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>floor</name>
            <comment>Returns the largest integer less than or equal to the specified float. This method will only properly floor floats from
 -(2^14) to (Float.MAX_VALUE - 2^14).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clamp2</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>min</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clamp</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sin</name>
            <comment>Returns the sine in radians from a lookup table.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>radians</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isEqual</name>
            <comment>Returns true if a is nearly equal to b. The function uses the default floating error tolerance.
a: the first value.
b: the second value.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero2</name>
            <comment>Returns true if the value is zero.
tolerance: represent an upper bound below which the value is considered zero.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>tolerance</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clamp3</name>
            <comment></comment>
            <returntype>short</returntype>
            <parameter>
                <name>value</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>min</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>RandomFloat2</name>
            <comment>Returns a random number between start (inclusive) and end (exclusive).</comment>
            <returntype>float</returntype>
            <parameter>
                <name>start</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isZero</name>
            <comment>Returns true if the value is zero (using the default tolerance as upper bound)</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>nanoToSec</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>degRad</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>E</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>degreesToRadians</name>
            <comment>multiply by this to convert from degrees to radians</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>PI2</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>radDeg</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>PI</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>radiansToDegrees</name>
            <comment>multiply by this to convert from radians to degrees</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>FLOAT_ROUNDING_ERROR</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Intersector</name>
        <shortname>lgMathIntersector</shortname>
        <comment>Class offering various static methods for intersection testing between different geometric objects.</comment>
        <owner>process</owner>
        <method>
            <name>splitTriangle</name>
            <comment>Splits the triangle by the plane. The result is stored in the SplitTriangle instance. Depending on where the triangle is
 relative to the plane, the result can be:
 
 - Triangle is fully in front/behind: SplitTriangle.front or SplitTriangle.back will contain the original
 triangle, SplitTriangle.total will be one.
 - Triangle has two vertices in front, one behind: SplitTriangle.front contains 2 triangles,
 SplitTriangle.back contains 1 triangles, SplitTriangle.total will be 3.
 - Triangle has one vertex in front, two behind: SplitTriangle.front contains 1 triangle,
 SplitTriangle.back contains 2 triangles, SplitTriangle.total will be 3.
 
 The input triangle should have the form: x, y, z, x2, y2, z2, x3, y3, y3. One can add additional attributes per vertex which
 will be interpolated if split, such as texture coordinates or normals. Note that these additional attributes won't be
 normalized, as might be necessary in case of normals.
split: output SplitTriangle</comment>
            <returntype>void</returntype>
            <parameter>
                <name>triangle</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>plane</name>
                <type>com.badlogic.gdx.math.Plane</type>
            </parameter>
            <parameter>
                <name>split</name>
                <type>com.badlogic.gdx.math.Intersector.SplitTriangle</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegments</name>
            <comment>Intersects the two line segments and returns the intersection point in intersection.
p1: The first point of the first line segment
p2: The second point of the first line segment
p3: The first point of the second line segment
p4: The second point of the second line segment
intersection: The intersection point (optional)
Return type: @return:Whether the two line segments intersect</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p3</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p4</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isPointInPolygon2</name>
            <comment>Returns true if the specified point is in the polygon.
offset: Starting polygon index.
count: Number of array indices to use after offset.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>polygon</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegmentCircle</name>
            <comment>Returns whether the given line segment intersects the given circle.
start: The start point of the line segment
end: The end point of the line segment
center: The center of the circle
squareRadius: The squared radius of the circle
Return type: @return:Whether the line segment and the circle intersect</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>center</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>squareRadius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isPointInPolygon</name>
            <comment>Checks whether the given point is in the polygon.
Polygon: Array of the polygon vertices.
Point: The point.
Returns true if the point is in the polygon.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Polygon</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
            <parameter>
                <name>Point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>overlaps</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>c1</name>
                <type>com.badlogic.gdx.math.Circle</type>
            </parameter>
            <parameter>
                <name>c2</name>
                <type>com.badlogic.gdx.math.Circle</type>
            </parameter>
        </method>
        <method>
            <name>intersectLinePolygon</name>
            <comment>Check whether the given line and polygon intersect.
p1: The first point of the line
p2: The second point of the line
polygon: The polygon
 Returns whether polygon and line intersects.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>polygon</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegmentPolygon</name>
            <comment>Checks whether the given line segment and polygon intersect.
p1: The first point of the segment
p2: The second point of the segment</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>polygon</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
        </method>
        <method>
            <name>intersectLines2</name>
            <comment>Intersects the two lines and returns the intersection point in Intersection.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>intersectLines</name>
            <comment>Intersects the two lines and returns the intersection point in intersection.
p1: The first point of the first line
p2: The second point of the first line
p3: The first point of the second line
p4: The second point of the second line
intersection: The intersection point
Return type: @return:Whether the two lines intersect</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p3</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>p4</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>intersectRayPlane</name>
            <comment>Intersects a ray and a plane. The intersection point is stored in Intersection in case an intersection is present.
ray: The ray
plane: The plane
intersection: The vector the intersection point is written to (optional)</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>plane</name>
                <type>com.badlogic.gdx.math.Plane</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>isPointInTriangle3</name>
            <comment>Returns whether the given point is inside the triangle. This assumes that the point is on the plane of the triangle. No
 check is performed that this is the case.
point: the point
t1: the first vertex of the triangle
t2: the second vertex of the triangle
t3: the third vertex of the triangle
Return type: @return:whether the point is in the triangle</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>t1</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>t2</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>t3</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>intersectRayBounds</name>
            <comment>Intersects a ray and a BoundingBox, returning the intersection point in Intersection.
ray: The ray
box: The box
intersection: The intersection point (optional)</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>box</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>overlapConvexPolygons</name>
            <comment>Check whether specified convex polygons overlap.
p1: The first polygon.
p2: The second polygon.
Return type: @return:Whether polygons overlap.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegmentCircleDisplace</name>
            <comment>Checks whether the line segment and the circle intersect and returns by how much and in what direction the line has to move
 away from the circle to not intersect.
start: The line segment starting point
end: The line segment end point
point: The center of the circle
radius: The radius of the circle
displacement: The displacement vector set by the method having unit length
Return type: @return:The displacement or Float.POSITIVE_INFINITY if no intersection is present</comment>
            <returntype>float</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>displacement</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isPointInTriangle2</name>
            <comment>Returns true if the given point is inside the triangle.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>c</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>intersectRayBoundsFast</name>
            <comment>Quick check whether the given ray and BoundingBox intersect.
ray: The ray
box: The bounding box
 Returns whether the ray and the bounding box intersect.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>box</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>nearestSegmentPoint</name>
            <comment>Returns a point on the segment nearest to the specified point.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>nearest</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegmentPlane</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>plane</name>
                <type>com.badlogic.gdx.math.Plane</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>isPointInTriangle</name>
            <comment>Returns true if the given point is inside the triangle.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>px</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>py</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ax</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ay</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>by</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>intersectRectangles</name>
            <comment>Determines whether the given rectangles intersect and, if they do, sets the supplied intersection rectangle to the area of overlap.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rectangle1</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <parameter>
                <name>rectangle2</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>distanceSegmentPoint</name>
            <comment>Returns the distance between the given segment and point.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>startX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>startY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>endY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>pointLineSide</name>
            <comment>Determines on which side of the given line the point is. Returns -1 if the point is on the left side of the line, 0 if the
 point is on the line and 1 if the point is on the right side of the line. Left and right are relative to the lines direction
 which is linePoint1 to linePoint2.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>linePoint1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>linePoint2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>distanceLinePoint</name>
            <comment>Returns the distance between the given line segment and point.
start: The line start point
end: The line end point
point: The point
Return type: @return:The distance between the line segment and the point.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>main</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>args</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>intersectRaySphere</name>
            <comment>Intersects a ray and a sphere, returning the intersection point in Intersection.
ray: The ray, the direction component must be normalized before calling this method
center: The center of the sphere
radius: The radius of the sphere
intersection: The intersection point (optional, can be null)</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>center</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>intersectSegments2</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>overlapConvexPolygons2</name>
            <comment>Check whether specified convex polygons overlap. If they do, optionally obtain a Minimum Translation Vector indicating the
 minimum magnitude vector required to push the polygons out of the collision.
p1: The first polygon.
p2: The second polygon.
mtv: A Minimum Translation Vector to fill in the case of a collision, or null (optional).
Return type: @return:Whether polygons overlap.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p1</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
            <parameter>
                <name>p2</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
            <parameter>
                <name>mtv</name>
                <type>com.badlogic.gdx.math.Intersector.MinimumTranslationVector</type>
            </parameter>
        </method>
        <method>
            <name>intersectLinePlane</name>
            <comment>Intersects a line and a plane. The intersection is returned as the distance from the first point to the plane. In case an
 intersection happened, the return value is in the range [0,1]. The intersection point can be recovered by point1 + t *
 (point2 - point1) where t is the return value of this method.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>plane</name>
                <type>com.badlogic.gdx.math.Plane</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>intersectRayTriangle</name>
            <comment>Intersects a ray and a triangle, returning the intersection point in Intersection.
ray: The ray
t1: The first vertex of the triangle
t2: The second vertex of the triangle
t3: The third vertex of the triangle
intersection: The intersection point (optional)</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>t1</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>t2</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>t3</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>intersectRayTriangles</name>
            <comment>Intersects the given ray with list of triangles. Returns the nearest intersection point in intersection
ray: The ray
triangles: The triangles, each successive 3 elements from a vertex
intersection: The nearest intersection point (optional)
Return type: @return:Whether the ray and the triangles intersect.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
            <parameter>
                <name>triangles</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>intersection</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Intersector.SplitTriangle</name>
        <shortname>lgMathIntersectorSplitTriangle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new instance, assuming numAttributes attributes per triangle vertex.
numAttributes: must be &gt;= 3</comment>
            <returntype>void</returntype>
            <parameter>
                <name>numAttributes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <field>
            <name>total</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>numFront</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>back</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>front</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>numBack</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Intersector.MinimumTranslationVector</name>
        <shortname>lgMathIntersectorMinimumTranslationVector</shortname>
        <owner>process</owner>
        <field>
            <name>normal</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>depth</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Interpolation</name>
        <shortname>lgMathInterpolation</shortname>
        <comment>Takes a linear value in the range of 0-1 and outputs a (usually) non-linear, interpolated value.</comment>
        <owner>process</owner>
        <method>
            <name>apply</name>
            <comment>Returns the interpolated value for the specified linear value.
You have to select an interpolator (bounce, fade, swingIn, etc.) before calling this function.
Value: A value between 0 and 1.
Example:&lt;code&gt;
Dim Interpolation As lgMathInterpolation
Interpolation = Interpolation.elastic
Dim myFirstInterpolatedValue As Float = Interpolation.apply(0)
Dim myLastInterpolatedValue As Float = Interpolation.apply(1)
&lt;/code&gt;</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>exp5In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow5Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowOut</returntype>
        </field>
        <field>
            <name>exp5</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>exp10In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow2Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowOut</returntype>
        </field>
        <field>
            <name>pow2In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowIn</returntype>
        </field>
        <field>
            <name>circleOut</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>circle</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>bounce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>bounceIn</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow3Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowOut</returntype>
        </field>
        <field>
            <name>pow4</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Pow</returntype>
        </field>
        <field>
            <name>pow5</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Pow</returntype>
        </field>
        <field>
            <name>exp10Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>exp10</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>swing</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Pow</returntype>
        </field>
        <field>
            <name>pow3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Pow</returntype>
        </field>
        <field>
            <name>fade</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>linear</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>sineIn</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>exp5Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>circleIn</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>sineOut</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>elasticIn</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Elastic</returntype>
        </field>
        <field>
            <name>swingOut</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow4Out</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowOut</returntype>
        </field>
        <field>
            <name>pow4In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowIn</returntype>
        </field>
        <field>
            <name>swingIn</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow3In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowIn</returntype>
        </field>
        <field>
            <name>sine</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>pow5In</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.PowIn</returntype>
        </field>
        <field>
            <name>elastic</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Elastic</returntype>
        </field>
        <field>
            <name>bounceOut</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation</returntype>
        </field>
        <field>
            <name>elasticOut</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Interpolation.Elastic</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.GridPoint3</name>
        <shortname>lgMathGridPoint3</shortname>
        <comment>A point in a 3D grid, with integer x and y coordinates</comment>
        <owner>process</owner>
        <method>
            <name>set</name>
            <comment>Sets the coordinates of this GridPoint3D.
x: X coordinate
y: Y coordinate
z: Z coordinate
Return type: @return:this GridPoint3D for chaining.</comment>
            <returntype>com.badlogic.gdx.math.GridPoint3</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>set2</name>
            <comment>Sets the coordinates of this 3D grid point to that of another.
point: The 3D grid point to copy coordinates of.
Return type: @return:this GridPoint3 for chaining.</comment>
            <returntype>com.badlogic.gdx.math.GridPoint3</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.GridPoint3</type>
            </parameter>
        </method>
        <field>
            <name>z</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>x</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.GridPoint2</name>
        <shortname>lgMathGridPoint2</shortname>
        <comment>A point in a 2D grid, with integer x and y coordinates</comment>
        <owner>process</owner>
        <method>
            <name>set</name>
            <comment>Sets the coordinates of this 2D grid point.</comment>
            <returntype>com.badlogic.gdx.math.GridPoint2</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>set2</name>
            <comment>Sets the coordinates of this 2D grid point to that of another.
point: The 2D grid point to copy the coordinates of.</comment>
            <returntype>com.badlogic.gdx.math.GridPoint2</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.GridPoint2</type>
            </parameter>
        </method>
        <field>
            <name>y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>x</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.GeometryUtils</name>
        <shortname>lgMathGeometryUtils</shortname>
        <owner>process</owner>
        <method>
            <name>lowestPositiveRoot</name>
            <comment>Returns the lowest positive root of the quadric equation given by a* x * x + b * x + c = 0. If no solution is given Float.Nan is returned.
a: the first coefficient of the quadric equation
b: the second coefficient of the quadric equation
c: the third coefficient of the quadric equation
Return type: @return:the lowest positive root or Float.Nan</comment>
            <returntype>float</returntype>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>c</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>triangleCentroid</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centroid</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>barycentric</name>
            <comment>Computes the barycentric coordinates v,w for the specified point in the triangle.
If barycentric.x &amp;gt;= 0 and barycentric.y &amp;gt;= 0 and barycentric.x + barycentric.y &amp;lt;= 1 then the point is inside the triangle.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>p</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>c</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>barycentricOut</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>triangleArea</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>quadrilateralCentroid</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y4</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centroid</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>polygonArea</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>polygon</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>polygonCentroid</name>
            <comment>Returns the centroid for the specified non-self-intersecting polygon.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>polygon</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>centroid</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Frustum</name>
        <shortname>lgMathFrustum</shortname>
        <comment>A truncated rectangular pyramid. Used to define the viewable region and its projection onto the screen.</comment>
        <owner>process</owner>
        <method>
            <name>update</name>
            <comment>Updates the clipping plane's based on the given inverse combined projection and view matrix, e.g. from an OrthographicCamera or a PerspectiveCamera.
inverseProjectionView: the combined projection and view matrices.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>inverseProjectionView</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>sphereInFrustumWithoutNearFar</name>
            <comment>Returns whether the given sphere is in the frustum not checking whether it is behind the near and far clipping plane.
center: The center of the sphere
radius: The radius of the sphere
Return type: @return:Whether the sphere is in the frustum</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>center</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>pointInFrustum</name>
            <comment>Returns whether the point is in the frustum.
point: The point
Return type: @return:Whether the point is in the frustum.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>sphereInFrustum</name>
            <comment>Returns whether the given sphere is in the frustum.
center: The center of the sphere
radius: The radius of the sphere
Return type: @return:Whether the sphere is in the frustum</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>center</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>pointInFrustum2</name>
            <comment>Returns whether the point is in the frustum.
x: The X coordinate of the point
y: The Y coordinate of the point
z: The Z coordinate of the point
Return type: @return:Whether the point is in the frustum.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sphereInFrustumWithoutNearFar2</name>
            <comment>Returns whether the given sphere is in the frustum not checking whether it is behind the near and far clipping plane.
x: The X coordinate of the center of the sphere
y: The Y coordinate of the center of the sphere
z: The Z coordinate of the center of the sphere
radius: The radius of the sphere
Return type: @return:Whether the sphere is in the frustum</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>boundsInFrustum</name>
            <comment>Returns whether the given BoundingBox is in the frustum</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bounds</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>sphereInFrustum2</name>
            <comment>Returns whether the given sphere is in the frustum.
x: The X coordinate of the center of the sphere
y: The Y coordinate of the center of the sphere
z: The Z coordinate of the center of the sphere
radius: The radius of the sphere
Return type: @return:Whether the sphere is in the frustum</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>planePoints</name>
            <comment>eight points making up the near and far clipping "rectangles". order is counter clockwise, starting at bottom left</comment>
            <returntype>com.badlogic.gdx.math.Vector3[]</returntype>
        </field>
        <field>
            <name>planes</name>
            <comment>the six clipping planes, near, far, left, right, top, bottom</comment>
            <returntype>com.badlogic.gdx.math.Plane[]</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.FloatCounter</name>
        <shortname>lgMathFloatCounter</shortname>
        <comment>Track properties of a stream of float values. The properties (total value, minimum, etc) are updated as values are
 {@link #put(float)} into the stream.</comment>
        <owner>process</owner>
        <method>
            <name>put</name>
            <comment>Add a value and update all fields.
value: The value to add</comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>reset</name>
            <comment>Reset all values to their default value.</comment>
            <returntype>void</returntype>
        </method>
        <field>
            <name>min</name>
            <comment>The smallest value</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>total</name>
            <comment>The sum of all values</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>max</name>
            <comment>The largest value</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>count</name>
            <comment>The amount of values added</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>value</name>
            <comment>The current windowed mean value</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>mean</name>
            <comment>Provides access to the WindowedMean if any (can be null)</comment>
            <returntype>com.badlogic.gdx.math.WindowedMean</returntype>
        </field>
        <field>
            <name>latest</name>
            <comment>The latest raw value</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>average</name>
            <comment>The average value (total / count)</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Ellipse</name>
        <shortname>lgMathEllipse</shortname>
        <comment>A convenient 2D ellipse class, based on the circle class</comment>
        <owner>process</owner>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height of this ellipse
width: The width
height: The height
Return type: @return:this ellipse for chaining</comment>
            <returntype>com.badlogic.gdx.math.Ellipse</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y-coordinates of ellipse center from a {@link Vector2}.
position: The position vector
Return type: @return:this ellipse for chaining</comment>
            <returntype>com.badlogic.gdx.math.Ellipse</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>contains</name>
            <comment>Checks whether or not this ellipse contains the given point.
x: X coordinate
y: Y coordinate
Return type: @return:true if this ellipse contains the given point; false otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Sets a new position and size for this ellipse.
x: X coordinate
y: Y coordinate
width: Width in pixels
height: Height in pixels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets a new position and size for this ellipse based upon another ellipse.
ellipse: The ellipse to copy the position and size of.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ellipse</name>
                <type>com.badlogic.gdx.math.Ellipse</type>
            </parameter>
        </method>
        <field>
            <name>height</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>width</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>y</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>x</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.EarClippingTriangulator</name>
        <shortname>lgMathEarClippingTriangulator</shortname>
        <comment>A simple implementation of the ear cutting algorithm to triangulate simple polygons without holes. For more information:
 &lt;ul&gt;
 &lt;li&gt;&lt;a href="http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html"&gt;http://cgm.cs.mcgill.ca/~godfried/
 teaching/cg-projects/97/Ian/algorithm2.html&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a
 href="http://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf"&gt;http://www.geometrictools.com/Documentation
 /TriangulationByEarClipping.pdf&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 If the input polygon is not simple (self-intersects), there will be output but it is of unspecified quality (garbage in,
 garbage out).</comment>
        <owner>process</owner>
        <method>
            <name>computeTriangles</name>
            <comment>Triangulates the given (convex or concave) simple polygon to a list of triangle vertices.
Vertices: pairs describing vertices of the polygon, in either clockwise or counterclockwise order.
Returns triples of triangle indices in clockwise order. Note the returned array is reused for later calls to the same method.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgShortArray</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>computeTriangles2</name>
            <comment>Triangulates the given (convex or concave) simple polygon to a list of triangle vertices.
vertices: pairs describing vertices of the polygon, in either clockwise or counterclockwise order.
Returns triples of triangle indices in clockwise order. Note the returned array is reused for later calls to the same method.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgShortArray</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.math.ConvexHull</name>
        <shortname>lgMathConvexHull</shortname>
        <comment>Computes the convex hull of a set of points using the monotone chain convex hull algorithm (aka Andrew's algorithm).</comment>
        <owner>process</owner>
        <method>
            <name>computePolygon</name>
            <comment>Returns the convex hull polygon for the given point cloud. Note: the last point in the returned list is the same as the first one.
points: x,y pairs describing points. Duplicate points will result in undefined behavior.
sorted: If false, the points will be sorted by the x coordinate then the y coordinate, which is required by the convex
           hull algorithm. If sorting is done the input array is not modified and count additional working memory is needed.
Returns pairs of coordinates that describe the convex hull polygon in counterclockwise order. Note the returned array is reused for later calls to the same method.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgFloatArray</returntype>
            <parameter>
                <name>points</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>sorted</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeIndices</name>
            <comment>Computes a hull the same as computePolygon but returns indices of the specified points.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgIntArray</returntype>
            <parameter>
                <name>points</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>sorted</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>yDown</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeIndices2</name>
            <comment>Computes a hull the same as computePolygon but returns indices of the specified points.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgIntArray</returntype>
            <parameter>
                <name>points</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>sorted</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>yDown</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computePolygon2</name>
            <comment>Returns the convex hull polygon for the given point cloud. Note: the last point in the returned list is the same as the first one.
points: x,y pairs describing points. Duplicate points will result in undefined behavior.
sorted: If false, the points will be sorted by the x coordinate then the y coordinate, which is required by the convex
           hull algorithm. If sorting is done the input array is not modified and count additional working memory is needed.
Returns pairs of coordinates that describe the convex hull polygon in counterclockwise order. Note the returned array is reused for later calls to the same method.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgFloatArray</returntype>
            <parameter>
                <name>points</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>sorted</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Circle</name>
        <shortname>lgMathCircle</shortname>
        <comment>A convenient 2D circle class.</comment>
        <owner>process</owner>
        <method>
            <name>overlaps</name>
            <comment>
c: the other {@link Circle}
Return type: @return:whether this circle overlaps the other circle.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>c</name>
                <type>com.badlogic.gdx.math.Circle</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y-coordinates of circle center
x: The x-coordinate
y: The y-coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>contains</name>
            <comment>Checks whether or not this circle contains a given point.
x: X coordinate
y: Y coordinate
Return type: @return:true if this circle contains the given point.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Sets a new location and radius for this circle.
x: X coordinate
y: Y coordinate
radius: Circle radius</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets a new location and radius for this circle, based upon another circle.
circle: The circle to copy the position and radius of.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>circle</name>
                <type>com.badlogic.gdx.math.Circle</type>
            </parameter>
        </method>
        <property>
            <name>Position</name>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Sets the x and y-coordinates of circle center from vector</comment>
        </property>
        <field>
            <name>radius</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>y</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>x</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.Bresenham2</name>
        <shortname>lgMathBresenham2</shortname>
        <comment>Returns a list of points at integer coordinates for a line on a 2D grid, using the Bresenham algorithm.
 &lt;p&gt;
 
 Instances of this class own the returned array of points and the points themselves to avoid garbage collection as much as
 possible. Calling any of the methods will result in the reuse of the previously returned array and vectors, expect</comment>
        <owner>process</owner>
        <method>
            <name>Line2</name>
            <comment>Returns a list of GridPoint2 instances along the given line, at integer coordinates.
start: the start of the line
end: the end of the line</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
            <parameter>
                <name>start</name>
                <type>com.badlogic.gdx.math.GridPoint2</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>com.badlogic.gdx.math.GridPoint2</type>
            </parameter>
        </method>
        <method>
            <name>Line</name>
            <comment>Returns a list of GridPoint2 instances along the given line, at integer coordinates.
startX: the start x coordinate of the line
startY: the start y coordinate of the line
endX: the end x coordinate of the line
endY: the end y coordinate of the line</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
            <parameter>
                <name>startX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>startY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>endX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>endY</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.net.lgServerSocket</name>
        <shortname>lgServerSocket</shortname>
        <owner>process</owner>
        <event>NewConnection(ClientSocket As lgSocket)</event>
        <event>Timeout</event>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Listen</name>
            <comment>Listens to incoming connections in a separate thread.
A NewConnection event is raised when a connection is made.
A Timeout event is raised when the waiting time for a connection has elapsed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.net.NetJavaServerSocketImpl</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.net.lgNet</name>
        <shortname>lgNet</shortname>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>OpenURI</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>URI</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewTCPServerSocket</name>
            <comment>Creates a new server socket on the given port, using the TCP protocol.
Call the Dispose function of the server socket when you no longer need it.</comment>
            <returntype>anywheresoftware.b4a.libgdx.net.lgServerSocket</returntype>
            <parameter>
                <name>Port</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Hints</name>
                <type>com.badlogic.gdx.net.ServerSocketHints</type>
            </parameter>
        </method>
        <method>
            <name>NewTCPClientSocket</name>
            <comment>Creates a new TCP client socket that connects to the given host and port.
Call the Dispose function of the client socket when you no longer need it.</comment>
            <returntype>com.badlogic.gdx.net.NetJavaSocketImpl</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Port</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Hints</name>
                <type>com.badlogic.gdx.net.SocketHints</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.backends.android.AndroidNet</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.math.lgMathCatmullRomSpline</name>
        <shortname>lgMathCatmullRomSpline</shortname>
        <owner>process</owner>
        <method>
            <name>ValueAt</name>
            <comment>Returns in Out the value of the spline at location Loc.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Loc</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ControlPoints</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Locate</name>
            <comment>Returns the location (between 0 and 1) on the spline which is closest to the specified position.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>V</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Nearest</name>
            <comment>Returns the span closest to the specified value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>In</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Nearest2</name>
            <comment>Returns the span closest to the specified value, restricting to the specified spans.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>In</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ValueAt2</name>
            <comment>Returns in Out the value of the spline at location Loc of the specified span.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Span</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Loc</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Continuous</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ControlPoints</name>
            <returntype>com.badlogic.gdx.math.Vector2[]</returntype>
            <parameter>
                <name>ControlPoints</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpanCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.math.CatmullRomSpline</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.math.lgMathBSpline</name>
        <shortname>lgMathBSpline</shortname>
        <owner>process</owner>
        <method>
            <name>ValueAt</name>
            <comment>Returns in Out the value of the spline at location Loc.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Loc</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ControlPoints</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <parameter>
                <name>Degree</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Locate</name>
            <comment>Returns the location (between 0 and 1) on the spline which is closest to the specified position.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>V</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Nearest</name>
            <comment>Returns the span closest to the specified value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>In</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Nearest2</name>
            <comment>Returns the span closest to the specified value, restricting to the specified spans.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>In</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ValueAt2</name>
            <comment>Returns in Out the value of the spline at location Loc of the specified span.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Span</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Loc</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Knots</name>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Continuous</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ControlPoints</name>
            <returntype>com.badlogic.gdx.math.Vector2[]</returntype>
            <parameter>
                <name>ControlPoints</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpanCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Degree</name>
            <returntype>int</returntype>
            <parameter>
                <name>Degree</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.math.BSpline</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.math.lgMathBezier</name>
        <shortname>lgMathBezier</shortname>
        <owner>process</owner>
        <method>
            <name>ValueAt</name>
            <comment>Returns in Out the value of the path at location Loc.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Loc</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Points</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
        </method>
        <method>
            <name>Locate</name>
            <comment>Returns the location (between 0 and 1) on the path which is closest to the specified position.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>V</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Points</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Points</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Points</name>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
            <parameter>
                <name>Points</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.math.Bezier</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidGL20</name>
        <shortname>lgGL20</shortname>
        <owner>process</owner>
        <method>
            <name>glUniform3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glReleaseShaderCompiler</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glGetActiveUniform</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttribPointer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>normalized</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ptr</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glClearDepthf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>depth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetBufferParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferTexture2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCompressedTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>imageSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetBooleanv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glDisable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindFramebuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glActiveTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glScissor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sfactor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dfactor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPixelStorei</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glLinkProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetError</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glTexParameteri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glEnableVertexAttribArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClearStencil</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>s</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawElements</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indices</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribPointerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glDisableVertexAttribArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindAttribLocation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteRenderbuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glFinish</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glVertexAttrib4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib1fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glLineWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glStencilOp</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zfail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zpass</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetAttachedShaders</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>maxcount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>shaders</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderPrecisionFormat</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadertype</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>precisiontype</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>range</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>precision</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDetachShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetActiveAttrib</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawArrays</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glBufferSubData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glRenderbufferStorage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDepthRangef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glStencilMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenRenderbuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glClearColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glColorMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glBindTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetIntegerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteFramebuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCreateShader</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetFloatv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glSampleCoverage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>invert</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glClear</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCompressedTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>imageSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glShaderBinary</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shaders</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>binaryformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>binary</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGenFramebuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetProgramiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCullFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetFramebufferAttachmentParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glViewport</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDepthFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetRenderbufferParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glBindRenderbuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPolygonOffset</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>factor</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferRenderbuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffertarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetProgramInfoLog</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib2f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetAttribLocation</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glIsFramebuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glStencilFuncSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCompileShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsBuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glShaderSource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glBufferData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glReadPixels</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderSource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bufsize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>source</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glStencilFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib3f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glAttachShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glIsProgram</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glIsRenderbuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformLocation</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glFlush</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glGetTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glStencilMaskSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCreateProgram</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glIsShader</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glValidateProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glStencilOpSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zfail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zpass</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFuncSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>srcRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcAlpha</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsTexture</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderInfoLog</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glUseProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenerateMipmap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindBuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib1f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDepthMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquationSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>modeRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>modeAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glFrontFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCheckFramebufferStatus</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glEnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidFiles</name>
        <shortname>lgFiles</shortname>
        <owner>process</owner>
        <method>
            <name>absolute</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getFileHandle</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type EnumType="true">com.badlogic.gdx.Files.FileType</type>
            </parameter>
        </method>
        <method>
            <name>external</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>local</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isLocalStorageAvailable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isExternalStorageAvailable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>internal</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>LocalStoragePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ExternalStoragePath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <field>
            <name>FILETYPE_Absolute</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Files.FileType</returntype>
        </field>
        <field>
            <name>FILETYPE_Local</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Files.FileType</returntype>
        </field>
        <field>
            <name>FILETYPE_Internal</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Files.FileType</returntype>
        </field>
        <field>
            <name>FILETYPE_External</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Files.FileType</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidClipboard</name>
        <shortname>lgClipboard</shortname>
        <owner>process</owner>
        <property>
            <name>Contents</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>contents</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidAudioRecorder</name>
        <shortname>lgAudioRecorder</shortname>
        <comment>{@link AudioRecorder} implementation for the android system based on AudioRecord</comment>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>read</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>samples</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>numSamples</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidAudioDevice</name>
        <shortname>lgAudioDevice</shortname>
        <comment>Implementation of the {@link AudioDevice} interface for Android using the AudioTrack class. You will need to set the permission
 android.permission.RECORD_AUDIO in your manifest file.</comment>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isMono</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>writeSamples</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>samples</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>numSamples</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Latency</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Volume</name>
            <parameter>
                <name>volume</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.backends.android.AndroidApplicationConfiguration</name>
        <shortname>lgConfiguration</shortname>
        <comment>Class defining the configuration of an AndroidApplication. Allows you to disable the use of the accelerometer to save
 battery among other things.</comment>
        <owner>process</owner>
        <field>
            <name>g</name>
            <comment>number of bits per color channel</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>useImmersiveMode</name>
            <comment>set this to true to enable Android 4.4 KitKat's 'Immersive mode'</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>b</name>
            <comment>number of bits per color channel</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>useWakelock</name>
            <comment>Whether to keep the screen on and at full brightness or not while running the application. Default: false</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>disableAudio</name>
            <comment>Whether to disable Android audio support. Default: false</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>a</name>
            <comment>number of bits per color channel</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>stencil</name>
            <comment>number of bits for depth and stencil buffer</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>depth</name>
            <comment>number of bits for depth and stencil buffer</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>hideStatusBar</name>
            <comment>hide status bar buttons on Android 4.x and higher (API 14+). Doesn't work if "android:targetSdkVersion" less 11 or if API
 less 14. default: false</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>maxSimultaneousSounds</name>
            <comment>The maximum number of Sound instances that can be played simultaneously, sets the corresponding SoundPool
 constructor argument.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>r</name>
            <comment>number of bits per color channel</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>useCompass</name>
            <comment>whether to use the compass. default: true</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>numSamples</name>
            <comment>number of samples for CSAA/MSAA, 2 is a good value</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>useAccelerometer</name>
            <comment>whether to use the accelerometer. default: true</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>touchSleepTime</name>
            <comment>the time in milliseconds to sleep after each event in the touch handler, set this to 16ms to get rid of touch flooding on
 pre Android 2.0 devices. default: 0</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.ui.Stack</name>
        <shortname>lgScn2DStack</shortname>
        <comment>A stack is a container that sizes its children to its size and positions them at 0,0 on top of each other.
 &lt;p&gt;
 The preferred and min size of the stack is the largest preferred and min size of any children. The max size of the stack is the
 smallest max size of any children.</comment>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>addActorAt</name>
            <comment>Adds an actor as a child of this group, at a specific index. The actor is first removed from its parent group, if any.
index: May be greater than the number of children.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Raises the Draw event of the group and its children. Typically this is called each frame by Stage.Draw.
lgSpriteBatch.Begin has already been called and the SpriteBatch has been transformed (if Transform was set to True).
ParentAlpha: Should be multiplied with the actor's alpha, allowing a parent's alpha to affect all children.
Example:&lt;code&gt;
Sub MyGroup_Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)
	Dim Group As lgScn2DGroup = Sender
	SpriteBatch.SetColorRGBA(Group.Color.R, Group.Color.G, Group.Color.B, Group.Color.A * ParentAlpha)
	SpriteBatch.DrawRegion3(MyTexRegion, Group.X, Group.Y, Group.OriginX, Group.OriginY, Group.Width, Group.Height, Group.ScaleX, Group.ScaleY, Group.Rotation)
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new group.
EvtPrefix: The prefix of Act and Draw events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addActor</name>
            <comment>Adds an actor as a child of this group. The actor is first removed from its parent group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>addActorBefore</name>
            <comment>Adds an actor as a child of this group, immediately before another child actor. The actor is first removed from its parent
 group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actorBefore</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addActorAfter</name>
            <comment>Adds an actor as a child of this group, immediately after another child actor. The actor is first removed from its parent
 group, if any.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>actorAfter</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.LibGDX</name>
        <shortname>LibGDX</shortname>
        <owner>activity</owner>
        <event>Create</event>
        <event>Dispose</event>
        <event>Render</event>
        <event>Resize(Width As Int, Height As Int)</event>
        <event>Pause</event>
        <event>Resume</event>
        <method>
            <name>InitializeView</name>
            <comment>This function has to be called in Activity_Create. It sets up all the things necessary to get input, render via OpenGL and so on, with a default configuration. It returns the created view.</comment>
            <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Clipboard</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.backends.android.AndroidClipboard</returntype>
        </method>
        <method>
            <name>Files</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.backends.android.AndroidFiles</returntype>
        </method>
        <method>
            <name>Resume</name>
            <comment>This function has to be called in Activity_Resume. It will inform the library that a Resume event has been raised.
 Note: The Resume event after a Create event is ignored. The library will consider only the Resume event after a pause.
 Example:&lt;code&gt;
 Sub Activity_Resume
    If lGdx.IsInitialized Then lGdx.Resume
 End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InitializeView2</name>
            <comment>This function has to be called in Activity_Create. It sets up all the things necessary to get input, render via OpenGL and so on, with the specified configuration. It returns the created view.</comment>
            <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Configuration</name>
                <type>com.badlogic.gdx.backends.android.AndroidApplicationConfiguration</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Graphics</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgGraphics</returntype>
        </method>
        <method>
            <name>Net</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.net.lgNet</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>This function has to be called in Activity_Create. It sets up all the things necessary to get input, render via OpenGL and so on, with the specified configuration. The created view fills the entire activity. To get it, use Graphics.View.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Configuration</name>
                <type>com.badlogic.gdx.backends.android.AndroidApplicationConfiguration</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>This function has to be called in Activity_Create. It sets up all the things necessary to get input, render via OpenGL and so on, with a default configuration. The created view fills the entire activity. To get it, use Graphics.View.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Input</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.input.lgInput</returntype>
        </method>
        <method>
            <name>CallSubUI</name>
            <comment>Calls a sub in the UI thread with the given parameter. This allows to change the properties of other views, show a MsgBox, etc.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>SubName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Parameter</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>exit</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Pause</name>
            <comment>This function has to be called in Activity_Pause. It will inform the library that a Pause event has been raised. 
 Example:&lt;code&gt;
 Sub Activity_Pause (UserClosed As Boolean)
    If lGdx.IsInitialized Then lGdx.Pause
 End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LibGDXVersion</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Audio</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.audio.lgAudio</returntype>
        </method>
        <property>
            <name>JavaHeap</name>
            <returntype>long</returntype>
            <comment>Returns the Java heap memory use in bytes.</comment>
        </property>
        <property>
            <name>LogLevel</name>
            <returntype>int</returntype>
            <parameter>
                <name>logLevel</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>NativeHeap</name>
            <returntype>long</returntype>
            <comment>Returns the Native heap memory use in bytes.</comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>int</returntype>
            <comment>Returns the Android API level.</comment>
        </property>
        <field>
            <name>LOGLEVEL_Info</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MINIMUM_SDK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_None</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_Debug</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_Error</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.lgScreenManager</name>
        <shortname>lgScreenManager</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the list of screens.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>LG</name>
                <type>anywheresoftware.b4a.libgdx.LibGDX</type>
            </parameter>
        </method>
        <method>
            <name>RemoveScreen</name>
            <comment>Removes the given screen from the list of screens. Removing a screen does not dispose its resources.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Screen</name>
                <type>anywheresoftware.b4a.libgdx.lgScreenManager.lgScreen</type>
            </parameter>
        </method>
        <method>
            <name>AddScreen</name>
            <comment>Adds a new screen to the list of screens.
evtPrefix: Prefix of the screen events.</comment>
            <returntype>anywheresoftware.b4a.libgdx.lgScreenManager.lgScreen</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>CurrentScreen</name>
            <returntype>anywheresoftware.b4a.libgdx.lgScreenManager.lgScreen</returntype>
            <parameter>
                <name>Screen</name>
                <type>anywheresoftware.b4a.libgdx.lgScreenManager.lgScreen</type>
            </parameter>
            <comment>Gets or sets the current screen. When set, the Hide event is raised for any old screen, and the Show event is raised for the new screen.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.lgScreenManager.lgScreen</name>
        <shortname>lgScreen</shortname>
        <owner>process</owner>
        <event>Show</event>
        <event>Hide</event>
        <event>Render(Delta As Float)</event>
        <event>Resize(Width As Int, Height As Int)</event>
        <event>Pause</event>
        <event>Resume</event>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.lgLiveWallpaper.LW_Manager</name>
        <shortname>lgLiveWallpaper</shortname>
        <owner>process</owner>
        <event>Create</event>
        <event>Dispose</event>
        <event>PreviewStateChange(IsPreview As Boolean)</event>
        <event>OffsetChange(X_Offset As Float, Y_Offset As Float, X_OffsetStep As Float, Y_OffsetStep As Float, X_PixelOffset As Int, Y_PixelOffset As Int)</event>
        <event>Render</event>
        <event>Resize(Width As Int, Height As Int)</event>
        <event>Pause</event>
        <event>Resume</event>
        <method>
            <name>Initialize</name>
            <comment>This function has to be called in Service_Create. It sets up all the things necessary to get input, render via OpenGL and so on, with the specified configuration. The created view fills the entire screen.
Reminder: don't use lgInputProcessor, lgGestureDetector or the input listeners of Scene2D in this service. Use the lgInput functions (isTouched, justTouched, X, Y, etc.) to get the touch events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Configuration</name>
                <type>com.badlogic.gdx.backends.android.AndroidApplicationConfiguration</type>
            </parameter>
            <parameter>
                <name>GetTouchEvents</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Input</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.input.lgInput</returntype>
        </method>
        <method>
            <name>CallSubUI</name>
            <comment>Calls a sub in the UI thread with the given parameter.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>SubName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Parameter</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Graphics</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgGraphics</returntype>
        </method>
        <method>
            <name>Net</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.net.lgNet</returntype>
        </method>
        <method>
            <name>LibGDXVersion</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>JavaHeap</name>
            <returntype>long</returntype>
            <comment>Returns the Java heap memory use in bytes.</comment>
        </property>
        <property>
            <name>LogLevel</name>
            <returntype>int</returntype>
            <parameter>
                <name>logLevel</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Clipboard</name>
            <returntype>com.badlogic.gdx.backends.android.AndroidClipboard</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Files</name>
            <returntype>com.badlogic.gdx.backends.android.AndroidFiles</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Version</name>
            <returntype>int</returntype>
            <comment>Returns the Android API level.</comment>
        </property>
        <property>
            <name>Audio</name>
            <returntype>anywheresoftware.b4a.libgdx.audio.lgAudio</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NativeHeap</name>
            <returntype>long</returntype>
            <comment>Returns the Native heap memory use in bytes.</comment>
        </property>
        <field>
            <name>LOGLEVEL_Info</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_None</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_Debug</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOGLEVEL_Error</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.collision.Sphere</name>
        <shortname>lgMathSphere</shortname>
        <comment>Encapsulates a 3D sphere with a center and a radius</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a sphere with the given center and radius.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Center</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overlaps</name>
            <comment>
sphere: the other sphere
Return type: @return:whether this and the other sphere overlap</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>sphere</name>
                <type>com.badlogic.gdx.math.collision.Sphere</type>
            </parameter>
        </method>
        <field>
            <name>center</name>
            <comment>the center of the sphere</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>radius</name>
            <comment>the radius of the sphere</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.collision.Segment</name>
        <shortname>lgMathSegment</shortname>
        <comment>A Segment is a line in 3-space having a staring and an ending position.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a new Segment from the two points given.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>a</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <field>
            <name>b</name>
            <comment>the ending position</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>a</name>
            <comment>the starting position</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.collision.Ray</name>
        <shortname>lgMathRay</shortname>
        <comment>Encapsulates a ray having a starting position and a unit length direction.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Sets the starting position of the ray and the direction.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Origin</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>Direction</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>getEndPoint</name>
            <comment>Returns the endpoint given the distance. This is calculated as startpoint + distance * direction.
out: The vector to set to the result
distance: The distance from the end point to the start point.
Return type: @return:The out param</comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>out</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>distance</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment>{@inheritDoc}</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment>Sets the starting position and the direction of this ray.
origin: The starting position
direction: The direction
Return type: @return:this ray for chaining</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
            <parameter>
                <name>origin</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>direction</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>mul</name>
            <comment>Multiplies the ray by the given matrix. Use this to transform a ray into another coordinate system.
matrix: The matrix
Return type: @return:This ray for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>cpy</name>
            <comment>
Return type: @return:a copy of this ray.</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets this ray from the given starting position and direction.
x: The x-component of the starting position
y: The y-component of the starting position
z: The z-component of the starting position
dx: The x-component of the direction
dy: The y-component of the direction
dz: The z-component of the direction
Return type: @return:this ray for chaining</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dz</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set3</name>
            <comment>Sets the starting position and direction from the given ray
ray: The ray
Return type: @return:This ray for chaining</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
            <parameter>
                <name>ray</name>
                <type>com.badlogic.gdx.math.collision.Ray</type>
            </parameter>
        </method>
        <field>
            <name>direction</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>origin</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.math.collision.BoundingBox</name>
        <shortname>lgMathBoundingBox</shortname>
        <comment>Encapsulates an axis aligned bounding box represented by a minimum and a maximum Vector. Additionally you can query for the
 bounding box's center, dimensions and corner points.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs the new bounding box using the given minimum and maximum vector.
minimum: The minimum vector
maximum: The maximum vector</comment>
            <returntype>void</returntype>
            <parameter>
                <name>minimum</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>maximum</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>clr</name>
            <comment>Sets the minimum and maximum vector to zeros
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
        </method>
        <method>
            <name>set</name>
            <comment>Sets the given minimum and maximum vector.
minimum: The minimum vector
maximum: The maximum vector
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>minimum</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>maximum</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>inf</name>
            <comment>Sets the minimum and maximum vector to positive and negative infinity.
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
        </method>
        <method>
            <name>contains</name>
            <comment>Returns whether the given bounding box is contained in this bounding box.
b: The bounding box
Return type: @return:Whether the given bounding box is contained</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>Set4</name>
            <comment>Sets the bounding box minimum and maximum vector from the given points.
points: The points.
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>points</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>mul</name>
            <comment>Multiplies the bounding box by the given matrix. This is achieved by multiplying the 8 corner points and then calculating
 the minimum and maximum vectors from the transformed points.
matrix: The matrix
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Sets the given bounding box.
bounds: The bounds.
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>bounds</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>ext</name>
            <comment>Extends the bounding box to incorporate the given Vector3.
        //---------------------------
point: The vector
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>Set3</name>
            <comment>Sets the bounding box minimum and maximum vector from the given points.
points: The points.
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>points</name>
                <type>com.badlogic.gdx.math.Vector3[]</type>
            </parameter>
        </method>
        <method>
            <name>contains2</name>
            <comment>Returns whether the given vector is contained in this bounding box.
v: The vector
Return type: @return:Whether the vector is contained or not.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>ext2</name>
            <comment>Extends this bounding box by the given bounding box.
a_bounds: The bounding box
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>a_bounds</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>ext3</name>
            <comment>Extends this bounding box by the given transformed bounding box.
bounds: The bounding box
transform: The transformation matrix to apply to bounds, before using it to extend this bounding box.
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>bounds</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>ext4</name>
            <comment>Extends the bounding box by the given vector.
x: The x-coordinate
y: The y-coordinate
z: The z-coordinate
Return type: @return:This bounding box for chaining.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>intersects</name>
            <comment>Returns whether the given bounding box is intersecting this bounding box (at least one point in).
b: The bounding box
Return type: @return:Whether the given bounding box is intersected</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>b</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isValid</name>
            <comment>Returns whether this bounding box is valid. This means that min != max and min &lt; max.
Return type: @return:True in case the bounding box is valid, false otherwise</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Dimensions</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Center</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Corners</name>
            <returntype>com.badlogic.gdx.math.Vector3[]</returntype>
            <comment></comment>
        </property>
        <field>
            <name>min</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
        <field>
            <name>max</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.input.lgInputProcessor</name>
        <shortname>lgInputProcessor</shortname>
        <owner>process</owner>
        <event>KeyDown(KeyCode As Int) As Boolean</event>
        <event>KeyUp(KeyCode As Int) As Boolean</event>
        <event>KeyTyped(Character As Char) As Boolean</event>
        <event>TouchDown(ScreenX As Int, ScreenY As Int, Pointer As Int) As Boolean</event>
        <event>TouchUp(ScreenX As Int, ScreenY As Int, Pointer As Int) As Boolean</event>
        <event>TouchDragged(ScreenX As Int, ScreenY As Int, Pointer As Int) As Boolean</event>
        <method>
            <name>Initialize</name>
            <comment>Registers an InputProcessor which is used to receive input events from the keyboard and the touch screen. It will be called each frame before the call to Render.
 If another InputProcessor was already registered, it is replaced.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.input.lgInput</name>
        <shortname>lgInput</shortname>
        <owner>process</owner>
        <method>
            <name>DeltaXp</name>
            <comment>Returns the difference between the current location of the given pointer and the last location of this pointer on the X-axis.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>cancelVibrate</name>
            <comment>Stops the vibrator.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRotationMatrix</name>
            <comment>Returns the rotation matrix describing the device's rotation as per http://developer.android.com/reference/android/hardware/SensorManager.html#getRotationMatrix(float[], float[], float[], float[]).
 This matrix is ready to be used by OpenGL ES's glLoadMatrixf.
 The matrix is not modified if the device does not have an accelerometer.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Matrix</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>isTouched</name>
            <comment>Returns whether the screen is currently touched.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isPeripheralAvailable</name>
            <comment>Queries whether the given peripheral is currently available. In case of HardwareKeyboard, this returns whether the keyboard is currently slid out or not.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Peripheral</name>
                <type EnumType="true">com.badlogic.gdx.Input.Peripheral</type>
            </parameter>
        </method>
        <method>
            <name>Yp</name>
            <comment>Returns the Y coordinate in screen coordinates of the given pointer. Pointers are indexed from 0 to n. The pointer id identifies the order in which the fingers went down on the screen, e.g. 0 is the first finger, 1 is the second and so on.
When two fingers are touched down and the first one is lifted the second one keeps its index. If another finger is placed on the touch screen the first free index will be used.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isTouchedp</name>
            <comment>Returns whether the screen is currently touched by the pointer with the given index. Pointers are indexed from 0 to n. The pointer id identifies the order in which the fingers went down on the screen, e.g. 0 is the first finger, 1 is the second and so on.
When two fingers are touched down and the first one is lifted the second one keeps its index. If another finger is placed on the touch screen the first free index will be used.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isKeyPressed</name>
            <comment>Returns whether the given key is pressed.
Key: One of the KeyCodes constant.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Key</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>vibrate2</name>
            <comment>Vibrates with a given pattern. Pass in an array of longs that are the times at which to turn on or off the vibrator. The first one is how long to wait before turning it on, and then after that it alternates.
 If you want to repeat, pass the index into the pattern at which to start the repeat.
Pattern: An array of longs of times to turn the vibrator on or off.
Repeat: The index into pattern at which to repeat, or -1 if you don't want to repeat.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pattern</name>
                <type>long[]</type>
            </parameter>
            <parameter>
                <name>Repeat</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>vibrate</name>
            <comment>Vibrates for the given amount of time. Note that you'll need the permission in your manifest file in order for this to work.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Milliseconds</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DeltaYp</name>
            <comment>Returns the difference between the current location of the given pointer and the last location of this pointer on the Y-axis.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isAccelerometerAvailable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>justTouched</name>
            <comment>Returns whether a new touch down event just occured.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Xp</name>
            <comment>Returns the X coordinate in screen coordinates of the given pointer. Pointers are indexed from 0 to n. The pointer id identifies the order in which the fingers went down on the screen, e.g. 0 is the first finger, 1 is the second and so on.
When two fingers are touched down and the first one is lifted the second one keeps its index. If another finger is placed on the touch screen the first free index will be used.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>StageInputProcessor</name>
            <returntype>com.badlogic.gdx.InputProcessor</returntype>
            <comment>Returns the InputProcessor instance of the current Stage.</comment>
        </property>
        <property>
            <name>CatchBackKey</name>
            <parameter>
                <name>CatchBack</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the BACK button should be caught. This will prevent the activity from being exited.</comment>
        </property>
        <property>
            <name>NativeOrientation</name>
            <returntype EnumType="true">com.badlogic.gdx.Input.Orientation</returntype>
            <comment>Returns the native orientation of the device.</comment>
        </property>
        <property>
            <name>CurrentEventTime</name>
            <returntype>long</returntype>
            <comment>Returns the time of the last event. Only relevant when an InputProcessor or a GestureDetector is registered.</comment>
        </property>
        <property>
            <name>GestureDetector</name>
            <returntype>com.badlogic.gdx.InputProcessor</returntype>
            <comment>Returns the GestureDetector instance.</comment>
        </property>
        <property>
            <name>OnscreenKeyboardVisible</name>
            <parameter>
                <name>Visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the on-screen keyboard visible if available.</comment>
        </property>
        <property>
            <name>AccelerometerY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DeltaY</name>
            <returntype>int</returntype>
            <comment>Returns the difference between the current pointer location and the last pointer location on the Y-axis.</comment>
        </property>
        <property>
            <name>AccelerometerZ</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DeltaX</name>
            <returntype>int</returntype>
            <comment>Returns the difference between the current pointer location and the last pointer location on the X-axis.</comment>
        </property>
        <property>
            <name>Roll</name>
            <returntype>float</returntype>
            <comment>Returns the roll in degrees. The roll is the angle of the device's orientation around the y-axis. The positive y-axis points to the magnetic north pole of the Earth.</comment>
        </property>
        <property>
            <name>AccelerometerX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FreePointerIndex</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Azimuth</name>
            <returntype>float</returntype>
            <comment>Returns the azimuth in degrees. The azimuth is the angle of the device's orientation around the z-axis. The positive z-axis points towards the Earth's center.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>int</returntype>
            <comment>Returns the rotation of the device with respect to its native orientation.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment>Returns the last touch Y coordinate for the first pointer in screen coordinates. The screen origin is the top left corner.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment>Returns the last touch X coordinate for the first pointer in screen coordinates. The screen origin is the top left corner.</comment>
        </property>
        <property>
            <name>InputProcessor</name>
            <returntype>com.badlogic.gdx.InputProcessor</returntype>
            <comment>Returns the general InputProcessor instance.</comment>
        </property>
        <property>
            <name>CatchMenuKey</name>
            <parameter>
                <name>CatchMenu</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the MENU button should be caught. This will prevent the onscreen keyboard to show up.</comment>
        </property>
        <property>
            <name>Pitch</name>
            <returntype>float</returntype>
            <comment>Returns the pitch in degrees. The pitch is the angle of the device's orientation around the x-axis. The positive x-axis roughly points to the west and is orthogonal to the z- and y-axis.</comment>
        </property>
        <field>
            <name>ORIENTATION_Landscape</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Orientation</returntype>
        </field>
        <field>
            <name>PERIPHERAL_OnscreenKeyboard</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
        <field>
            <name>PERIPHERAL_MultitouchScreen</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
        <field>
            <name>PERIPHERAL_Compass</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
        <field>
            <name>PERIPHERAL_Vibrator</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
        <field>
            <name>PERIPHERAL_Accelerometer</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
        <field>
            <name>ORIENTATION_Portrait</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Orientation</returntype>
        </field>
        <field>
            <name>PERIPHERAL_HardwareKeyboard</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Input.Peripheral</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.input.lgGestureDetector</name>
        <shortname>lgGestureDetector</shortname>
        <owner>process</owner>
        <event>TouchDown(X As Float, Y As Float, Pointer As Int) As Boolean</event>
        <event>Tap(X As Float, Y As Float, Count As Int) As Boolean</event>
        <event>LongPress(X As Float, Y As Float) As Boolean</event>
        <event>Fling(VelocityX As Float, VelocityY As Float) As Boolean</event>
        <event>Pan(X As Float, Y As Float, DeltaX As Float, DeltaY As Float) As Boolean</event>
        <event>PanStop(X As Float, Y As Float, Pointer As Int) As Boolean</event>
        <event>Pinch(InitialPointer1 As lgMathVector2, InitialPointer2 As lgMathVector2, Pointer1 As lgMathVector2, Pointer2 As lgMathVector2) As Boolean</event>
        <event>Zoom(InitialDistance As Float, Distance As Float) As Boolean</event>
        <method>
            <name>Initialize</name>
            <comment>Registers a GestureDetector that detects gestures (tap, long press, fling, pan, zoom, pinch). It will be called each frame before the call to Render.
 If another GestureDetector was already registered, it is replaced.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Registers a GestureDetector that detects gestures (tap, long press, fling, pan, zoom, pinch). It will be called each frame before the call to Render.
 If another GestureDetector was already registered, it is replaced.
HalfTapSquareSize: Half width in pixels of the square around an initial touch event.
TapCountInterval: Time in seconds that must pass for two touch down/up sequences to be detected as consecutive taps.
LongPressDuration: Time in seconds that must pass for the detector to fire a LongPress event.
MaxFlingDelay: Time in seconds the finger must have been dragged for a fling event to be fired.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>HalfTapSquareSize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>TapCountInterval</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>LongPressDuration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>MaxFlingDelay</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload</name>
        <shortname>lgScn2DDragAndDropPayload</shortname>
        <comment>The payload of a drag and drop operation. Actors can be optionally provided to follow the cursor and change when over a
 target.</comment>
        <owner>process</owner>
        <property>
            <name>InvalidDragActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>invalidDragActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ValidDragActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>validDragActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DragActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>dragActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Object</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>object</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.utils.ClickListener</name>
        <shortname>lgScn2DClickListener</shortname>
        <comment>Detects mouse over, mouse or finger touch presses, and clicks on an actor. A touch must go down over the actor and is
 considered pressed as long as it is over the actor or within the {@link #setTapSquareSize(float) tap square}. This behavior
 makes it easier to press buttons on a touch interface when the initial touch happens near the edge of the actor. Double clicks
 can be detected using {@link #getTapCount()}. Any touch (not just the first) will trigger this listener. While pressed, other
 touch downs are ignored.</comment>
        <owner>process</owner>
        <event>Click(Event As lgScn2DInputEvent, X As Float, Y As Float)</event>
        <event>TouchDown(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchDragged(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchUp(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>Enter(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int, FromActor As lgScn2DActor)</event>
        <event>Exit(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int, ToActor As lgScn2DActor)</event>
        <method>
            <name>Initialize</name>
            <comment>Creates an event listener for detection of clicks on an actor. Returns the created instance.
EvtPrefix: Prefix of the events.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.ClickListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>handle</name>
            <comment>Try to handle the given event, if it is applicable.
Returns True if the event should be considered handled by scene2d.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>e</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>cancel</name>
            <comment>If a touch down is being monitored, the drag and click events are ignored until the next touch up.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isPressed</name>
            <comment>Returns true if a touch is over the actor or within the tap square.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isVisualPressed</name>
            <comment>Returns true if a touch is over the actor or within the tap square or has been very recently. This allows the UI to show a
 press and release that was so fast it occurred within a single frame.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateTapSquare</name>
            <comment>The tap square will not longer be used for the current touch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>inTapSquare</name>
            <comment>Returns true if a touch is within the tap square.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>inTapSquare2</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>TouchDownY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TapCount</name>
            <returntype>int</returntype>
            <comment>Returns the number of taps within the tap count interval for the most recent click event.</comment>
        </property>
        <property>
            <name>TapSquareSize</name>
            <returntype>float</returntype>
            <parameter>
                <name>halfTapSquareSize</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TouchDownX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PressedPointer</name>
            <returntype>int</returntype>
            <comment>Returns the pointer that initially touched the actor.</comment>
        </property>
        <property>
            <name>TapCountInterval</name>
            <parameter>
                <name>tapCountInterval</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>visualPressedDuration</name>
            <comment>Time in seconds isVisualPressed() reports true after a press resulting in a click is released.</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener</name>
        <shortname>lgScn2DGestureListener</shortname>
        <comment>Detects tap, long press, fling, pan, zoom, and pinch gestures on an actor. If there is only a need to detect tap, use
 {@link ClickListener}.</comment>
        <owner>process</owner>
        <event>TouchDown(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchUp(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>Tap(Event As lgScn2DInputEvent, X As Float, Y As Float, Count As Int)</event>
        <event>LongPress(Actor As lgScn2DActor, X As Float, Y As Float) As Boolean</event>
        <event>Fling(Event As lgScn2DInputEvent, VelocityX As Float, VelocityY As Float)</event>
        <event>Pan(Event As lgScn2DInputEvent, X As Float, Y As Float, DeltaX As Float, DeltaY As Float)</event>
        <event>Pinch(Event As lgScn2DInputEvent, InitialPointer1 As lgMathVector2, InitialPointer2 As lgMathVector2, Pointer1 As lgMathVector2, Pointer2 As lgMathVector2)</event>
        <event>Zoom(Event As lgScn2DInputEvent, InitialDistance As Float, Distance As Float)</event>
        <method>
            <name>Initialize</name>
            <comment>Creates an event listener for detection of gestures. Returns the created instance.
 If you return True for the LongPress event, additional gestures will not be triggered.
EvtPrefix: Prefix of the events.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>handle</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>e</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an event listener for detection of gestures. Returns the created instance.
 If you return True for the LongPress event, additional gestures will not be triggered.
EvtPrefix: Prefix of the events.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>HalfTapSquareSize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>TapCountInterval</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>LongPressDuration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>MaxFlingDelay</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>TouchDownTarget</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgWindow</name>
        <shortname>lgScn2DWindow</shortname>
        <owner>process</owner>
        <event>TouchDown(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchUp(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchDragged(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>AlignLeft</name>
            <comment>Adds ALIGN_Left and clears ALIGN_Right for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>DebugWidget</name>
            <comment>Turns on widget debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DebugCell</name>
            <comment>Turns on cell debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the window.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>DebugAll</name>
            <comment>Turns on all debug lines.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Defaults</name>
            <comment>Returns the cell values that will be used as the defaults for all cells.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>ColumnDefaults</name>
            <comment>Gets the cell values that will be used as the defaults for all cells in the specified column. Columns are indexed starting at 0.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Column</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel</name>
            <comment>Adds a new cell with a label. The label is created with the specified text and style.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AddCell</name>
            <comment>Adds a cell without a widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignBottom</name>
            <comment>Adds ALIGN_Bottom and clears ALIGN_Top for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>AlignTop</name>
            <comment>Adds ALIGN_Top and clears ALIGN_Bottom for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Stack</name>
            <comment>Adds a new cell to the table with the specified actors in a Stack.
Actors: May be null to add a stack without any actors.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Actors</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor[]</type>
            </parameter>
        </method>
        <method>
            <name>DebugTable</name>
            <comment>Turns on table debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetCell</name>
            <comment>Returns the cell for the specified widget in this table, or null.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignRight</name>
            <comment>Adds ALIGN_Right and clears ALIGN_Left for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors and cells from the table.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRow</name>
            <comment>Returns the row index for the y coordinate.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a table that can be dragged and act as a modal window. The top padding is used as the window's title height.
The preferred size of a window is the preferred size of the title text and the children as layed out by the table. After adding children to the window, it can be convenient to call Pack to size the window to the size of the children.
EvtPrefix: The prefix of Act, Draw and Touch events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgWindow.lgWindowStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>isDragging</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCellsList</name>
            <comment>Fills the given list with all cells of this table.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>lstCells</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>GetCell2</name>
            <comment>Returns the cell with the specified index, or Null if index is out of bounds.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddActor</name>
            <comment>Adds a new cell to the table with the specified widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignCenter</name>
            <comment>Sets the alignment of the logical table within the table widget to ALIGN_Center. This clears any other alignment.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawDebug</name>
            <comment>Draws the debug lines for all tables in the stage. If this method is not called each frame, no debug lines will be drawn. If
 debug is never turned on for any table in the application, calling this method will have no effect. If a table has ever had
 debug set, calling this method causes an expensive traversal of all actors in the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Stage</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgStage</type>
            </parameter>
        </method>
        <method>
            <name>NewRow</name>
            <comment>Indicates that subsequent cells should be added to a new row.
Returns the cell values that will be used as the defaults for all cells in the new row.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel2</name>
            <comment>Adds a new cell with a label. The label is created with the specified text, font and color.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Removes all actors and cells from the table (same as ClearChildren) and additionally resets all table properties and cell, column, and row defaults.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ButtonTable</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgWindow.lgWindowStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgWindow.lgWindowStyle</type>
            </parameter>
            <comment>Gets or sets the window's style.</comment>
        </property>
        <property>
            <name>Clip</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the contents are clipped if they exceed the table widget bounds. Enabling clipping will set Transform to True.</comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Resizable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isResizable</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Modal</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isModal</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>TitleWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>int</returntype>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment>Sets the alignment of the logical table within the table widget. Set to one of the ALIGN constants, or any combination of those.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TitleAlignment</name>
            <returntype>int</returntype>
            <parameter>
                <name>titleAlignment</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <comment>Gets or sets the background drawable.
The table's padding is set to BottomHeight, TopHeight, LeftWidth, and RightWidth of the drawable.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Movable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isMovable</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>KeepWithinStage</name>
            <parameter>
                <name>keepWithinStage</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Round</name>
            <parameter>
                <name>round</name>
                <type>boolean</type>
            </parameter>
            <comment>If true (the default), positions and sizes are rounded to integers.</comment>
        </property>
        <property>
            <name>ResizeBorder</name>
            <parameter>
                <name>resizeBorder</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>PadY</name>
            <returntype>float</returntype>
            <comment>Returns PadTop plus PadBottom.</comment>
        </property>
        <property>
            <name>PadX</name>
            <returntype>float</returntype>
            <comment>Returns PadLeft plus PadRight.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgWindow.lgWindowStyle</name>
        <shortname>lgScn2DWindowStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>TitleFont</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>TitleFontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgWindow.lgWindowStyle</type>
            </parameter>
        </method>
        <property>
            <name>TitleFont</name>
            <parameter>
                <name>TitleFont</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>stageBackground</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>titleFontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad</name>
        <shortname>lgScn2DTouchpad</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Changed(KnobX As Float, KnobY As Float, KnobPercentX As Float, KnobPercentY As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the touchpad.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an on-screen joystick. The movement area of the joystick is circular, centered on the touchpad, and its size determined by the smaller touchpad dimension. The preferred size of the touchpad is determined by its background.
DeadzoneRadius: The distance in pixels from the center of the touchpad required for the knob to be moved.
EvtPrefix: The prefix of Act and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>DeadzoneRadius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad.lgTouchpadStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTouched</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>KnobPercentY</name>
            <returntype>float</returntype>
            <comment>Returns the y-position of the knob as a percentage from the center of the touchpad to the edge of the circular movement
 area. The positive direction is up.</comment>
        </property>
        <property>
            <name>KnobPercentX</name>
            <returntype>float</returntype>
            <comment>Returns the x-position of the knob as a percentage from the center of the touchpad to the edge of the circular movement
 area. The positive direction is right.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad.lgTouchpadStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad.lgTouchpadStyle</type>
            </parameter>
            <comment>Gets or sets the touchpad's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Deadzone</name>
            <parameter>
                <name>deadzoneRadius</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>KnobY</name>
            <returntype>float</returntype>
            <comment>Returns the y-position of the knob relative to the center of the widget. The positive direction is up.</comment>
        </property>
        <property>
            <name>KnobX</name>
            <returntype>float</returntype>
            <comment>Returns the x-position of the knob relative to the center of the widget. The positive direction is right.</comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad.lgTouchpadStyle</name>
        <shortname>lgScn2DTouchpadStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Knob</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>SetKnobSize</name>
            <comment>Sets the MinWidth and MinHeight of the knob drawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTouchpad.lgTouchpadStyle</type>
            </parameter>
        </method>
        <field>
            <name>background</name>
            <comment>Stretched in both directions. Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>knob</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTiledDrawable</name>
        <shortname>lgScn2DTiledDrawable</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a TiledDrawable. Its texture region must be set before use.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws this drawable at the specified bounds. The drawable should be tinted with lgSpriteBatch.Color, possibly by mixing its own color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a TiledDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a TiledDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RegionDrw</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextureRegionDrawable</type>
            </parameter>
        </method>
        <property>
            <name>RightWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>RightWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Region</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LeftWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>LeftWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BottomHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>BottomHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TopHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>TopHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTextureRegionDrawable</name>
        <shortname>lgScn2DTextureRegionDrawable</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a TextureRegionDrawable. The texture region must be set before use.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws this drawable at the specified bounds. The drawable should be tinted with lgSpriteBatch.Color, possibly by mixing its own color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a TextureRegionDrawable. MinWidth and MinHeight are set to the region size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a TextureRegionDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>RegionDrw</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextureRegionDrawable</type>
            </parameter>
        </method>
        <property>
            <name>RightWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>RightWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Region</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LeftWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>LeftWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BottomHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>BottomHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TopHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>TopHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTextField</name>
        <shortname>lgScn2DTextField</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>AcceptChar(Key As Char) As Boolean</event>
        <event>Changed(Key As Char, Text As String)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the text field.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>copy</name>
            <comment>Copies the selected contents of this TextField to the clipboard.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a single-line text input field.
EvtPrefix: The prefix of Act, AcceptChar and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextField.lgTextFieldStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>next</name>
            <comment>Focuses the next TextField. If none is found, the keyboard is hidden. Does nothing if the text field is not in a stage.
up: If true, the TextField with the same or next smallest y coordinate is found, else the next highest.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>up</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setSelection</name>
            <comment>Sets the selected text.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>selectionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>selectionEnd</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearSelection</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>selectAll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>cut</name>
            <comment>Copies the selected contents of this TextField to the clipboard, then removes it.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>PasswordMode</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>passwordMode</name>
                <type>boolean</type>
            </parameter>
            <comment>If True, the text in this text field will be shown as bullet characters, or the character set via PasswordCharacter. The font must have the character or this will have no effect.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BlinkTime</name>
            <parameter>
                <name>blinkTime</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTextField.lgTextFieldStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextField.lgTextFieldStyle</type>
            </parameter>
            <comment>Gets or sets the TextField's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>OnlyFontChars</name>
            <parameter>
                <name>onlyFontChars</name>
                <type>boolean</type>
            </parameter>
            <comment>When False, if the text set via Text contains characters not in the font, a space is displayed instead.
When True (the default), characters not in the font are stripped.
Characters not in the font are always stripped when typed or pasted.</comment>
        </property>
        <property>
            <name>MaxLength</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxLength</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>disabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>FocusTraversal</name>
            <parameter>
                <name>focusTraversal</name>
                <type>boolean</type>
            </parameter>
            <comment>If True (the default), Enter will move to the next text field.</comment>
        </property>
        <property>
            <name>RightAligned</name>
            <parameter>
                <name>rightAligned</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CursorPosition</name>
            <returntype>int</returntype>
            <parameter>
                <name>cursorPosition</name>
                <type>int</type>
            </parameter>
            <comment>Sets the cursor position and clears any selection.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PasswordCharacter</name>
            <parameter>
                <name>passwordCharacter</name>
                <type>char</type>
            </parameter>
            <comment>Sets the password character for the text field. The character must be present in the bitmap font.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MessageText</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>messageText</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Sets the text that will be drawn in the text field if no text has been entered.</comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTextField.lgTextFieldStyle</name>
        <shortname>lgScn2DTextFieldStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Cursor</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextField.lgTextFieldStyle</type>
            </parameter>
        </method>
        <property>
            <name>MessageFont</name>
            <parameter>
                <name>MsgFont</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Font</name>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>fontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>cursor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>messageFontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>focusedBackground</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledBackground</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledFontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>selection</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>focusedFontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTextButton</name>
        <shortname>lgScn2DTextButton</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Click(CheckedState As Boolean)</event>
        <method>
            <name>AlignLeft</name>
            <comment>Adds ALIGN_Left and clears ALIGN_Right for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>DebugWidget</name>
            <comment>Turns on widget debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DebugCell</name>
            <comment>Turns on cell debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the TextButton.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>DebugAll</name>
            <comment>Turns on all debug lines.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Defaults</name>
            <comment>Returns the cell values that will be used as the defaults for all cells.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>ColumnDefaults</name>
            <comment>Gets the cell values that will be used as the defaults for all cells in the specified column. Columns are indexed starting at 0.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Column</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel</name>
            <comment>Adds a new cell with a label. The label is created with the specified text and style.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AddCell</name>
            <comment>Adds a cell without a widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignBottom</name>
            <comment>Adds ALIGN_Bottom and clears ALIGN_Top for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>AlignTop</name>
            <comment>Adds ALIGN_Top and clears ALIGN_Bottom for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Stack</name>
            <comment>Adds a new cell to the table with the specified actors in a Stack.
Actors: May be null to add a stack without any actors.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Actors</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor[]</type>
            </parameter>
        </method>
        <method>
            <name>DebugTable</name>
            <comment>Turns on table debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetCell</name>
            <comment>Returns the cell for the specified widget in this table, or null.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignRight</name>
            <comment>Adds ALIGN_Right and clears ALIGN_Left for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors and cells from the table.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRow</name>
            <comment>Returns the row index for the y coordinate.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a button that contains a label. lgScn2DTextButton extends lgScn2DButton which extends lgScn2DTable, so widgets can be added to the TextButton using the Table methods.
The preferred size of the TextButton is determined by the background and the button contents.
EvtPrefix: The prefix of Act and Click events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextButton.lgTextButtonStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCellsList</name>
            <comment>Fills the given list with all cells of this table.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>lstCells</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>GetCell2</name>
            <comment>Returns the cell with the specified index, or Null if index is out of bounds.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddActor</name>
            <comment>Adds a new cell to the table with the specified widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toggle</name>
            <comment>Toggles the checked state. This method changes the checked state, which fires a Click event if not disabled, so can be used to simulate a button click.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignCenter</name>
            <comment>Sets the alignment of the logical table within the table widget to ALIGN_Center. This clears any other alignment.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawDebug</name>
            <comment>Draws the debug lines for all tables in the stage. If this method is not called each frame, no debug lines will be drawn. If
 debug is never turned on for any table in the application, calling this method will have no effect. If a table has ever had
 debug set, calling this method causes an expensive traversal of all actors in the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Stage</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgStage</type>
            </parameter>
        </method>
        <method>
            <name>NewRow</name>
            <comment>Indicates that subsequent cells should be added to a new row.
Returns the cell values that will be used as the defaults for all cells in the new row.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel2</name>
            <comment>Adds a new cell with a label. The label is created with the specified text, font and color.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Removes all actors and cells from the table (same as ClearChildren) and additionally resets all table properties and cell, column, and row defaults.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTextButton.lgTextButtonStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextButton.lgTextButtonStyle</type>
            </parameter>
            <comment>Gets or sets the TextButton's style.</comment>
        </property>
        <property>
            <name>Clip</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the contents are clipped if they exceed the table widget bounds. Enabling clipping will set Transform to True.</comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isDisabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the button is disabled. When True, the button will not toggle the checked state when clicked and will not fire a Click event.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>int</returntype>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment>Sets the alignment of the logical table within the table widget. Set to one of the ALIGN constants, or any combination of those.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isChecked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>LabelCell</name>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Round</name>
            <parameter>
                <name>round</name>
                <type>boolean</type>
            </parameter>
            <comment>If true (the default), positions and sizes are rounded to integers.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>PadY</name>
            <returntype>float</returntype>
            <comment>Returns PadTop plus PadBottom.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadX</name>
            <returntype>float</returntype>
            <comment>Returns PadLeft plus PadRight.</comment>
        </property>
        <property>
            <name>Label</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgLabel</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTextButton.lgTextButtonStyle</name>
        <shortname>lgScn2DTextButtonStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Up</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Down</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgTextButton.lgTextButtonStyle</type>
            </parameter>
        </method>
        <method>
            <name>SetDrawableSize</name>
            <comment>Sets the MinWidth and MinHeight of the Up, Down, Checked and Disabled drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Font</name>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>fontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>downFontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>pressedOffsetX</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>pressedOffsetY</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>disabledFontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>up</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>unpressedOffsetY</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>unpressedOffsetX</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>down</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>checked</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabled</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>checkedFontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgTable</name>
        <shortname>lgScn2DTable</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>AlignLeft</name>
            <comment>Adds ALIGN_Left and clears ALIGN_Right for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>DebugWidget</name>
            <comment>Turns on widget debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DebugCell</name>
            <comment>Turns on cell debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the table.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>DebugAll</name>
            <comment>Turns on all debug lines.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Defaults</name>
            <comment>Returns the cell values that will be used as the defaults for all cells.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>ColumnDefaults</name>
            <comment>Gets the cell values that will be used as the defaults for all cells in the specified column. Columns are indexed starting at 0.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Column</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel</name>
            <comment>Adds a new cell with a label. The label is created with the specified text and style.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AddCell</name>
            <comment>Adds a cell without a widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignBottom</name>
            <comment>Adds ALIGN_Bottom and clears ALIGN_Top for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>AlignTop</name>
            <comment>Adds ALIGN_Top and clears ALIGN_Bottom for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Stack</name>
            <comment>Adds a new cell to the table with the specified actors in a Stack.
Actors: May be null to add a stack without any actors.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Actors</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor[]</type>
            </parameter>
        </method>
        <method>
            <name>DebugTable</name>
            <comment>Turns on table debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetCell</name>
            <comment>Returns the cell for the specified widget in this table, or null.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignRight</name>
            <comment>Adds ALIGN_Right and clears ALIGN_Left for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors and cells from the table.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRow</name>
            <comment>Returns the row index for the y coordinate.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new table.
EvtPrefix: The prefix of Act and Draw events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCellsList</name>
            <comment>Fills the given list with all cells of this table.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>lstCells</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>GetCell2</name>
            <comment>Returns the cell with the specified index, or Null if index is out of bounds.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddActor</name>
            <comment>Adds a new cell to the table with the specified widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignCenter</name>
            <comment>Sets the alignment of the logical table within the table widget to ALIGN_Center. This clears any other alignment.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawDebug</name>
            <comment>Draws the debug lines for all tables in the stage. If this method is not called each frame, no debug lines will be drawn. If
 debug is never turned on for any table in the application, calling this method will have no effect. If a table has ever had
 debug set, calling this method causes an expensive traversal of all actors in the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Stage</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgStage</type>
            </parameter>
        </method>
        <method>
            <name>NewRow</name>
            <comment>Indicates that subsequent cells should be added to a new row.
Returns the cell values that will be used as the defaults for all cells in the new row.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel2</name>
            <comment>Adds a new cell with a label. The label is created with the specified text, font and color.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Removes all actors and cells from the table (same as ClearChildren) and additionally resets all table properties and cell, column, and row defaults.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Clip</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the contents are clipped if they exceed the table widget bounds. Enabling clipping will set Transform to True.</comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>int</returntype>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment>Sets the alignment of the logical table within the table widget. Set to one of the ALIGN constants, or any combination of those.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <comment>Gets or sets the background drawable.
The table's padding is set to BottomHeight, TopHeight, LeftWidth, and RightWidth of the drawable.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Round</name>
            <parameter>
                <name>round</name>
                <type>boolean</type>
            </parameter>
            <comment>If true (the default), positions and sizes are rounded to integers.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>PadY</name>
            <returntype>float</returntype>
            <comment>Returns PadTop plus PadBottom.</comment>
        </property>
        <property>
            <name>PadX</name>
            <returntype>float</returntype>
            <comment>Returns PadLeft plus PadRight.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgStage</name>
        <shortname>lgScn2DStage</shortname>
        <owner>process</owner>
        <method>
            <name>CancelTouchFocus</name>
            <comment>Sends a TouchUp event to all listeners that are registered to receive TouchDragged and TouchUp events and removes their touch focus. The location of the TouchUp is -2147483648. Listeners can use isTouchFocusCancel to ignore this event if needed.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Clear</name>
            <comment>Removes the root's children, actions, and listeners.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Unfocus</name>
            <comment>Removes the touch and keyboard focus for the specified actor and any descendants.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetViewport</name>
            <comment>Sets up the stage size using a viewport that fills the entire screen.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeepAspectRatio</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ScreenToStageCoordinates</name>
            <comment>Transforms the screen coordinates to stage coordinates.
ScreenCoords: Input screen coordinates and output for resulting stage coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ScreenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>AddTouchFocus</name>
            <comment>Adds the listener to be notified for all TouchDragged and TouchUp events for the specified pointer.
ListenerActor: The actor that the listener is attached to.
Target: The actor that events will originate from.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>ListenerActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Target</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>StageToScreenCoordinates</name>
            <comment>Transforms the stage coordinates to screen coordinates.
StageCoords: Input stage coordinates and output for resulting screen coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>StageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Act2</name>
            <comment>Calls the Act function of each actor in the stage. Typically called each frame. This method also fires Enter and Exit events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetViewport2</name>
            <comment>Sets up the stage size and viewport. The viewport is the glViewport position and size, which is the portion of the screen used by the stage. The stage size determines the units used within the stage, depending on keepAspectRatio:
 If keepAspectRatio is False, the stage is stretched to fill the viewport, which may distort the aspect ratio.
 If keepAspectRatio is True, the stage is first scaled to fit the viewport in the longest dimension. Next the shorter dimension is lengthened to fill the viewport, which keeps the aspect ratio from changing. The GutterWidth and GutterHeight provide access to the amount that was lengthened.
ViewportX: The bottom left corner of the viewport in glViewport coordinates.
ViewportY: The bottom left corner of the viewport in glViewport coordinates.
ViewportWidth: The width of the viewport in pixels.
ViewportHeight: The height of the viewport in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StageWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>StageHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeepAspectRatio</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ViewportX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportHeight</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CancelTouchFocus2</name>
            <comment>Cancels touch focus for all listeners except the specified listener.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>Actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>AddCaptureListener</name>
            <comment>Adds a capture listener to the root.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>CListener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a stage with the specified viewport. The stage will use its own SpriteBatch, which will be disposed when the stage is disposed.
KeepAspectRatio: False = the stage is stretched to fill the viewport, which may distort the aspect ratio. True = the stage is first scaled to fit the viewport in the longest dimension. Next the shorter dimension is lengthened to fill the viewport, which keeps the aspect ratio from changing.
EvtPrefix: The prefix of the Act and Draw events of the root group.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeepAspectRatio</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a stage with the specified viewport and SpriteBatch. This can be used to avoid creating a new SpriteBatch (which can be somewhat slow) if multiple stages are used during an application's life time.
The SpriteBatch will not be disposed if Dispose is called. You have to handle disposal yourself.
KeepAspectRatio: False = the stage is stretched to fill the viewport, which may distort the aspect ratio. True = the stage is first scaled to fit the viewport in the longest dimension. Next the shorter dimension is lengthened to fill the viewport, which keeps the aspect ratio from changing.
EvtPrefix: The prefix of the Act and Draw events of the root group.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeepAspectRatio</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a stage with a viewport equal to the device screen resolution. The stage will use its own SpriteBatch, which will be disposed when the stage is disposed.
EvtPrefix: The prefix of the Act and Draw events of the root group.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Hit</name>
            <comment>Returns the Actor with the highest z-index at the specified location in stage coordinates, or Null if no actor was hit.
To get stage coordinates from screen coordinates, use screenToStageCoordinates.
Touchable: If true, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>StageX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>StageY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetActorsList</name>
            <comment>Gets an array of the child actors of the root group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all resources of this stage.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Act</name>
            <comment>Calls Act2 with lgGraphics.DeltaTime.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>UnfocusAll</name>
            <comment>Removes the touch and keyboard focus for all focused actors.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddListener</name>
            <comment>Adds a regular listener to the root.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>AddAction</name>
            <comment>Adds the given action to the root of the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>RemoveCaptureListener</name>
            <comment>Removes a capture listener from the root.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>CListener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>AddActor</name>
            <comment>Adds the given actor to the root of the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>RemoveTouchFocus</name>
            <comment>Removes the listener from being notified for all TouchDragged and TouchUp events for the specified pointer. Note the listener may never receive a TouchUp event if this method is used.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
            <parameter>
                <name>ListenerActor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Target</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Pointer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveListener</name>
            <comment>Removes a regular listener from the root.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <property>
            <name>GutterWidth</name>
            <returntype>float</returntype>
            <comment>Returns half the amount in the X direction that the stage's viewport was lengthened to fill the screen.</comment>
        </property>
        <property>
            <name>Camera</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
            <comment>Gets or sets the stage's camera. The camera must be configured properly or SetViewport can be called after the camera is set. Draw will call Camera.Update and use the Camera.Combined matrix for the SpriteBatch projection matrix.</comment>
        </property>
        <property>
            <name>SpriteBatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Root</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the root group which holds all actors in the stage.</comment>
        </property>
        <property>
            <name>KeyboardFocus</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment>Gets or sets the actor that will receive key events. May be null.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <comment>Returns the height of the stage's viewport.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <comment>Returns the width of the stage's viewport.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Stage</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GutterHeight</name>
            <returntype>float</returntype>
            <comment>Returns half the amount in the Y direction that the stage's viewport was lengthened to fill the screen.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSpriteDrawable</name>
        <shortname>lgScn2DSpriteDrawable</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a SpriteDrawable. The sprite must be set before use.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw2</name>
            <comment>Draws this drawable. The drawable should be tinted with lgSpriteBatch.Color, possibly by mixing its own color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws this drawable. The drawable should be tinted with lgSpriteBatch.Color, possibly by mixing its own color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a SpriteDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a SpriteDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteDrw</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSpriteDrawable</type>
            </parameter>
        </method>
        <property>
            <name>RightWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>RightWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LeftWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>LeftWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BottomHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>BottomHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TopHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>TopHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Sprite</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSprite</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane</name>
        <shortname>lgScn2DSplitPane</shortname>
        <owner>process</owner>
        <event>TouchDown(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>TouchDragged(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int)</event>
        <event>Act(Delta As Float)</event>
        <event>Draw(SpriteBatch As lgSpriteBatch, ParentAlpha As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the SplitPane.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a container that contains two widgets and is divided either horizontally or vertically. The user may resize the widgets. The child widgets are always sized to fill their half of the splitpane.
The preferred size of a SplitPane is that of the child widgets and the size of the lgScn2DSplitPaneStyle.handle. The widgets are sized depending on the SplitPane's size and the split position.
EvtPrefix: The prefix of Act, Draw and Touch events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>FirstWidget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>SecondWidget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Vertical</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane.lgSplitPaneStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane.lgSplitPaneStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane.lgSplitPaneStyle</type>
            </parameter>
            <comment>Gets or sets the SplitPane's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>FirstWidget</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SecondWidget</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SplitAmount</name>
            <returntype>float</returntype>
            <parameter>
                <name>split</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the split amount between the min and max amount.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinSplitAmount</name>
            <returntype>float</returntype>
            <parameter>
                <name>minAmount</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>Vertical</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>vertical</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxSplitAmount</name>
            <returntype>float</returntype>
            <parameter>
                <name>maxAmount</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane.lgSplitPaneStyle</name>
        <shortname>lgScn2DSplitPaneStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Handle</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSplitPane.lgSplitPaneStyle</type>
            </parameter>
        </method>
        <property>
            <name>HorizontalHandleSize</name>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <comment>Sets the MinWidth of the handle drawable.</comment>
        </property>
        <property>
            <name>VerticalHandleSize</name>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment>Sets the MinHeight of the handle drawable.</comment>
        </property>
        <field>
            <name>handle</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSlider</name>
        <shortname>lgScn2DSlider</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Changed(NewValue As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetValue</name>
            <comment>Sets the slider position, rounded to the nearest step size and clamped to the minimum and maximum values.
Returns False if the value was not changed because the slider already had the value or it was canceled by a listener.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the slider.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new slider. Its width is determined by the PrefWidth parameter, and its height is determined by the maximum of the height of either the background NinePatch or the knob TextureRegion.
The Min and Max values determine the range the values of this slider can take on. The StepSize parameter specifies the distance between individual values. E.g. Min could be 4, Max could be 10 and StepSize could be 0.2, giving you a total of 31 values: 4.0, 4.2, 4.4 and so on.
EvtPrefix: The prefix of Act and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Max</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>StepSize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Vertical</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSlider.lgSliderStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>isDragging</name>
            <comment>Returns true if the slider is being dragged.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setSnapToValues</name>
            <comment>Will make this slider snap to the specified values, if the knob is within the threshold.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>threshold</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRange</name>
            <comment>Sets the range of this slider. The slider's current value is clamped to the range.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>MinValue</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgSlider.lgSliderStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSlider.lgSliderStyle</type>
            </parameter>
            <comment>Gets or sets the slider's style.</comment>
        </property>
        <property>
            <name>MaxValue</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>disabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimateDuration</name>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <comment>If &gt; 0, changes to the slider value via Value or SetValue will happen over this duration in seconds.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimateInterpolation</name>
            <parameter>
                <name>animateInterpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
            <comment>Sets the interpolation to use for AnimateDuration.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>VisualValue</name>
            <returntype>float</returntype>
            <comment>If animating the slider value, this returns the value currently displayed.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>float</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the slider position, rounded to the nearest step size and clamped to the minimum and maximum values.</comment>
        </property>
        <property>
            <name>StepSize</name>
            <returntype>float</returntype>
            <parameter>
                <name>stepSize</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSlider.lgSliderStyle</name>
        <shortname>lgScn2DSliderStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Knob</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>SetKnobSize</name>
            <comment>Sets the MinWidth and MinHeight of the Knob, knobAfter and knobBefore drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSlider.lgSliderStyle</type>
            </parameter>
        </method>
        <field>
            <name>knobBefore</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnobAfter</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>The background, stretched only in one direction.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>knobAfter</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnob</name>
            <comment>Optional, centered on the background.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledBackground</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnobBefore</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>knob</name>
            <comment>Optional, centered on the background.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox</name>
        <shortname>lgScn2DSelectBox</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Changed(SelectedIndex As Int, SelectedItem As String)</event>
        <method>
            <name>SetSelection</name>
            <comment>Sets the selection to the specified item if found, else sets the selection to nothing.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Item</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the SelectBox.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a drop-down list.
The preferred size of the select box is determined by the maximum text bounds of the items.
EvtPrefix: The prefix of Act and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Items</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox.lgSelectBoxStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hideList</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxListCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxListCount</name>
                <type>int</type>
            </parameter>
            <comment>Set the max number of items to display when the select box is opened. Set to 0 (the default) to display as many as fit in
 the stage height.</comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox.lgSelectBoxStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox.lgSelectBoxStyle</type>
            </parameter>
            <comment>Gets or sets the SelectBox's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <parameter>
                <name>disabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Items</name>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>objects</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the index of the currently selected item. The top item has an index of 0. Nothing selected has an index of -1.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Selection</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the string of the currently selected item.</comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox.lgSelectBoxStyle</name>
        <shortname>lgScn2DSelectBoxStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>ListStyle</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</type>
            </parameter>
            <parameter>
                <name>ScrollPaneStyle</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgSelectBox.lgSelectBoxStyle</type>
            </parameter>
        </method>
        <property>
            <name>Font</name>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollStyle</name>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ListStyle</name>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>fontColor</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>backgroundOpen</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>backgroundDisabled</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>backgroundOver</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledFontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane</name>
        <shortname>lgScn2DScrollPane</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>updateVisualScroll</name>
            <comment>Sets the visual scroll amount equal to the scroll amount. This can be used when setting the scroll amount without animating.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>cancel</name>
            <comment>If currently scrolling by tracking a touch down, stop scrolling.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setupFadeScrollBars</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fadeAlphaSeconds</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fadeDelaySeconds</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isFlinging</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isPanning</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarPositions</name>
            <comment>Set the position of the vertical and horizontal scroll bars (if they exist).
bottom: sets horizontal scroll bar to be at the bottom or the top
right: sets vertical scroll bar to be at the right or the left</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bottom</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the ScrollPane.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isForceScrollX</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isForceScrollY</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a ScrollPane that scrolls a child widget using scrollbars and/or touch dragging.
Scrolling is automatically enabled when the widget is larger than the scroll pane. If the widget is smaller than the scroll pane in one direction, it is sized to the scroll pane in that direction.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>fling</name>
            <comment>Generate fling gesture.
flingTime: Time in seconds for which you want to fling last.
velocityX: Velocity for horizontal direction.
velocityY: Velocity for vertical direction.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flingTime</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>velocityX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>velocityY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>isDragging</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>setOverscroll</name>
            <comment>For flick scroll, if true the widget can be scrolled slightly past its bounds and will animate back to its bounds when
 scrolling is stopped. Default is true.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>overscrollX</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>overscrollY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setupOverscroll</name>
            <comment>For flick scroll, sets the overscroll distance in pixels and the speed it returns to the widget's bounds in seconds. Default
 is 50, 30, 200.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>distance</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>speedMin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>speedMax</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScrollingDisabled</name>
            <comment>Disables scrolling in a direction. The widget will be sized to the FlickScrollPane in the disabled direction.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isScrollY</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isScrollX</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setForceScroll</name>
            <comment>Forces enabling scrollbars (for non-flick scroll) and overscrolling (for flick scroll) in a direction, even if the contents
 do not exceed the bounds in that direction.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>scrollTo</name>
            <comment>Sets the scroll offset so the specified rectangle is fully in view, if possible. Coordinates are in the scroll pane widget's
 coordinate system.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>scrollToCenter</name>
            <comment>Sets the scroll offset so the specified rectangle is fully in view and centered vertically in the scroll pane, if possible.
 Coordinates are in the scroll pane widget's coordinate system.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SmoothScrolling</name>
            <parameter>
                <name>smoothScrolling</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</type>
            </parameter>
            <comment>Gets or sets the ScrollPane's style.</comment>
        </property>
        <property>
            <name>VelocityX</name>
            <returntype>float</returntype>
            <parameter>
                <name>velocityX</name>
                <type>float</type>
            </parameter>
            <comment>Gets the flick scroll y velocity.</comment>
        </property>
        <property>
            <name>CancelTouchFocus</name>
            <parameter>
                <name>cancelTouchFocus</name>
                <type>boolean</type>
            </parameter>
            <comment>When True (default), the touch focus is cancelled when flick scrolling begins. This causes widgets inside the scrollpane that have received TouchDown to receive TouchUp when flick scrolling begins.</comment>
        </property>
        <property>
            <name>VelocityY</name>
            <returntype>float</returntype>
            <parameter>
                <name>velocityY</name>
                <type>float</type>
            </parameter>
            <comment>Gets the flick scroll y velocity.</comment>
        </property>
        <property>
            <name>ScrollbarsOnTop</name>
            <parameter>
                <name>scrollbarsOnTop</name>
                <type>boolean</type>
            </parameter>
            <comment>When False (the default), the widget is clipped so it is not drawn under the scrollbars. When True, the widget is clipped to the entire scroll pane bounds and the scrollbars are drawn on top of the widget. If FadeScrollBars is True, the scroll bars are always drawn on top.</comment>
        </property>
        <property>
            <name>ScrollBarHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>VisualScrollX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>VisualScrollY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScrollWidth</name>
            <returntype>float</returntype>
            <comment>Returns the width of the scrolled viewport.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>VariableSizeKnobs</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>variableSizeKnobs</name>
                <type>boolean</type>
            </parameter>
            <comment>If True (default), the scroll knobs are sized based on MaxX or MaxY. If False, the scroll knobs are sized based on MinWidth or MinHeight of the drawable.</comment>
        </property>
        <property>
            <name>ScrollY</name>
            <returntype>float</returntype>
            <parameter>
                <name>pixels</name>
                <type>float</type>
            </parameter>
            <comment>Returns the y scroll position in pixels.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>ScrollBarWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScrollX</name>
            <returntype>float</returntype>
            <parameter>
                <name>pixels</name>
                <type>float</type>
            </parameter>
            <comment>Returns the x scroll position in pixels.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxY</name>
            <returntype>float</returntype>
            <comment>Returns the maximum scroll value in the y direction.</comment>
        </property>
        <property>
            <name>MaxX</name>
            <returntype>float</returntype>
            <comment>Returns the maximum scroll value in the x direction.</comment>
        </property>
        <property>
            <name>Widget</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <comment>Gets or sets the widget embedded in this scroll pane. Set to Null to remove the current widget.</comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FadeScrollBars</name>
            <parameter>
                <name>fadeScrollBars</name>
                <type>boolean</type>
            </parameter>
            <comment>When true the scroll bars fade out after some time of not being used.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Clamp</name>
            <parameter>
                <name>clamp</name>
                <type>boolean</type>
            </parameter>
            <comment>For flick scroll, prevents scrolling out of the widget's bounds. Default is true.</comment>
        </property>
        <property>
            <name>ScrollHeight</name>
            <returntype>float</returntype>
            <comment>Returns the height of the scrolled viewport.</comment>
        </property>
        <property>
            <name>FlickScroll</name>
            <parameter>
                <name>flickScroll</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>FlingTime</name>
            <parameter>
                <name>flingTime</name>
                <type>float</type>
            </parameter>
            <comment>For flick scroll, sets the amount of time in seconds that a fling will continue to scroll. Default is 1.</comment>
        </property>
        <property>
            <name>ScrollPercentY</name>
            <returntype>float</returntype>
            <parameter>
                <name>percentY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollPercentX</name>
            <returntype>float</returntype>
            <parameter>
                <name>percentX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</name>
        <shortname>lgScn2DScrollPaneStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>HScroll</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>HScrollKnob</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>VScroll</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>VScrollKnob</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>SetScrollbarHeight</name>
            <comment>Sets the MinHeight of the hScroll and hScrollKnob drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgScrollPane.lgScrollPaneStyle</type>
            </parameter>
        </method>
        <method>
            <name>SetScrollbarWidth</name>
            <comment>Sets the MinWidth of the vScroll and vScrollKnob drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>vScroll</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>hScroll</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>corner</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>hScrollKnob</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>vScrollKnob</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar</name>
        <shortname>lgScn2DProgressBar</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetValue</name>
            <comment>Sets the progress bar position, rounded to the nearest step size and clamped to the minimum and maximum values.
Returns False if the value was not changed because the progress bar already had the value or it was canceled by a listener.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the progress bar.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Progress Bar. Its width is determined by the PrefWidth parameter, and its height is determined by the maximum of the height of either the background NinePatch or the knob TextureRegion.
The Min and Max values determine the range the values of this Progress Bar can take on. The StepSize parameter specifies the distance between individual values. E.g. Min could be 4, Max could be 10 and StepSize could be 0.2, giving you a total of 31 values: 4.0, 4.2, 4.4 and so on.
EvtPrefix: The prefix of Act and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Max</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>StepSize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Vertical</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar.lgProgressBarStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setSnapToValues</name>
            <comment>Will make this progress bar snap to the specified values, if the knob is within the threshold.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>threshold</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRange</name>
            <comment>Sets the range of this progress bar. The progress bar's current value is clamped to the range.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>MinValue</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar.lgProgressBarStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar.lgProgressBarStyle</type>
            </parameter>
            <comment>Gets or sets the progress bar's style.</comment>
        </property>
        <property>
            <name>MaxValue</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>disabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimateDuration</name>
            <parameter>
                <name>duration</name>
                <type>float</type>
            </parameter>
            <comment>If &gt; 0, changes to the progress bar value via Value or SetValue will happen over this duration in seconds.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimateInterpolation</name>
            <parameter>
                <name>animateInterpolation</name>
                <type>com.badlogic.gdx.math.Interpolation</type>
            </parameter>
            <comment>Sets the interpolation to use for AnimateDuration.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>VisualValue</name>
            <returntype>float</returntype>
            <comment>If animating the progress bar value, this returns the value currently displayed.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>float</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the progress bar position, rounded to the nearest step size and clamped to the minimum and maximum values.</comment>
        </property>
        <property>
            <name>StepSize</name>
            <returntype>float</returntype>
            <parameter>
                <name>stepSize</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar.lgProgressBarStyle</name>
        <shortname>lgScn2DProgressBarStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Background</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Knob</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>SetKnobSize</name>
            <comment>Sets the MinWidth and MinHeight of the Knob, knobAfter and knobBefore drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgProgressBar.lgProgressBarStyle</type>
            </parameter>
        </method>
        <method>
            <name>SetDisabledKnobSize</name>
            <comment>Sets the MinWidth and MinHeight of the disabledKnob, disabledKnobAfter and disabledKnobBefore drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>knobBefore</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnobAfter</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>The background, stretched only in one direction.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>knobAfter</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnob</name>
            <comment>Optional, centered on the background.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledBackground</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabledKnobBefore</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>knob</name>
            <comment>Optional, centered on the background.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgNinePatchDrawable</name>
        <shortname>lgScn2DNinePatchDrawable</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a NinePatchDrawable. The ninepatch must be set before use.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws this drawable at the specified bounds. The drawable should be tinted with lgSpriteBatch.Color, possibly by mixing its own color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a NinePatchDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Patch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a NinePatchDrawable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>PatchDrw</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgNinePatchDrawable</type>
            </parameter>
        </method>
        <property>
            <name>RightWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>RightWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>NinePatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</returntype>
            <parameter>
                <name>Patch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LeftWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>LeftWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BottomHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>BottomHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TopHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>TopHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgList</name>
        <shortname>lgScn2DList</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Changed(SelectedIndex As Int, SelectedItem As String)</event>
        <method>
            <name>SetSelection</name>
            <comment>Sets the selection to the specified item if found, else sets the selection to nothing.
Returns the new selected index.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Item</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the list.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a list box that displays textual items and highlights the selected item.
The preferred size of the list is determined by the text bounds of the items.
EvtPrefix: The prefix of Act and Changed events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Items</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ItemHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</type>
            </parameter>
            <comment>Gets or sets the list's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Items</name>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>objects</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the index of the currently selected item. The top item has an index of 0. Nothing selected has an index of -1.</comment>
        </property>
        <property>
            <name>Selectable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>selectable</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this list's items are selectable. If not selectable, touch events will not be consumed.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Selection</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the text of the currently selected item, or null if the list is empty or nothing is selected.</comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</name>
        <shortname>lgScn2DListStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColorSelected</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>FontColorUnselected</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Selection</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgList.lgListStyle</type>
            </parameter>
        </method>
        <property>
            <name>Font</name>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>fontColorUnselected</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>fontColorSelected</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>selection</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgLabel</name>
        <shortname>lgScn2DLabel</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>SetAlignment2</name>
            <comment>
Alignment: Aligns each line of text horizontally and all the text vertically.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Alignment</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the label.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a label.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetFontScale2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>FontScale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>textEquals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>other</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>setAlignment</name>
            <comment>
labelAlign: Aligns all the text with the label widget.
lineAlign: Aligns each line of text (left, right, or center).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>labelAlign</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>lineAlign</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>setFontScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fontScaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fontScaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
            <comment>Gets or sets the label's style.</comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>TextBounds</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Ellipse</name>
            <parameter>
                <name>ellipse</name>
                <type>boolean</type>
            </parameter>
            <comment>When true the text will be truncated with an ellipse if it does not fit within the width of the label. Default is false.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Wrap</name>
            <parameter>
                <name>wrap</name>
                <type>boolean</type>
            </parameter>
            <comment>If false, the text will only wrap where it contains newlines (CRLF). The preferred size of the label will be the text bounds.
If true, the text will word wrap using the width of the label. The preferred width of the label will be 0, it is expected that the something external will set the width of the label. Default is false.
When wrap is enabled, the label's preferred height depends on the width of the label. In some cases the parent of the label will need to layout twice: once to set the width of the label and a second time to adjust to the label's new preferred height.</comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FontScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>fontScaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FontScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>fontScaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AutoPack</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>AutoPack</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether Pack is automatically called when the text is changed. Default is false.</comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>NewText</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</name>
        <shortname>lgScn2DLabelStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
        </method>
        <property>
            <name>Font</name>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>fontColor</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>background</name>
            <comment>Optional.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgImage</name>
        <shortname>lgScn2DImage</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>hit</name>
            <comment>Checks whether this actor contains the specified point and is touchable. The point is specified in the actor's local coordinate system.
Returns the actor or Null.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment>Creates an image stretched, and aligned center.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an image stretched, and aligned center.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Patch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the image.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates an image stretched, and aligned center.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an image with no region or patch, stretched, and aligned center.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all actions and listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithDrawable</name>
            <comment>Creates an image stretched, and aligned center.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Drawable</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InitializeWithDrawable3</name>
            <comment>Creates an image with the specified scaling and alignment.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Drawable</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Scaling</name>
                <type EnumType="true">com.badlogic.gdx.utils.Scaling</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithDrawable2</name>
            <comment>Creates an image aligned center, with the specified scaling.
EvtPrefix: The prefix of Act events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Drawable</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Scaling</name>
                <type EnumType="true">com.badlogic.gdx.utils.Scaling</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>ImageX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>ImageY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>int</returntype>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the image alignment.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Drawable</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
            <parameter>
                <name>drawable</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Scaling</name>
            <parameter>
                <name>scaling</name>
                <type EnumType="true">com.badlogic.gdx.utils.Scaling</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALING_FillY</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>SCALING_FillX</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALING_Fit</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>SCALING_StretchX</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>SCALING_Stretch</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>SCALING_Fill</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALING_StretchY</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALING_None</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.utils.Scaling</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgDragAndDrop</name>
        <shortname>lgScn2DDragAndDrop</shortname>
        <owner>process</owner>
        <event>SrcDragStart(Event As lgScn2DInputEvent, X As Float, Y As Float, Pointer As Int) As lgScn2DDragAndDropPayload</event>
        <event>SrcDragStop(Event As lgScn2DInputEvent, DropTarget As lgScn2DActor, X As Float, Y As Float, Pointer As Int, Payload As lgScn2DDragAndDropPayload)</event>
        <event>TgtDrag(Source As lgScn2DActor, Payload As lgScn2DDragAndDropPayload, X As Float, Y As Float, Pointer As Int) As Boolean</event>
        <event>TgtReset(Source As lgScn2DActor, Payload As lgScn2DDragAndDropPayload)</event>
        <event>TgtDrop(Source As lgScn2DActor, Payload As lgScn2DDragAndDropPayload, X As Float, Y As Float, Pointer As Int)</event>
        <method>
            <name>RemoveSource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Source</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes a drag and drop operation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>SetDragActorPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>DragActorX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>DragActorY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetTouchOffset</name>
            <comment>Sets an offset in stage coordinates from the touch position which is used to determine the drop location. Default is 0,0.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>touchOffsetX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchOffsetY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddSource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Source</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddTarget</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveTarget</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>IsDragging</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>DragActor</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <comment>Returns the current drag actor, or null.</comment>
        </property>
        <property>
            <name>TapSquareSize</name>
            <parameter>
                <name>HalfTapSquareSize</name>
                <type>float</type>
            </parameter>
            <comment>Sets the distance a touch must travel before being considered a drag.</comment>
        </property>
        <property>
            <name>DragTime</name>
            <parameter>
                <name>DragMillis</name>
                <type>int</type>
            </parameter>
            <comment>Time in milliseconds that a drag must take before a drop will be considered valid. This ignores an accidental drag and drop that was meant to be a click. Default is 250.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgButtonGroup</name>
        <shortname>lgScn2DButtonGroup</shortname>
        <owner>process</owner>
        <method>
            <name>SetChecked</name>
            <comment>Sets the first TextButton with the specified text to checked.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>A ButtonGroup manages a group of buttons to enforce a minimum and maximum number of checked buttons. This enables "radio button" functionality and more. A button may only be in one group at a time.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buttons</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton[]</type>
            </parameter>
        </method>
        <method>
            <name>Remove2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buttons</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton[]</type>
            </parameter>
        </method>
        <method>
            <name>Checked</name>
            <comment>Returns the first checked button, or null.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgButton</returntype>
        </method>
        <method>
            <name>Add</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Button</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton</type>
            </parameter>
        </method>
        <method>
            <name>Remove</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Button</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton</type>
            </parameter>
        </method>
        <method>
            <name>UncheckAll</name>
            <comment>Sets all buttons' checked state to False, regardless of MinCheckCount.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Add2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Buttons</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton[]</type>
            </parameter>
        </method>
        <property>
            <name>ButtonsList</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UncheckLast</name>
            <parameter>
                <name>uncheckLast</name>
                <type>boolean</type>
            </parameter>
            <comment>If true, when the maximum number of buttons are checked and an additional button is checked, the last button to be checked
 is unchecked so that the maximum is not exceeded. If false, additional buttons beyond the maximum are not allowed to be
 checked. Default is true.</comment>
        </property>
        <property>
            <name>CheckedButtonsList</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinCheckCount</name>
            <parameter>
                <name>minCheckCount</name>
                <type>int</type>
            </parameter>
            <comment>Sets the minimum number of buttons that must be checked. Default is 1.</comment>
        </property>
        <property>
            <name>MaxCheckCount</name>
            <parameter>
                <name>maxCheckCount</name>
                <type>int</type>
            </parameter>
            <comment>Sets the maximum number of buttons that can be checked. Set to -1 for no maximum. Default is 1.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgButton</name>
        <shortname>lgScn2DButton</shortname>
        <owner>process</owner>
        <event>Act(Delta As Float)</event>
        <event>Click(CheckedState As Boolean)</event>
        <method>
            <name>AlignLeft</name>
            <comment>Adds ALIGN_Left and clears ALIGN_Right for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>DebugWidget</name>
            <comment>Turns on widget debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>validate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of this actor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DebugCell</name>
            <comment>Turns on cell debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetListenersList</name>
            <comment>Gets an array of the actor's regular listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the button.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>ParentAlpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetCaptureListenersList</name>
            <comment>Gets an array of the actor's capture listeners.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>DebugAll</name>
            <comment>Turns on all debug lines.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setPosition</name>
            <comment>Sets the x and y.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Defaults</name>
            <comment>Returns the cell values that will be used as the defaults for all cells.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>ColumnDefaults</name>
            <comment>Gets the cell values that will be used as the defaults for all cells in the specified column. Columns are indexed starting at 0.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Column</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel</name>
            <comment>Adds a new cell with a label. The label is created with the specified text and style.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgLabel.lgLabelStyle</type>
            </parameter>
        </method>
        <method>
            <name>Stage</name>
            <comment>Returns the stage that this actor is currently in, or null if not in a stage.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgStage</returntype>
        </method>
        <method>
            <name>ClipEnd</name>
            <comment>Ends clipping begun by ClipBegin2.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes this actor from its parent, if it has a parent.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AddCell</name>
            <comment>Adds a cell without a widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>localToAscendantCoordinates</name>
            <comment>Converts coordinates for this actor to those of a parent actor. The ascendant does not need to be a direct parent.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>ascendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>toFront</name>
            <comment>Changes the z-order for this actor so it is in front of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all children, actions, and listeners from this group.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignBottom</name>
            <comment>Adds ALIGN_Bottom and clears ALIGN_Top for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>AlignTop</name>
            <comment>Adds ALIGN_Top and clears ALIGN_Bottom for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>removeActor</name>
            <comment>Removes an actor from this group. If the actor has actions, they are cleared.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>localToStageCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the stage's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetActionsList</name>
            <comment>Gets an array of the actor's actions.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>setScale</name>
            <comment>Sets the scalex and scaley.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>parentToLocalCoordinates</name>
            <comment>Converts the coordinates given in the parent's coordinate system to this actor's coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>parentCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>fire</name>
            <comment>Sets this actor as the event target and propagates the event to this actor and ancestor actors as necessary. If this actor is not in the stage, the stage must be set before calling this function.
Events are fired in 2 phases:
 - The first phase (the "capture" phase) notifies listeners on each actor starting at the root and propagating downward to (and including) this actor.
 - The second phase notifies listeners on each actor starting at this actor and, if Bubbles is true, propagating upward to the root.
If the event is stopped at any time, it will not propagate to the next actor.
Returns True if the event was cancelled.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
        </method>
        <method>
            <name>hasParent</name>
            <comment>Returns true if the actor's parent is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>swapActor2</name>
            <comment>Swaps two actors. Returns false if the swap did not occur because the actors are not children of this group.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>screenToLocalCoordinates</name>
            <comment>Transforms the specified point in screen coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>screenCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isTouchable</name>
            <comment>Returns true if input events are processed by this actor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Stack</name>
            <comment>Adds a new cell to the table with the specified actors in a Stack.
Actors: May be null to add a stack without any actors.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Actors</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor[]</type>
            </parameter>
        </method>
        <method>
            <name>DebugTable</name>
            <comment>Turns on table debug lines.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>GetCell</name>
            <comment>Returns the cell for the specified widget in this table, or null.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>addCaptureListener</name>
            <comment>Adds a listener that is only notified during the capture phase.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>pack</name>
            <comment>Sets the width and height of the widget group to its preferred width and height.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AlignRight</name>
            <comment>Adds ALIGN_Right and clears ALIGN_Left for the alignment of the logical table within the table widget.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>hit</name>
            <comment>Returns the child actor with the highest z-index that contains the specified point and is touchable and visible, or Null if no actor was hit. The point is specified in the group's coordinate system (0,0 is the bottom left of the group and width,height is the upper right).
This function is used to delegate TouchDown and Enter/Exit events.
Touchable: If True, the hit detection will respect the touchability.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>touchable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>swapActor</name>
            <comment>Swaps two actors by index. Returns false if the swap did not occur because the indexes were out of bounds.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildren</name>
            <comment>Removes all actors and cells from the table.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a button that contains the specified actor.
EvtPrefix: The prefix of Act and Click events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</type>
            </parameter>
            <parameter>
                <name>Actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getRow</name>
            <comment>Returns the row index for the y coordinate.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a button. A button is a Table with a checked state. Each time a button is clicked, the checked state is toggled. Being a table, a button can contain any other actors.
The preferred size of the button is determined by the background and the button contents.
EvtPrefix: The prefix of Act and Click events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>localToDescendantCoordinates</name>
            <comment>Converts coordinates for this group to those of a descendant actor. The descendant does not need to be a direct child.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>descendant</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>addListener</name>
            <comment>Add a regular listener to receive events that hit this actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>GetActor</name>
            <comment>Returns the actor with the specified index in the group, or Null if index is out of bounds.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCellsList</name>
            <comment>Fills the given list with all cells of this table.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>lstCells</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>GetCell2</name>
            <comment>Returns the cell with the specified index, or Null if index is out of bounds.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddActor</name>
            <comment>Adds a new cell to the table with the specified widget.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Widget</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>clearActions</name>
            <comment>Removes all actions on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isAscendantOf</name>
            <comment>Returns true if this actor is the same as or is the ascendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>findActor</name>
            <comment>Returns the first actor found with the specified name. Note this recursively compares the name of every actor in the group.</comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.Actor</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>hasChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>rotateBy</name>
            <comment>Adds the specified rotation to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>amountInDegrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isDescendantOf</name>
            <comment>Returns true if this actor is the same as or is the descendant of the specified actor.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>actor</name>
                <type>com.badlogic.gdx.scenes.scene2d.Actor</type>
            </parameter>
        </method>
        <method>
            <name>setOrigin</name>
            <comment>Sets the originx and originy.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipBegin</name>
            <comment>Calls ClipBegin2 to clip this actor's bounds.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toggle</name>
            <comment>Toggles the checked state. This method changes the checked state, which fires a Click event if not disabled, so can be used to simulate a button click.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>invalidateHierarchy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>notify</name>
            <comment>Notifies this actor's listeners of the event. The event is not propagated to any parents. Before notifying the
listeners, this actor is set as the listener actor. The event target must be set before calling this function. If
this actor is not in the stage, the stage must be set before calling this function.
Returns True if the event was cancelled.
Capture: If True, the capture listeners will be notified instead of the regular listeners.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>event</name>
                <type>com.badlogic.gdx.scenes.scene2d.Event</type>
            </parameter>
            <parameter>
                <name>capture</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>stageToLocalCoordinates</name>
            <comment>Transforms the specified point in the stage's coordinates to the actor's local coordinate system.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>stageCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>GetChildrenList</name>
            <comment>Returns an ordered list of child actors in this group.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>moveBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignCenter</name>
            <comment>Sets the alignment of the logical table within the table widget to ALIGN_Center. This clears any other alignment.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTable</returntype>
        </method>
        <method>
            <name>setSize</name>
            <comment>Sets the width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>toBack</name>
            <comment>Changes the z-order for this actor so it is in back of all siblings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>removeListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>needsLayout</name>
            <comment>Returns true if the widget's layout has been invalidated.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>print</name>
            <comment>Prints the actor hierarchy recursively for debugging purposes.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearListeners</name>
            <comment>Removes all listeners on this actor.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClipBegin2</name>
            <comment>Clips the specified screen aligned rectangle, specified relative to the transform matrix of the stage's SpriteBatch. The transform
matrix and the stage's camera must not have rotational components. Calling this function must be followed by a call to ClipEnd
if True is returned.
Returns False if the clipping area is zero and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>sizeBy</name>
            <comment>Adds the specified size to the current size.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawDebug</name>
            <comment>Draws the debug lines for all tables in the stage. If this method is not called each frame, no debug lines will be drawn. If
 debug is never turned on for any table in the application, calling this method will have no effect. If a table has ever had
 debug set, calling this method causes an expensive traversal of all actors in the stage.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Stage</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgStage</type>
            </parameter>
        </method>
        <method>
            <name>NewRow</name>
            <comment>Indicates that subsequent cells should be added to a new row.
Returns the cell values that will be used as the defaults for all cells in the new row.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>addAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>act</name>
            <comment>Updates the actor based on time. Typically this is called each frame by Stage.Act.
The default implementation updates and applies each action attached to this actor, then removes actions that are complete.
You can use the Act event to be notified of the update and do your own changes.
delta: Time in seconds since the last frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeCaptureListener</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>listener</name>
                <type>com.badlogic.gdx.scenes.scene2d.EventListener</type>
            </parameter>
        </method>
        <method>
            <name>removeAction</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>action</name>
                <type>com.badlogic.gdx.scenes.scene2d.Action</type>
            </parameter>
        </method>
        <method>
            <name>AddLabel2</name>
            <comment>Adds a new cell with a label. The label is created with the specified text, font and color.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>FontColor</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>localToParentCoordinates</name>
            <comment>Transforms the specified point in the actor's coordinates to be in the parent's coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localCoords</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Reset</name>
            <comment>Removes all actors and cells from the table (same as ClearChildren) and additionally resets all table properties and cell, column, and row defaults.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the actor will be drawn and will receive touch events. Default is True.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Style</name>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</type>
            </parameter>
            <comment>Gets or sets the button's style.</comment>
        </property>
        <property>
            <name>Clip</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the contents are clipped if they exceed the table widget bounds. Enabling clipping will set Transform to True.</comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can be used to store additional data.</comment>
        </property>
        <property>
            <name>Disabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isDisabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the button is disabled. When True, the button will not toggle the checked state when clicked and will not fire a Click event.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CullingArea</name>
            <parameter>
                <name>cullingArea</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <comment>Children completely outside of this rectangle will not be drawn. This is only valid for use with unrotated and unscaled
 actors!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>com.badlogic.gdx.scenes.scene2d.Group</returntype>
            <comment>Returns the parent actor, or null if not in a group.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>float</returntype>
            <comment>Returns y plus height.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>int</returntype>
            <parameter>
                <name>align</name>
                <type>int</type>
            </parameter>
            <comment>Sets the alignment of the logical table within the table widget. Set to one of the ALIGN constants, or any combination of those.</comment>
        </property>
        <property>
            <name>Touchable</name>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
            <parameter>
                <name>touchable</name>
                <type EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</type>
            </parameter>
            <comment>Gets or sets how touch events are distributed to this actor. Default is TOUCHABLE_Enabled.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color the actor will be tinted when drawn.</comment>
        </property>
        <property>
            <name>ZIndex</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the z-index of this actor. The z-index is the index into the parent's children, where a lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front. Setting a z-index less than zero is invalid.</comment>
        </property>
        <property>
            <name>LayoutEnabled</name>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>isChecked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FillParent</name>
            <parameter>
                <name>fillParent</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasActions</name>
            <returntype>boolean</returntype>
            <comment>Returns whether actions are attached to this actor.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>transform</name>
                <type>boolean</type>
            </parameter>
            <comment>When True, the SpriteBatch is transformed so children are drawn in their parent's coordinate system. This has a performance impact because lgSpriteBatch.Flush must be done before and after the transform. If the actors in a group are not rotated or scaled, then the transform for the group can be set to False. In this case, each child's position will be offset by the group's position for drawing, causing the children to appear in the correct location even though the SpriteBatch has not been transformed.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Right</name>
            <returntype>float</returntype>
            <comment>Returns x plus width.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Round</name>
            <parameter>
                <name>round</name>
                <type>boolean</type>
            </parameter>
            <comment>If true (the default), positions and sizes are rounded to integers.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets a name for easier identification of the actor in application code.</comment>
        </property>
        <property>
            <name>PadY</name>
            <returntype>float</returntype>
            <comment>Returns PadTop plus PadBottom.</comment>
        </property>
        <property>
            <name>PadX</name>
            <returntype>float</returntype>
            <comment>Returns PadLeft plus PadRight.</comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TOUCHABLE_Enabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_Disabled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCHABLE_ChildrenOnly</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.scenes.scene2d.Touchable</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</name>
        <shortname>lgScn2DButtonStyle</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Up</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
            <parameter>
                <name>Down</name>
                <type>com.badlogic.gdx.scenes.scene2d.utils.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>anywheresoftware.b4a.libgdx.scene2d.lgButton.lgButtonStyle</type>
            </parameter>
        </method>
        <method>
            <name>SetDrawableSize</name>
            <comment>Sets the MinWidth and MinHeight of the Up, Down, Checked and Disabled drawables.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>unpressedOffsetY</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>unpressedOffsetX</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>pressedOffsetX</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>down</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>pressedOffsetY</name>
            <comment>Optional.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>checked</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>disabled</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
        <field>
            <name>up</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.scenes.scene2d.utils.Drawable</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.WorldManifold</name>
        <shortname>lgBox2DWorldManifold</shortname>
        <comment>This is used to compute the current state of a contact manifold.</comment>
        <owner>process</owner>
        <property>
            <name>Normal</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment>Returns the normal of this manifold</comment>
        </property>
        <property>
            <name>Points</name>
            <returntype>com.badlogic.gdx.math.Vector2[]</returntype>
            <comment>Returns the contact points of this manifold. Use getNumberOfContactPoints to determine how many contact points there are
 (0,1 or 2)</comment>
        </property>
        <property>
            <name>NumberOfContactPoints</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Transform</name>
        <shortname>lgBox2DTransform</shortname>
        <comment>Encodes a Box2D transform. We are lazy so we only store a 4 float wide array. First two floats are the position of the
 b2Transform struct. Next two floats are the cosine and sine of the rotation angle.</comment>
        <owner>process</owner>
        <method>
            <name>mul</name>
            <comment>Transforms the given vector by this transform
v: the vector</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>pos</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Sets the position of this transform</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>angle</name>
                <type>float</type>
            </parameter>
            <comment>Sets the rotation of this transform</comment>
        </property>
        <field>
            <name>SIN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>COS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>vals</name>
            <comment></comment>
            <returntype>float[]</returntype>
        </field>
        <field>
            <name>POS_Y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>POS_X</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Shape</name>
        <shortname>lgBox2DShape</shortname>
        <comment>A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation in b2World are
 created automatically when a b2Fixture is created. Shapes may encapsulate a one or more child shapes.
 
 NOTE: YOU NEED TO DISPOSE SHAPES YOU CREATED YOURSELF AFTER YOU NO LONGER USE THEM! E.g. after calling body.createFixture();</comment>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the shape is no longer used, e.g. after a fixture was created based on the shape.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment>Get the number of child primitives.</comment>
        </property>
        <property>
            <name>Radius</name>
            <returntype>float</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <comment>Returns the radius of this shape</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment>Get the type of this shape. You can use this to down cast to the concrete shape.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.PolygonShape</name>
        <shortname>lgBox2DPolygonShape</shortname>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the shape is no longer used, e.g. after a fixture was created based on the shape.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetAsBox</name>
            <comment>Build vertices to represent an axis-aligned box.
hx: the half-width.
hy: the half-height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>hy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getVertex</name>
            <comment>Returns the vertex at the given position.
index: the index of the vertex 0 &lt;= index &lt; getVertexCount( )
vertex: vertex</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vertex</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>SetAsBox2</name>
            <comment>Build vertices to represent an oriented box.
hx: the half-width.
hy: the half-height.
center: the center of the box in local coordinates.
angle: the rotation in radians of the box in local coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>hy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>center</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Copy vertices. This assumes the vertices define a convex polygon. It is assumed that the exterior is the the right of each
 edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
        </method>
        <method>
            <name>Set2</name>
            <comment>Copy vertices from the given float array. It is assumed the vertices are in x,y order and define a convex polygon. It is
 assumed that the exterior is the the right of each edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Set3</name>
            <comment>Copy vertices from the given float array, taking into account the offset and length. It is assumed the vertices are in
 x,y order and define a convex polygon. It is assumed that the exterior is the the right of each edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>VertexCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment>Get the number of child primitives.</comment>
        </property>
        <property>
            <name>Radius</name>
            <returntype>float</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <comment>Returns the radius of this shape</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment>{@inheritDoc}</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.MassData</name>
        <shortname>lgBox2DMassData</shortname>
        <comment>This holds the mass data computed for a shape.</comment>
        <owner>process</owner>
        <field>
            <name>center</name>
            <comment>The position of the shape's centroid relative to the shape's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>mass</name>
            <comment>The mass of the shape, usually in kilograms.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>I</name>
            <comment>The rotational inertia of the shape about the local origin.</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Manifold</name>
        <shortname>lgBox2DManifold</shortname>
        <owner>process</owner>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Manifold.ManifoldType</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalNormal</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Points</name>
            <returntype>com.badlogic.gdx.physics.box2d.Manifold.ManifoldPoint[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalPoint</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PointCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>MANIFOLDTYPE_FaceA</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Manifold.ManifoldType</returntype>
        </field>
        <field>
            <name>MANIFOLDTYPE_FaceB</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Manifold.ManifoldType</returntype>
        </field>
        <field>
            <name>MANIFOLDTYPE_Circle</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Manifold.ManifoldType</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Manifold.ManifoldPoint</name>
        <shortname>lgBox2DManifoldPoint</shortname>
        <owner>process</owner>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <field>
            <name>localPoint</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>contactID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>tangentImpulse</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>normalImpulse</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.JointEdge</name>
        <shortname>lgBox2DJointEdge</shortname>
        <comment>A joint edge is used to connect bodies and joints together in a joint graph where each body is a node and each joint is an
 edge. A joint edge belongs to a doubly linked list maintained in each attached body. Each joint has two joint nodes, one for
 each attached body.</comment>
        <owner>process</owner>
        <field>
            <name>joint</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
        </field>
        <field>
            <name>other</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.JointDef</name>
        <shortname>lgBox2DJointDef</shortname>
        <owner>process</owner>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Joint</name>
        <shortname>lgBox2DJoint</shortname>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.FixtureDef</name>
        <shortname>lgBox2DFixtureDef</shortname>
        <comment>A fixture definition is used to create a fixture. This class defines an abstract fixture definition. You can reuse fixture
 definitions safely.</comment>
        <owner>process</owner>
        <field>
            <name>density</name>
            <comment>The density, usually in kg/m^2.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>isSensor</name>
            <comment>A sensor shape collects contact information but never generates a collision response.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>friction</name>
            <comment>The friction coefficient, usually in the range [0,1].</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>shape</name>
            <comment>The shape, this must be set. The shape will be cloned, so you can create the shape on the stack.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Shape</returntype>
        </field>
        <field>
            <name>filter</name>
            <comment>Contact filtering data.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Filter</returntype>
        </field>
        <field>
            <name>restitution</name>
            <comment>The restitution (elasticity) usually in the range [0,1].</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Fixture</name>
        <shortname>lgBox2DFixture</shortname>
        <owner>process</owner>
        <method>
            <name>isSensor</name>
            <comment>Is this fixture a sensor (non-solid)?
Return type: @return:the true if the shape is a sensor.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>refilter</name>
            <comment>Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>testPoint</name>
            <comment>Test a point for containment in this fixture.
p: a point in world coordinates.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>p</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>Shape</name>
            <returntype>com.badlogic.gdx.physics.box2d.Shape</returntype>
            <comment>Returns the shape of this fixture</comment>
        </property>
        <property>
            <name>Body</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the parent body of this fixture. This is NULL if the fixture is not attached.</comment>
        </property>
        <property>
            <name>Friction</name>
            <returntype>float</returntype>
            <parameter>
                <name>friction</name>
                <type>float</type>
            </parameter>
            <comment>Get the coefficient of friction.</comment>
        </property>
        <property>
            <name>Sensor</name>
            <parameter>
                <name>sensor</name>
                <type>boolean</type>
            </parameter>
            <comment>Set if this fixture is a sensor.</comment>
        </property>
        <property>
            <name>Density</name>
            <returntype>float</returntype>
            <parameter>
                <name>density</name>
                <type>float</type>
            </parameter>
            <comment>Get the density of this fixture.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment>Get the type of the child shape. You can use this to down cast to the concrete shape.</comment>
        </property>
        <property>
            <name>FilterData</name>
            <returntype>com.badlogic.gdx.physics.box2d.Filter</returntype>
            <parameter>
                <name>filter</name>
                <type>com.badlogic.gdx.physics.box2d.Filter</type>
            </parameter>
            <comment>Set the contact filtering data. This will not update contacts until the next time step when either parent body is active and
 awake. This automatically calls Refilter.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Sets custom user data.</comment>
        </property>
        <property>
            <name>Restitution</name>
            <returntype>float</returntype>
            <parameter>
                <name>restitution</name>
                <type>float</type>
            </parameter>
            <comment>Get the coefficient of restitution.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Filter</name>
        <shortname>lgBox2DFilter</shortname>
        <comment>This holds contact filtering data.</comment>
        <owner>process</owner>
        <field>
            <name>groupIndex</name>
            <comment>Collision groups allow a certain group of objects to never collide (negative) or always collide (positive). Zero means no
 collision group. Non-zero group filtering always wins against the mask bits.</comment>
            <returntype>short</returntype>
        </field>
        <field>
            <name>maskBits</name>
            <comment>The collision mask bits. This states the categories that this shape would accept for collision.</comment>
            <returntype>short</returntype>
        </field>
        <field>
            <name>categoryBits</name>
            <comment>The collision category bits. Normally you would just set one bit.</comment>
            <returntype>short</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.EdgeShape</name>
        <shortname>lgBox2DEdgeShape</shortname>
        <comment>A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. The connectivity information is
 used to ensure correct contact normals.</comment>
        <owner>process</owner>
        <method>
            <name>getVertex1</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>vec</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the shape is no longer used, e.g. after a fixture was created based on the shape.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>set</name>
            <comment>Set this as an isolated edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>v1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>v2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>getVertex2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>vec</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment>Get the number of child primitives.</comment>
        </property>
        <property>
            <name>Radius</name>
            <returntype>float</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <comment>Returns the radius of this shape</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.ContactImpulse</name>
        <shortname>lgBox2DContactImpulse</shortname>
        <comment>Contact impulses for reporting. Impulses are used instead of forces because sub-step forces may approach infinity for rigid
 body collisions. These match up one-to-one with the contact points in b2Manifold.</comment>
        <owner>process</owner>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TangentImpulses</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NormalImpulses</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Contact</name>
        <shortname>lgBox2DContact</shortname>
        <comment>The class manages contact between two shapes. A contact exists for each overlapping AABB in the broad-phase (except if
 filtered). Therefore a contact object may exist that has no contact points.</comment>
        <owner>process</owner>
        <method>
            <name>resetFriction</name>
            <comment>Reset the friction mixture to the default value.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTouching</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isEnabled</name>
            <comment>Has this contact been disabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ResetRestitution</name>
            <comment>Reset the restitution to the default value.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Enable/disable this contact. This can be used inside the pre-solve contact listener. The contact is only disabled for the
 current time step (or sub-step in continuous collisions).</comment>
        </property>
        <property>
            <name>FixtureA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Fixture</returntype>
            <comment>Get the first fixture in this contact.</comment>
        </property>
        <property>
            <name>FixtureB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Fixture</returntype>
            <comment>Get the second fixture in this contact.</comment>
        </property>
        <property>
            <name>WorldManifold</name>
            <returntype>com.badlogic.gdx.physics.box2d.WorldManifold</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Friction</name>
            <returntype>float</returntype>
            <parameter>
                <name>friction</name>
                <type>float</type>
            </parameter>
            <comment>Get the friction.</comment>
        </property>
        <property>
            <name>ChildIndexB</name>
            <returntype>int</returntype>
            <comment>Get the child primitive index for fixture B.</comment>
        </property>
        <property>
            <name>ChildIndexA</name>
            <returntype>int</returntype>
            <comment>Get the child primitive index for fixture A.</comment>
        </property>
        <property>
            <name>TangentSpeed</name>
            <returntype>float</returntype>
            <parameter>
                <name>speed</name>
                <type>float</type>
            </parameter>
            <comment>Get the tangent speed.</comment>
        </property>
        <property>
            <name>Restitution</name>
            <returntype>float</returntype>
            <parameter>
                <name>restitution</name>
                <type>float</type>
            </parameter>
            <comment>Get the restitution.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.CircleShape</name>
        <shortname>lgBox2DCircleShape</shortname>
        <comment>A circle shape.</comment>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the shape is no longer used, e.g. after a fixture was created based on the shape.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment>Get the number of child primitives.</comment>
        </property>
        <property>
            <name>Radius</name>
            <returntype>float</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <comment>Returns the radius of this shape</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment>{@inheritDoc}</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Sets the position of the shape</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.ChainShape</name>
        <shortname>lgBox2DChainShape</shortname>
        <owner>process</owner>
        <method>
            <name>createChain</name>
            <comment>Create a chain with isolated end vertices.
vertices: an array of floats of alternating x, y coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>setNextVertex</name>
            <comment>Establish connectivity to a vertex that follows the last vertex. Don't call this for loops.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>nextVertexX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>nextVertexY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>createLoop</name>
            <comment>Create a loop. This automatically adjusts connectivity.
vertices: an array of vertices, these are copied</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>com.badlogic.gdx.math.Vector2[]</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the shape is no longer used, e.g. after a fixture was created based on the shape.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getVertex</name>
            <comment>Returns the vertex at the given position.
index: the index of the vertex 0 &lt;= index &lt; getVertexCount( )
vertex: vertex</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vertex</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isLooped</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPrevVertex</name>
            <comment>Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>prevVertexX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>prevVertexY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>createLoop2</name>
            <comment>Create a loop. This automatically adjusts connectivity.
vertices: an array of floats of alternating x, y coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <property>
            <name>VertexCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ChildCount</name>
            <returntype>int</returntype>
            <comment>Get the number of child primitives.</comment>
        </property>
        <property>
            <name>Radius</name>
            <returntype>float</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <comment>Returns the radius of this shape</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NextVertex</name>
            <parameter>
                <name>nextVertex</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Establish connectivity to a vertex that follows the last vertex. Don't call this for loops.</comment>
        </property>
        <property>
            <name>PrevVertex</name>
            <parameter>
                <name>prevVertex</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Box2DDebugRenderer</name>
        <shortname>lgBox2DDebugRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the renderer with the following settings:
 drawBodies = true
 drawJoints = true
 drawAABBs = false
 drawInactiveBodies = true
 drawVelocities = false
 drawContacts = true</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDrawVelocities</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDrawInactiveBodies</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDrawJoints</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDrawContacts</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>drawBodies</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>drawJoints</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>drawAABBs</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>drawInactiveBodies</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>drawVelocities</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>drawContacts</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDrawAABBs</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDrawBodies</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>render</name>
            <comment>This assumes that the projection matrix has already been set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>world</name>
                <type>com.badlogic.gdx.physics.box2d.World</type>
            </parameter>
            <parameter>
                <name>projMatrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <property>
            <name>Axis</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawInactiveBodies</name>
            <parameter>
                <name>drawInactiveBodies</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawAABBs</name>
            <parameter>
                <name>drawAABBs</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawVelocities</name>
            <parameter>
                <name>drawVelocities</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawContacts</name>
            <parameter>
                <name>drawContacts</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawJoints</name>
            <parameter>
                <name>drawJoints</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DrawBodies</name>
            <parameter>
                <name>drawBodies</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>SHAPE_STATIC</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>JOINT_COLOR</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>SHAPE_NOT_ACTIVE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>SHAPE_AWAKE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>SHAPE_NOT_AWAKE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>VELOCITY_COLOR</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>AABB_COLOR</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>SHAPE_KINEMATIC</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.BodyDef</name>
        <shortname>lgBox2DBodyDef</shortname>
        <comment>A body definition holds all the data needed to construct a rigid body. You can safely re-use body definitions. Shapes are added
 to a body after construction.</comment>
        <owner>process</owner>
        <field>
            <name>position</name>
            <comment>The world position of the body. Avoid creating bodies at the origin since this can lead to many overlapping shapes.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>gravityScale</name>
            <comment>Scale the gravity applied to this body.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>linearVelocity</name>
            <comment>The linear velocity of the body's origin in world co-ordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>allowSleep</name>
            <comment>Set this flag to false if this body should never fall asleep. Note that this increases CPU usage.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>awake</name>
            <comment>Is this body initially awake or sleeping?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The body type: static, kinematic, or dynamic. Note: if a dynamic body would have zero mass, the mass is set to one.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</returntype>
        </field>
        <field>
            <name>angle</name>
            <comment>The world angle of the body in radians.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>fixedRotation</name>
            <comment>Should this body be prevented from rotating? Useful for characters.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>angularDamping</name>
            <comment>Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect
 becomes sensitive to the time step when the damping parameter is large.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>angularVelocity</name>
            <comment>The angular velocity of the body.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>active</name>
            <comment>Does this body start out active?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>linearDamping</name>
            <comment>Linear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect
 becomes sensitive to the time step when the damping parameter is large.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bullet</name>
            <comment>Is this a fast moving body that should be prevented from tunneling through other moving bodies? Note that all bodies are
 prevented from tunneling through kinematic and static bodies. This setting is only considered on dynamic bodies.</comment>
            <returntype>boolean</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.Body</name>
        <shortname>lgBox2DBody</shortname>
        <comment>A rigid body. These are created via World.CreateBody.</comment>
        <owner>process</owner>
        <method>
            <name>applyForce2</name>
            <comment>Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the
 angular velocity. This wakes up the body.
forceX: the world force vector on x, usually in Newtons (N).
forceY: the world force vector on y, usually in Newtons (N).
pointX: the world position of the point of application on x.
pointY: the world position of the point of application on y.
wake: up the body</comment>
            <returntype>void</returntype>
            <parameter>
                <name>forceX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>forceY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isFixedRotation</name>
            <comment>Does this body have fixed rotation?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>applyTorque</name>
            <comment>Apply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up
 the body.
torque: about the z-axis (out of the screen), usually in N-m.
wake: up the body</comment>
            <returntype>void</returntype>
            <parameter>
                <name>torque</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>resetMassData</name>
            <comment>This resets the mass properties to the sum of the mass properties of the fixtures. This normally does not need to be called
 unless you called SetMassData to override the mass and you later want to reset the mass.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isAwake</name>
            <comment>Get the sleeping state of this body.
Return type: @return:true if the body is sleeping.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getWorldPoint</name>
            <comment>Get the world coordinates of a point given the local coordinates.
localPoint: a point on the body measured relative the the body's origin.
Return type: @return:the same point expressed in world coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localPoint</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>getLocalPoint</name>
            <comment>Gets a local point relative to the body's origin given a world point.
worldPoint: a point in world coordinates.
Return type: @return:the corresponding local point relative to the body's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>worldPoint</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>applyForce</name>
            <comment>Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the
 angular velocity. This wakes up the body.
force: the world force vector, usually in Newtons (N).
point: the world position of the point of application.
wake: up the body</comment>
            <returntype>void</returntype>
            <parameter>
                <name>force</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>createFixture2</name>
            <comment>Creates a fixture from a shape and attach it to this body. This is a convenience function. Use b2FixtureDef if you need to
 set parameters like friction, restitution, user data, or filtering. If the density is non-zero, this function automatically
 updates the mass of the body.
shape: the shape to be cloned.
density: the shape density (set to zero for static bodies).</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Fixture</returntype>
            <parameter>
                <name>shape</name>
                <type>com.badlogic.gdx.physics.box2d.Shape</type>
            </parameter>
            <parameter>
                <name>density</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>applyAngularImpulse</name>
            <comment>Apply an angular impulse.
impulse: the angular impulse in units of kg*m*m/s</comment>
            <returntype>void</returntype>
            <parameter>
                <name>impulse</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetFixtureList</name>
            <comment>Fills the given array with all fixtures attached to this body. Do not modify this list!</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Fixtures</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
        </method>
        <method>
            <name>GetJointList</name>
            <comment>Fills the given array with all joints attached to this body. Do not modify this list!</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Joints</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
        </method>
        <method>
            <name>getLinearVelocityFromWorldPoint</name>
            <comment>Get the world linear velocity of a world point attached to this body.
worldPoint: a point in world coordinates.
Return type: @return:the world velocity of a point.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>worldPoint</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isBullet</name>
            <comment>Is this body treated like a bullet for continuous collision detection?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setLinearVelocity2</name>
            <comment>Set the linear velocity of the center of mass.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>vY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTransform</name>
            <comment>Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a
 body's transform may cause non-physical behavior.
position: the world position of the body's local origin.
angle: the world rotation in radians.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>createFixture</name>
            <comment>Creates a fixture and attach it to this body. Use this function if you need to set some fixture parameters, like friction.
 Otherwise you can create the fixture directly from a shape. If the density is non-zero, this function automatically updates
 the mass of the body. Contacts are not created until the next time step.
def: the fixture definition.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Fixture</returntype>
            <parameter>
                <name>def</name>
                <type>com.badlogic.gdx.physics.box2d.FixtureDef</type>
            </parameter>
        </method>
        <method>
            <name>getWorldVector</name>
            <comment>Get the world coordinates of a vector given the local coordinates.
localVector: a vector fixed in the body.
Return type: @return:the same vector expressed in world coordinates.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localVector</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>isSleepingAllowed</name>
            <comment>Is this body allowed to sleep</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>applyForceToCenter2</name>
            <comment>Apply a force to the center of mass. This wakes up the body.
forceX: the world force vector, usually in Newtons (N).
forceY: the world force vector, usually in Newtons (N).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>forceX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>forceY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>applyForceToCenter</name>
            <comment>Apply a force to the center of mass. This wakes up the body.
force: the world force vector, usually in Newtons (N).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>force</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isActive</name>
            <comment>Get the active state of the body.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTransform2</name>
            <comment>Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a
 body's transform may cause non-physical behavior.
x: the world position on the x-axis
y: the world position on the y-axis
angle: the world rotation in radians.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>applyLinearImpulse</name>
            <comment>Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of
 application is not at the center of mass. This wakes up the body.
impulse: the world impulse vector, usually in N-seconds or kg-m/s.
point: the world position of the point of application.
wake: up the body</comment>
            <returntype>void</returntype>
            <parameter>
                <name>impulse</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>point</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>destroyFixture</name>
            <comment>Destroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture.
 This will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density. All
 fixtures attached to a body are implicitly destroyed when the body is destroyed.
fixture: the fixture to be removed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>fixture</name>
                <type>com.badlogic.gdx.physics.box2d.Fixture</type>
            </parameter>
        </method>
        <method>
            <name>getLinearVelocityFromLocalPoint</name>
            <comment>Get the world velocity of a local point.
localPoint: a point in local coordinates.
Return type: @return:the world velocity of a point.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>localPoint</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>getLocalVector</name>
            <comment>Gets a local vector given a world vector.
worldVector: a vector in world coordinates.
Return type: @return:the corresponding local vector.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>worldVector</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>applyLinearImpulse2</name>
            <comment>Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of
 application is not at the center of mass. This wakes up the body.
impulseX: the world impulse vector on the x-axis, usually in N-seconds or kg-m/s.
impulseY: the world impulse vector on the y-axis, usually in N-seconds or kg-m/s.
pointX: the world position of the point of application on the x-axis.
pointY: the world position of the point of application on the y-axis.
wake: up the body</comment>
            <returntype>void</returntype>
            <parameter>
                <name>impulseX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>impulseY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>pointY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>wake</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>Inertia</name>
            <returntype>float</returntype>
            <comment>Get the rotational inertia of the body about the local origin.</comment>
        </property>
        <property>
            <name>Bullet</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Should this body be treated like a bullet for continuous collision detection?</comment>
        </property>
        <property>
            <name>LinearVelocity</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>v</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Gets or sets the linear velocity of the center of mass.</comment>
        </property>
        <property>
            <name>AngularVelocity</name>
            <returntype>float</returntype>
            <parameter>
                <name>omega</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the angular velocity.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</returntype>
            <parameter>
                <name>type</name>
                <type EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</type>
            </parameter>
            <comment>Get the type of this body.</comment>
        </property>
        <property>
            <name>FixedRotation</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Set this body to have fixed rotation. This causes the mass to be reset.</comment>
        </property>
        <property>
            <name>LinearDamping</name>
            <returntype>float</returntype>
            <parameter>
                <name>linearDamping</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the linear damping of the body.</comment>
        </property>
        <property>
            <name>LocalCenter</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment>Get the local position of the center of mass.</comment>
        </property>
        <property>
            <name>MassData</name>
            <returntype>com.badlogic.gdx.physics.box2d.MassData</returntype>
            <parameter>
                <name>data</name>
                <type>com.badlogic.gdx.physics.box2d.MassData</type>
            </parameter>
            <comment>Get the mass data of the body.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>AngularDamping</name>
            <returntype>float</returntype>
            <parameter>
                <name>angularDamping</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the angular damping of the body.</comment>
        </property>
        <property>
            <name>Active</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Set the active state of the body. An inactive body is not simulated and cannot be collided with or woken up. If you pass a
 flag of true, all fixtures will be added to the broad-phase. If you pass a flag of false, all fixtures will be removed from
 the broad-phase and all contacts will be destroyed. Fixtures and joints are otherwise unaffected. You may continue to
 create/destroy fixtures and joints on inactive bodies. Fixtures on an inactive body are implicitly inactive and will not
 participate in collisions, ray-casts, or queries. Joints connected to an inactive body are implicitly inactive. An inactive
 body is still owned by a b2World object and remains in the body list.</comment>
        </property>
        <property>
            <name>Angle</name>
            <returntype>float</returntype>
            <comment>Get the angle in radians.</comment>
        </property>
        <property>
            <name>Transform</name>
            <returntype>com.badlogic.gdx.physics.box2d.Transform</returntype>
            <comment>Get the body transform for the body's origin.</comment>
        </property>
        <property>
            <name>GravityScale</name>
            <returntype>float</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <comment>Sets the gravity scale of the body</comment>
        </property>
        <property>
            <name>Awake</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Set the sleep state of the body. A sleeping body has very low CPU cost.</comment>
        </property>
        <property>
            <name>Mass</name>
            <returntype>float</returntype>
            <comment>Get the total mass of the body.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment>Get the world body origin position.</comment>
        </property>
        <property>
            <name>World</name>
            <returntype>com.badlogic.gdx.physics.box2d.World</returntype>
            <comment>Get the parent world of this body.</comment>
        </property>
        <property>
            <name>SleepingAllowed</name>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
            <comment>You can disable sleeping on this body. If you disable sleeping, the</comment>
        </property>
        <property>
            <name>WorldCenter</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment>Get the world position of the center of mass.</comment>
        </property>
        <field>
            <name>linVelLoc</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localVector</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localPoint2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>linVelWorld</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgTmxMapLoader</name>
        <shortname>lgMapTmxMapLoader</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Param</name>
                <type>com.badlogic.gdx.maps.tiled.TmxMapLoader.Parameters</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Param</name>
                <type>com.badlogic.gdx.maps.tiled.TmxMapLoader.Parameters</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.maps.tiled.TmxMapLoader</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgTideMapLoader</name>
        <shortname>lgMaptIDEMapLoader</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.maps.tiled.TideMapLoader</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgOrthogonalTiledMapRenderer</name>
        <shortname>lgMapOrthogonalTiledMapRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>renderTileLayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layer</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileLayer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
        </method>
        <method>
            <name>setView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetCameraView</name>
            <comment>Sets the projection matrix and viewbounds from the given camera. If the camera changes, you have to call this method again. The viewbounds are taken from the camera's position and viewport size as well as the scale.
This function will only work if the camera's direction vector is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Render</name>
            <comment>Renders all the layers of a tiled map.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render2</name>
            <comment>Renders the given layers of a tiled map.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>layers</name>
                <type>int[]</type>
            </parameter>
        </method>
        <property>
            <name>SpriteBatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Map</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UnitScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewBounds</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgMapProperties</name>
        <shortname>lgMapProperties</shortname>
        <owner>process</owner>
        <method>
            <name>clear</name>
            <comment>Removes all properties</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetAllValues</name>
            <comment>Returns a list of properties' values.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>containsKey</name>
            <comment>
key: property name
Return type: @return:true if and only if the property exists</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>put</name>
            <comment>
key: property name
value: value to be inserted or modified (if it already existed)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Get2</name>
            <comment>Returns the object for the given key, or the default value if the object is not in the map.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DefaultValue</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>remove</name>
            <comment>
key: property name to be removed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAllKeys</name>
            <comment>Returns a list of property names.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>PutAll</name>
            <comment>Adds or replaces a set of properties.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Properties</name>
                <type>anywheresoftware.b4a.libgdx.maps.lgMapProperties</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment>Returns the object for the given key, or Null if the object is not in the map.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Key</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgMapObjects</name>
        <shortname>lgMapObjects</shortname>
        <owner>process</owner>
        <method>
            <name>Get2</name>
            <comment>Returns the object with the given name, or Null.</comment>
            <returntype>com.badlogic.gdx.maps.MapObject</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Remove2</name>
            <comment>Removes the given object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Object</name>
                <type>com.badlogic.gdx.maps.MapObject</type>
            </parameter>
        </method>
        <method>
            <name>GetAllObjects</name>
            <comment>Returns a list of the MapObjects.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>Remove</name>
            <comment>Removes the object with the given index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment>Returns the object with the given index, or Null.</comment>
            <returntype>com.badlogic.gdx.maps.MapObject</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>add</name>
            <comment>
object: instance to be added to the collection</comment>
            <returntype>void</returntype>
            <parameter>
                <name>object</name>
                <type>com.badlogic.gdx.maps.MapObject</type>
            </parameter>
        </method>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgMapLayers</name>
        <shortname>lgMapLayers</shortname>
        <owner>process</owner>
        <method>
            <name>Get2</name>
            <comment>Returns the layer with the given name, or Null.</comment>
            <returntype>com.badlogic.gdx.maps.MapLayer</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Remove2</name>
            <comment>Removes the given layer.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Layer</name>
                <type>com.badlogic.gdx.maps.MapLayer</type>
            </parameter>
        </method>
        <method>
            <name>GetAllLayers</name>
            <comment>Returns a list of all layers.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>Remove</name>
            <comment>Removes the layer with the given index.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment>Returns the layer with the given index, or Null.</comment>
            <returntype>com.badlogic.gdx.maps.MapLayer</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>add</name>
            <comment>
layer: layer to be added to the set</comment>
            <returntype>void</returntype>
            <parameter>
                <name>layer</name>
                <type>com.badlogic.gdx.maps.MapLayer</type>
            </parameter>
        </method>
        <property>
            <name>Count</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgIsometricTiledMapRenderer</name>
        <shortname>lgMapIsometricTiledMapRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>renderTileLayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layer</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileLayer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
        </method>
        <method>
            <name>setView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetCameraView</name>
            <comment>Sets the projection matrix and viewbounds from the given camera. If the camera changes, you have to call this method again. The viewbounds are taken from the camera's position and viewport size as well as the scale.
This function will only work if the camera's direction vector is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Render</name>
            <comment>Renders all the layers of a tiled map.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render2</name>
            <comment>Renders the given layers of a tiled map.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>layers</name>
                <type>int[]</type>
            </parameter>
        </method>
        <property>
            <name>SpriteBatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Map</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UnitScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewBounds</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgIsometricStaggeredMapRenderer</name>
        <shortname>lgMapIsometricStaggeredTiledMapRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>renderTileLayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layer</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileLayer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
        </method>
        <method>
            <name>setView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetCameraView</name>
            <comment>Sets the projection matrix and viewbounds from the given camera. If the camera changes, you have to call this method again. The viewbounds are taken from the camera's position and viewport size as well as the scale.
This function will only work if the camera's direction vector is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Render</name>
            <comment>Renders all the layers of a tiled map.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render2</name>
            <comment>Renders the given layers of a tiled map.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>layers</name>
                <type>int[]</type>
            </parameter>
        </method>
        <property>
            <name>SpriteBatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Map</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UnitScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewBounds</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgHexagonalTiledMapRenderer</name>
        <shortname>lgMapHexagonalTiledMapRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>renderTileLayer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>layer</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileLayer</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
        </method>
        <method>
            <name>setView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetCameraView</name>
            <comment>Sets the projection matrix and viewbounds from the given camera. If the camera changes, you have to call this method again. The viewbounds are taken from the camera's position and viewport size as well as the scale.
This function will only work if the camera's direction vector is (0,0,-1) and its up vector is (0, 1, 0), which are the defaults.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Render</name>
            <comment>Renders all the layers of a tiled map.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize4</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <parameter>
                <name>UnitScale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render2</name>
            <comment>Renders the given layers of a tiled map.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>layers</name>
                <type>int[]</type>
            </parameter>
        </method>
        <property>
            <name>YDown</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>yDown</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpriteBatch</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Map</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>map</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMap</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UnitScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewBounds</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.maps.lgAtlasTmxMapLoader</name>
        <shortname>lgMapAtlasTmxMapLoader</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMap</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TmxMapLoader.Parameters</name>
        <shortname>lgMapTmxMapLoaderParameters</shortname>
        <owner>process</owner>
        <field>
            <name>textureMinFilter</name>
            <comment>The TextureFilter to use for minification</comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>generateMipMaps</name>
            <comment>generate mipmaps?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>yUp</name>
            <comment>Whether to load the map for a y-up coordinate system</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>convertObjectToTileSpace</name>
            <comment>Whether to convert the objects' pixel position and size to the equivalent in tile space.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>textureMagFilter</name>
            <comment>The TextureFilter to use for magnification</comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TiledMapTileSets</name>
        <shortname>lgMapTiledMapSets</shortname>
        <owner>process</owner>
        <method>
            <name>getTile</name>
            <comment>
id: id of the {@link TiledMapTile} to get.
Return type: @return:tile with matching id, null if it doesn't exist</comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTile</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAllTilesets</name>
            <comment>Returns a list of all tilesets.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>addTileSet</name>
            <comment>
tileset: set to be added to the collection</comment>
            <returntype>void</returntype>
            <parameter>
                <name>tileset</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileSet</type>
            </parameter>
        </method>
        <method>
            <name>getTileSet</name>
            <comment>
index: index to get the desired {@link TiledMapTileSet} at.
Return type: @return:tileset at index</comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTileSet</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>removeTileSet</name>
            <comment>Removes tileset at index
index: index at which to remove a tileset.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TiledMapTileSet</name>
        <shortname>lgMapTiledMapSet</shortname>
        <owner>process</owner>
        <method>
            <name>getTile</name>
            <comment>Returns the tile that has the given id, or Null if it doesn't exist.</comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTile</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAllTiles</name>
            <comment>Returns a list of all tiles.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>removeTile</name>
            <comment>
id: tile's id to be removed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>putTile</name>
            <comment>Adds or replaces tile with that id
id: the id of the {@link TiledMapTile} to add or replace.
tile: the {@link TiledMapTile} to add or replace.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>tile</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTile</type>
            </parameter>
        </method>
        <method>
            <name>size</name>
            <comment>
Return type: @return:the size of this TiledMapTileSet.</comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TiledMapTileLayer</name>
        <shortname>lgMapTiledMapLayer</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a TiledMap layer.
Width: the layer width in tiles
Height: the layer height in tiles
TileWidth: the tile width in pixels
TileHeight: the tile height in pixels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TileWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TileHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getCell</name>
            <comment>Gets the cell at the given coordinates.</comment>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setCell</name>
            <comment>Sets the cell at the given coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>cell</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell</type>
            </parameter>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RepeatY</name>
            <returntype>int</returntype>
            <parameter>
                <name>RepeatY</name>
                <type>int</type>
            </parameter>
            <comment>Gets/sets the number of vertical repetitions of this layer. Default: 0.</comment>
        </property>
        <property>
            <name>TileHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RepeatX</name>
            <returntype>int</returntype>
            <parameter>
                <name>RepeatX</name>
                <type>int</type>
            </parameter>
            <comment>Gets/sets the number of horizontal repetitions of this layer. Default: 0.</comment>
        </property>
        <property>
            <name>TileWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Objects</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapObjects</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell</name>
        <shortname>lgMapTiledMapLayerCell</shortname>
        <owner>process</owner>
        <property>
            <name>Tile</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTile</returntype>
            <parameter>
                <name>tile</name>
                <type>com.badlogic.gdx.maps.tiled.TiledMapTile</type>
            </parameter>
            <comment>Gets or sets the tile currently assigned to this cell.</comment>
        </property>
        <property>
            <name>FlipVertically</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>flipVertically</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the tile should be flipped vertically.</comment>
        </property>
        <property>
            <name>FlipHorizontally</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>flipHorizontally</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the tile should be flipped horizontally.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>int</returntype>
            <parameter>
                <name>rotation</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the rotation of this cell, in degrees.</comment>
        </property>
        <field>
            <name>ROTATE_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATE_270</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATE_180</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATE_90</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.TiledMap</name>
        <shortname>lgMapTiledMap</shortname>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources like Texture instances that the map may own.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>TileSets</name>
            <returntype>com.badlogic.gdx.maps.tiled.TiledMapTileSets</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Layers</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapLayers</returntype>
            <comment>Returns the map's layers.</comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment>Returns the map's properties.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.particles.lgParticleEmitterBox2D</name>
        <shortname>lgBox2DParticleEmitter</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a default ParticleEmitter for Box2D. Box2d World is used for raycasting. Assumes that particles use same unit system that Box2d world does.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>World</name>
                <type>anywheresoftware.b4a.libgdx.box2d.lgWorld</type>
            </parameter>
        </method>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Draw2</name>
            <comment>Updates and draws the particles. This is slightly more efficient than calling Update and Draw separately.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Update</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsComplete</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddParticle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetFlip</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>FlipX</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>FlipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>FlipY</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DurationTimer</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a ParticleEmitter for Box2D using the given file. Box2d World is used for raycasting. Assumes that particles use same unit system that Box2d world does.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>World</name>
                <type>anywheresoftware.b4a.libgdx.box2d.lgWorld</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>AddParticles</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>AllowCompletion</name>
            <comment>Ignores the continuous setting until the emitter is started again. This allows the emitter to stop smoothly.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Save</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Constructs a ParticleEmitter for Box2D fully copying the given emitter attributes. Box2d World is used for raycasting. Assumes that particles use same unit system that Box2d world does.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>World</name>
                <type>anywheresoftware.b4a.libgdx.box2d.lgWorld</type>
            </parameter>
            <parameter>
                <name>Emitter</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEmitter</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>PercentComplete</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Behind</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Behind</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ActiveCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Life</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Sprite</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSprite</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>XOffsetValue</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Angle</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpawnHeight</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Delay</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>YOffsetValue</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Wind</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpawnWidth</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Transparency</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinParticleCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>MinParticleCount</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Additive</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Additive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpawnShape</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShapeValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Continuous</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Attached</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Attached</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Velocity</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxParticleCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>MaxParticleCount</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LifeOffset</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BoundingBox</name>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <comment>Returns the bounding box for all active particles. Z axis will always be zero.</comment>
        </property>
        <property>
            <name>Tint</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.GradientColorValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Aligned</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Aligned</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Emission</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImagePath</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ImagePath</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.particles.lgParticleEmitter</name>
        <shortname>lgParticleEmitter</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Draw2</name>
            <comment>Updates and draws the particles. This is slightly more efficient than calling Update and Draw separately.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Update</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsComplete</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddParticle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetFlip</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>FlipX</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>FlipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>FlipY</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DurationTimer</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Emitter</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEmitter</type>
            </parameter>
        </method>
        <method>
            <name>AddParticles</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>AllowCompletion</name>
            <comment>Ignores the continuous setting until the emitter is started again. This allows the emitter to stop smoothly.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Save</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>PercentComplete</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Behind</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Behind</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ActiveCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Life</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Sprite</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSprite</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>XOffsetValue</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Angle</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpawnHeight</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Delay</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>YOffsetValue</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Wind</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpawnWidth</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Transparency</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Additive</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Additive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MinParticleCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>MinParticleCount</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpawnShape</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShapeValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Continuous</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Continuous</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Attached</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Attached</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Velocity</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxParticleCount</name>
            <returntype>int</returntype>
            <parameter>
                <name>MaxParticleCount</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LifeOffset</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BoundingBox</name>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <comment>Returns the bounding box for all active particles. Z axis will always be zero.</comment>
        </property>
        <property>
            <name>Tint</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.GradientColorValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Aligned</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Aligned</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Emission</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImagePath</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ImagePath</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.particles.lgParticleEffectPool</name>
        <shortname>lgParticleEffectPool</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a pool of ParticleEffect with the specified initial capacity and no maximum.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Effect</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</type>
            </parameter>
            <parameter>
                <name>InitialCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources used by this pool.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Clear</name>
            <comment>Removes all objects from this pool.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Obtain</name>
            <comment>Returns a ParticleEffect from this pool. It may be new or reused (previously freed). If all objects of this pool are used and the pool already contains Max objects, the function returns Null.</comment>
            <returntype>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a pool of ParticleEffect with the specified initial capacity and the specified maximum number of objects.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Effect</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</type>
            </parameter>
            <parameter>
                <name>InitialCapacity</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Max</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Free</name>
            <comment>Makes the specified ParticleEffect eligible to be returned by Obtain. The function returns False if the ParticleEffect was not found in this pool.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Effect</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</type>
            </parameter>
        </method>
        <property>
            <name>Available</name>
            <returntype>int</returntype>
            <comment>Returns the number of objects already created that can be reused.</comment>
        </property>
        <property>
            <name>Peak</name>
            <returntype>int</returntype>
            <comment>Returns the highest number of created objects.</comment>
        </property>
        <property>
            <name>Max</name>
            <returntype>int</returntype>
            <comment>Returns the maximum number of objects that will be pooled.</comment>
        </property>
        <property>
            <name>Size</name>
            <returntype>int</returntype>
            <comment>Returns the number of objects currently in the pool.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</name>
        <shortname>lgParticleEffect</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes the texture for each sprite for each ParticleEmitter.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>EffectFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>ImagesDir</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Draw2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Update</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Delta</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsComplete</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>LoadEmitters</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>EffectFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>LoadEmitterImages</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ImagesDir</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>SetPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>LoadEmitterImages2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Atlas</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlas</type>
            </parameter>
        </method>
        <method>
            <name>SetFlip</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>flipX</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>flipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>FlipY</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindEmitter</name>
            <comment>Returns the emitter with the specified name, or null.</comment>
            <returntype>anywheresoftware.b4a.libgdx.particles.lgParticleEmitter</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Effect</name>
                <type>anywheresoftware.b4a.libgdx.particles.lgParticleEffect</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>AllowCompletion</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Save</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>EffectFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>EffectFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Atlas</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlas</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Reset</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>BoundingBox</name>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <comment>Returns the bounding box for all active particles. Z axis will always be zero.</comment>
        </property>
        <property>
            <name>Duration</name>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Emitters</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.ParticleEffect</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.audio.lgSound</name>
        <shortname>lgSound</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Sound which is used to play back audio effects such as gun shots or explosions. The Sound's audio data is retrieved from the file specified. Note that the complete audio data is loaded into RAM. The current upper limit for decoded audio is 1 MB. Currently supported formats are WAV, MP3 and OGG. The Sound has to be disposed if it is no longer used via the Dispose method.
Internal: Internal file path.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Play</name>
            <comment>Plays the sound. If the sound is already playing, it will be played again, concurrently.
Returns the id of the sound instance if successful, or -1 on failure.</comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all the resources.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Play2</name>
            <comment>Plays the sound. If the sound is already playing, it will be played again, concurrently.
Returns the id of the sound instance if successful, or -1 on failure.
Volume: The volume in the range [0,1].</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Play3</name>
            <comment>Plays the sound. If the sound is already playing, it will be played again, concurrently.
Returns the id of the sound instance if successful, or -1 on failure.
Volume: The volume in the range [0,1].
Pitch: The pitch multiplier, 1 = default, &amp;gt;1 = faster, &amp;lt;1 = slower, the value has to be between 0.5 and 2.0.
Pan: Panning in the range -1 (full left) to 1 (full right). 0 is center position.</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Pitch</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Pan</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Resume2</name>
            <comment>Resumes the sound instance with the given id as returned by Play or Loop. If the sound is not paused, this has no effect.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops playing all instances of this sound.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetPriority</name>
            <comment>Sets the priority of a sound currently being played back. Higher priority sounds will be considered last if the maximum number of concurrently playing sounds is exceeded. This is only a hint and might not be honored by a backend implementation.
Priority: The priority (0 = lowest)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Priority</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLooping</name>
            <comment>Sets the sound instance with the given id to be looping. If the sound is no longer playing this has no effect.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Looping</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Pause2</name>
            <comment>Pauses the sound instance with the given id as returned by Play or Loop. If the sound is no longer playing, this has no effect.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>SetVolume</name>
            <comment>Changes the volume of the sound instance with the given id as returned by Play or Loop. If the sound is no longer playing, this has no effect.
Volume: The volume in the range 0 (silent) to 1 (max volume).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetPan</name>
            <comment>Sets the panning and volume of the sound instance with the given id as returned by Play or Loop. If the sound is no longer playing, this has no effect.
Pan: Panning in the range -1 (full left) to 1 (full right). 0 is center position.
Volume: The volume in the range [0,1].</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Pan</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Loop3</name>
            <comment>Plays the sound, looping. If the sound is already playing, it will be played again, concurrently. You need to stop the sound via a call to Stop2 using the returned id.
Returns the id of the sound instance if successful, or -1 on failure.
Volume: The volume in the range [0,1].
Pitch: The pitch multiplier, 1 = default, &amp;gt;1 = faster, &amp;lt;1 = slower, the value has to be between 0.5 and 2.0.
Pan: Panning in the range -1 (full left) to 1 (full right). 0 is center position.</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Pitch</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Pan</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Resume</name>
            <comment>Resumes all paused instances of this sound.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetPitch</name>
            <comment>Changes the pitch multiplier of the sound instance with the given id as returned by Play or Loop. If the sound is no longer playing, this has no effect.
Pitch: The pitch multiplier, 1 = default, &amp;gt;1 = faster, &amp;lt;1 = slower, the value has to be between 0.5 and 2.0.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Pitch</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Loop2</name>
            <comment>Plays the sound, looping. If the sound is already playing, it will be played again, concurrently. You need to stop the sound via a call to Stop2 using the returned id.
Returns the id of the sound instance if successful, or -1 on failure.
Volume: The volume in the range [0,1]</comment>
            <returntype>long</returntype>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Pause</name>
            <comment>Pauses all instances of this sound.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Stop2</name>
            <comment>Stops the sound instance with the given id as returned by Play or Loop. If the sound is no longer playing, this has no effect.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SoundId</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new Sound which is used to play back audio effects such as gun shots or explosions. The Sound's audio data is retrieved from the file specified. Note that the complete audio data is loaded into RAM. The current upper limit for decoded audio is 1 MB. Currently supported formats are WAV, MP3 and OGG. The Sound has to be disposed if it is no longer used via the Dispose method.
File: The file handle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Loop</name>
            <comment>Plays the sound, looping. If the sound is already playing, it will be played again, concurrently.
Returns the id of the sound instance if successful, or -1 on failure.</comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.audio.Sound</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.audio.lgMusic</name>
        <shortname>lgMusic</shortname>
        <owner>process</owner>
        <event>Completed</event>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Music instance which is used to play back a music stream from a file. Currently supported formats are WAV, MP3 and OGG. The Music instance has to be disposed if it is no longer used via the Dispose method. Music instances are automatically paused and resumed when an Application is paused or resumed.
Internal: Internal file path.
evtPrefix: Prefix of the Completed event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsPlaying</name>
            <comment>Returns whether this music stream is playing.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Play</name>
            <comment>Starts the play back of the music stream. In case the stream was paused this will resume the play back. In case the music stream is finished playing this will restart the play back.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Needs to be called when the Music is no longer needed.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetPan</name>
            <comment>Sets the panning and volume of this music stream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pan</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Pause</name>
            <comment>Pauses the play back. If the music stream has not been started yet or has finished playing a call to this method will be ignored.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new Music instance which is used to play back a music stream from a file. Currently supported formats are WAV, MP3 and OGG. The Music instance has to be disposed if it is no longer used via the Dispose method. Music instances are automatically paused and resumed when an Application is paused or resumed.
File: The file handle.
evtPrefix: Prefix of the Completed event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops a playing or paused Music instance. Next time Play is invoked the Music will start from the beginning.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Volume</name>
            <returntype>float</returntype>
            <parameter>
                <name>Volume</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the volume of this music stream. The volume is set in the range [0,1] with 0 being silent and 1 being the maximum volume.</comment>
        </property>
        <property>
            <name>Duration</name>
            <returntype>float</returntype>
            <comment>Returns the duration in seconds.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>float</returntype>
            <parameter>
                <name>Position</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the playback position in milliseconds.</comment>
        </property>
        <property>
            <name>Looping</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>IsLooping</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the music stream is looping. This can be called at any time.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.backends.android.AndroidMusic</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.audio.lgAudio</name>
        <shortname>lgAudio</shortname>
        <owner>process</owner>
        <method>
            <name>dispose</name>
            <comment>Releases the Sound and Music resources.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NewMusic</name>
            <comment>Creates a new Music instance which is used to play back a music stream from a file. Currently supported formats are WAV, MP3 and OGG. The Music instance has to be disposed if it is no longer used via the Dispose method. Music instances are automatically paused and resumed when an Application is paused or resumed.
Internal: Internal file path.
evtPrefix: Prefix of the Completed event.</comment>
            <returntype>anywheresoftware.b4a.libgdx.audio.lgMusic</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>evtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewSound</name>
            <comment>Creates a new Sound which is used to play back audio effects such as gun shots or explosions. The Sound's audio data is retrieved from the file specified. Note that the complete audio data is loaded into RAM. The current upper limit for decoded audio is 1 MB. Currently supported formats are WAV, MP3 and OGG. The Sound has to be disposed if it is no longer used via the Dispose method.
Internal: Internal file path.</comment>
            <returntype>anywheresoftware.b4a.libgdx.audio.lgSound</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewAudioRecorder</name>
            <comment>Creates a new AudioRecorder either in mono or stereo mode. The AudioRecorder has to be disposed after it is no longer used.
SamplingRate: The sampling rate in Hz (e.g. 44100).</comment>
            <returntype>com.badlogic.gdx.backends.android.AndroidAudioRecorder</returntype>
            <parameter>
                <name>SamplingRate</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>IsMono</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>NewAudioDevice</name>
            <comment>Creates a new AudioDevice either in mono or stereo mode. The AudioDevice has to be disposed via its Dispose method when it is no longer used.
SamplingRate: The sampling rate in Hz (e.g. 44100).</comment>
            <returntype>com.badlogic.gdx.backends.android.AndroidAudioDevice</returntype>
            <parameter>
                <name>SamplingRate</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>IsMono</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.esotericsoftware.tablelayout.Cell</name>
        <shortname>lgScn2DTableCell</shortname>
        <comment>A cell in a table.</comment>
        <owner>process</owner>
        <method>
            <name>AlignLeft</name>
            <comment>Adds ALIGN_Left and clears ALIGN_Right for the alignment of the widget within the cell.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>MaxSize</name>
            <comment>Sets the MaxWidth and MaxHeight to the specified size.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignRight</name>
            <comment>Adds ALIGN_Right and clears ALIGN_Left for the alignment of the widget within the cell.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>free</name>
            <comment>Reset state so the cell can be reused. Doesn't reset the constraint fields.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Pad</name>
            <comment>Sets the PadTop, PadLeft, PadBottom, and PadRight to the specified value.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Pad</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Expand3</name>
            <comment>Sets ExpandX and ExpandY to 1 if True, 0 if False.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Expand2</name>
            <comment>Sets ExpandX and ExpandY to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Uniform2</name>
            <comment>Sets UniformX and UniformY to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Space</name>
            <comment>Sets the SpaceTop, SpaceLeft, SpaceBottom, and SpaceRight to the specified value.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Space</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Size</name>
            <comment>Sets the MinWidth, PrefWidth, MaxWidth, MinHeight, PrefHeight, and MaxHeight to the specified size.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MaxSize2</name>
            <comment>Sets the MaxWidth and MaxHeight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Fill2</name>
            <comment>Sets FillX and FillY to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Pad2</name>
            <comment>Sets the PadTop, PadLeft, PadBottom, and PadRight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Uniform</name>
            <comment>Sets UniformX and UniformY to True.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>MinSize2</name>
            <comment>Sets the MinWidth and MinHeight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Fill3</name>
            <comment>Sets FillX and FillY to 1 if True, 0 if False.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>MinSize</name>
            <comment>Sets the MinWidth and MinHeight to the specified size.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>PrefSize2</name>
            <comment>Sets the PrefWidth and PrefHeight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Sets all constraint fields to null.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasWidget</name>
            <comment>Returns true if the cell's widget is not null.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>PrefSize</name>
            <comment>Sets the PrefWidth and PrefHeight to the specified size.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AlignBottom</name>
            <comment>Adds ALIGN_Bottom and clears ALIGN_Top for the alignment of the widget within the cell.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>AlignTop</name>
            <comment>Adds ALIGN_Top and clears ALIGN_Bottom for the alignment of the widget within the cell.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>Fill</name>
            <comment>Sets FillX and FillY to 1.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>AlignCenter</name>
            <comment>Sets the alignment of the widget within the cell to ALIGN_Center. This clears any other alignment.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <method>
            <name>Space2</name>
            <comment>Sets the SpaceTop, SpaceLeft, SpaceBottom, and SpaceRight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isEndRow</name>
            <comment>Returns true if this cell is the last cell in the row.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size2</name>
            <comment>Sets the MinWidth, PrefWidth, MaxWidth, MinHeight, PrefHeight, and MaxHeight to the specified values.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Expand</name>
            <comment>Sets ExpandX and ExpandY to 1.</comment>
            <returntype>com.esotericsoftware.tablelayout.Cell</returntype>
        </method>
        <property>
            <name>ComputedPadRight</name>
            <returntype>float</returntype>
            <comment>The actual amount of combined padding and spacing from the last layout.</comment>
        </property>
        <property>
            <name>SpaceTop</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpaceTop</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ComputedPadBottom</name>
            <returntype>float</returntype>
            <comment>The actual amount of combined padding and spacing from the last layout.</comment>
        </property>
        <property>
            <name>Column</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <parameter>
                <name>PadTop</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <comment>Sets the MinWidth, PrefWidth, and MaxWidth to the specified value.</comment>
        </property>
        <property>
            <name>PrefWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>PrefWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MaxWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WidgetHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>widgetHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Colspan</name>
            <returntype>java.lang.Integer</returntype>
            <parameter>
                <name>Colspan</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment>Sets the MinHeight, PrefHeight, and MaxHeight to the specified value.</comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Align</name>
            <returntype>java.lang.Integer</returntype>
            <parameter>
                <name>Align</name>
                <type>int</type>
            </parameter>
            <comment>Sets the alignment of the widget within the cell. Set to one of the ALIGN constants, or any combination of those.</comment>
        </property>
        <property>
            <name>Layout</name>
            <returntype>com.esotericsoftware.tablelayout.BaseTableLayout</returntype>
            <parameter>
                <name>layout</name>
                <type>com.esotericsoftware.tablelayout.BaseTableLayout</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MaxHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Row</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <parameter>
                <name>PadLeft</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Ignore</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Ignore</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WidgetX</name>
            <returntype>float</returntype>
            <parameter>
                <name>widgetX</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WidgetY</name>
            <returntype>float</returntype>
            <parameter>
                <name>widgetY</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillX</name>
            <returntype>java.lang.Float</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UniformY</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <parameter>
                <name>PadBottom</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UniformX</name>
            <returntype>java.lang.Boolean</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WidgetWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>widgetWidth</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>FillY</name>
            <returntype>java.lang.Float</returntype>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Widget</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Widget</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the widget in this cell. If set to Null, removes any current widget.</comment>
        </property>
        <property>
            <name>SpaceRight</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpaceRight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <parameter>
                <name>PadRight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ComputedPadTop</name>
            <returntype>float</returntype>
            <comment>The actual amount of combined padding and spacing from the last layout.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MinHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpaceLeft</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpaceLeft</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ExpandY</name>
            <returntype>java.lang.Integer</returntype>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ExpandX</name>
            <returntype>java.lang.Integer</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PrefHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>PrefHeight</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SpaceBottom</name>
            <returntype>float</returntype>
            <parameter>
                <name>SpaceBottom</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ComputedPadLeft</name>
            <returntype>float</returntype>
            <comment>The actual amount of combined padding and spacing from the last layout.</comment>
        </property>
        <field>
            <name>ALIGN_Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALIGN_Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.TextureMapObject</name>
        <shortname>lgMapTextureMapObject</shortname>
        <owner>process</owner>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextureRegion</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <parameter>
                <name>region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>rotation</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.RectangleMapObject</name>
        <shortname>lgMapRectangleMapObject</shortname>
        <owner>process</owner>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Rectangle</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.PolylineMapObject</name>
        <shortname>lgMapPolylineMapObject</shortname>
        <owner>process</owner>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Polyline</name>
            <returntype>com.badlogic.gdx.math.Polyline</returntype>
            <parameter>
                <name>polyline</name>
                <type>com.badlogic.gdx.math.Polyline</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.PolygonMapObject</name>
        <shortname>lgMapPolygonMapObject</shortname>
        <owner>process</owner>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Polygon</name>
            <returntype>com.badlogic.gdx.math.Polygon</returntype>
            <parameter>
                <name>polygon</name>
                <type>com.badlogic.gdx.math.Polygon</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.EllipseMapObject</name>
        <shortname>lgMapEllipseMapObject</shortname>
        <owner>process</owner>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Ellipse</name>
            <returntype>com.badlogic.gdx.math.Ellipse</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.objects.CircleMapObject</name>
        <shortname>lgMapCircleMapObject</shortname>
        <owner>process</owner>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Circle</name>
            <returntype>com.badlogic.gdx.math.Circle</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.box2d.lgWorld</name>
        <shortname>lgBox2DWorld</shortname>
        <owner>process</owner>
        <event>BeginContact(Contact As lgBox2DContact)</event>
        <event>EndContact(Contact As lgBox2DContact)</event>
        <event>PreSolve(Contact As lgBox2DContact, OldManifold As lgBox2DManifold)</event>
        <event>PostSolve(Contact As lgBox2DContact, Impulse As lgBox2DContactImpulse)</event>
        <event>ShouldCollide(FixtureA As lgBox2DFixture, FixtureB As lgBox2DFixture) As Boolean</event>
        <method>
            <name>Initialize</name>
            <comment>Constructs a world object and registers the contact listeners.
The Contact instance passed to the contact events will be reused for future calls so make a copy of its data!
Gravity: The world gravity vector.
DoSleep: Improve performance by not simulating inactive bodies.
EvtPrefix: Prefix of the contact events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Gravity</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>DoSleep</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAllContacts</name>
            <comment>Returns an array of Contact instances produced by the last call to Step. Contacts are created and destroyed in the middle of a time step. Use the Contact events to avoid missing contacts.</comment>
            <returntype>anywheresoftware.b4a.libgdx.utils.lgArray</returntype>
        </method>
        <method>
            <name>Step</name>
            <comment>Takes a time step. This performs collision detection, integration, and constraint solution.
TimeStep: The amount of time to simulate, this should not vary.
VelocityIterations: For the velocity constraint solver.
PositionIterations: For the position constraint solver.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TimeStep</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>VelocityIterations</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>PositionIterations</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsLocked</name>
            <comment>Is the world locked (in the middle of a time step)?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClearForces</name>
            <comment>Manually clear the force buffer on all bodies. By default, forces are cleared automatically after each call to Step. The default behavior is modified by AutoClearForces. The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain a fixed sized time step under a variable frame-rate. When you perform sub-stepping you will disable auto clearing of forces and instead call ClearForces after all sub-steps are complete in one pass of your game loop.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all resources of this object.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetContactFilter</name>
            <comment>Raises the ShouldCollide event for each contact to provide collision filtering. Otherwise the default filter is used.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>SetContinuousPhysics</name>
            <comment>Enables/disables continuous physics.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetWarmStarting</name>
            <comment>Enables/disables warm starting.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>QueryAABB</name>
            <comment>Queries the world for all fixtures that potentially overlap the provided AABB.
Callback: An instance of lgBox2DQueryCallback.
lowerX: The X coordinate of the lower left corner
lowerY: The Y coordinate of the lower left corner
upperX: The X coordinate of the upper right corner
upperY: The Y coordinate of the upper right corner</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Callback</name>
                <type>anywheresoftware.b4a.libgdx.box2d.lgQueryCallback</type>
            </parameter>
            <parameter>
                <name>lowerX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>lowerY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upperX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upperY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CreateBody</name>
            <comment>Creates a rigid body given a definition. No reference to the definition is retained.
Bodies created by this method are pooled internally by the World object. They will be freed upon calling DestroyBody.
This function is locked during callbacks.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <parameter>
                <name>Def</name>
                <type>com.badlogic.gdx.physics.box2d.BodyDef</type>
            </parameter>
        </method>
        <method>
            <name>CreateJoint</name>
            <comment>Creates a joint to constrain bodies together. No reference to the definition is retained.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
            <parameter>
                <name>Def</name>
                <type>com.badlogic.gdx.physics.box2d.JointDef</type>
            </parameter>
        </method>
        <method>
            <name>GetAllJoints</name>
            <comment>Fills the given array with all joints currently in the simulation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Joints</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
        </method>
        <method>
            <name>GetAllBodies</name>
            <comment>Fills the given array with all bodies currently in the simulation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Bodies</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
        </method>
        <method>
            <name>RayCast</name>
            <comment>Ray-casts the world for all fixtures in the path of the ray. The ray-cast ignores shapes that contain the starting point.
Callback: An instance of lgBox2DRayCastCallback.
Point1: The ray starting point.
Point2: The ray ending point.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Callback</name>
                <type>anywheresoftware.b4a.libgdx.box2d.lgRayCastCallback</type>
            </parameter>
            <parameter>
                <name>Point1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>Point2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>DestroyBody</name>
            <comment>Destroys the specified rigid body and all associated fixtures and joints. This function is locked during callbacks.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Body</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DestroyJoint</name>
            <comment>Destroys the specified joint. This may cause the connected bodies to begin colliding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Joint</name>
                <type>com.badlogic.gdx.physics.box2d.Joint</type>
            </parameter>
        </method>
        <property>
            <name>ProxyCount</name>
            <returntype>int</returntype>
            <comment>Gets the number of broad-phase proxies.</comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>Gravity</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Gets or sets the global gravity vector.</comment>
        </property>
        <property>
            <name>ContactCount</name>
            <returntype>int</returntype>
            <comment>Gets the number of contacts (each may have 0 or more contact points).</comment>
        </property>
        <property>
            <name>BodyCount</name>
            <returntype>int</returntype>
            <comment>Gets the number of bodies.</comment>
        </property>
        <property>
            <name>AutoClearForces</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets the flag that controls automatic clearing of forces after each time step.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.physics.box2d.World</returntype>
            <comment></comment>
        </property>
        <property>
            <name>VelocityThreshold</name>
            <returntype>float</returntype>
            <parameter>
                <name>Threshold</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the global box2d velocity threshold (default 1.0).</comment>
        </property>
        <property>
            <name>JointCount</name>
            <returntype>int</returntype>
            <comment>Gets the number of joints.</comment>
        </property>
        <field>
            <name>JOINTTYPE_FrictionJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>BODYTYPE_Static</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</returntype>
        </field>
        <field>
            <name>BODYTYPE_Kinematic</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_GearJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_PulleyJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Polygon</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
        </field>
        <field>
            <name>JOINTTYPE_WheelJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_RevoluteJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_PrismaticJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_Unknown</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Circle</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Chain</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
        </field>
        <field>
            <name>JOINTTYPE_DistanceJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_RopeJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>BODYTYPE_Dynamic</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.BodyDef.BodyType</returntype>
        </field>
        <field>
            <name>JOINTTYPE_WeldJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Edge</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.Shape.Type</returntype>
        </field>
        <field>
            <name>JOINTTYPE_MouseJoint</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.box2d.lgRayCastCallback</name>
        <shortname>lgBox2DRayCastCallback</shortname>
        <owner>process</owner>
        <event>ReportFixture(Fixture As lgBox2DFixture, Point As lgMathVector2, Normal As lgMathVector2, Fraction As Float) As Float</event>
        <method>
            <name>Initialize</name>
            <comment>Registers a ray cast callback function. This callback function will be called by lgBox2DWorld.RayCast.
The function controls how the ray cast proceeds by returning a float:
 -1: ignore this fixture and continue;
 0: terminate the ray cast;
 fraction: clip the ray to this point;
 1: don't clip the ray and continue.
Parameters passed to the callback function:
Fixture: The fixture hit by the ray;
Point: The point of initial intersection;
Normal: The normal vector at the point of intersection.
The lgMathVector2 instances passed to the callback will be reused for future calls so make a copy of them!</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>CallbackSub</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.box2d.lgQueryCallback</name>
        <shortname>lgBox2DQueryCallback</shortname>
        <owner>process</owner>
        <event>ReportFixture(Fixture As lgBox2DFixture) As Boolean</event>
        <method>
            <name>Initialize</name>
            <comment>Registers a query callback function. This callback function will be called for each fixture found by lgBox2DWorld.QueryAABB.
 The function may terminate the query by returning false.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>CallbackSub</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.files.FileHandle</name>
        <shortname>lgFileHandle</shortname>
        <comment>Represents a file or directory on the filesystem, classpath, Android SD card, or Android assets directory. FileHandles are
 created via a {@link Files} instance.
 
 Because some of the file types are backed by composite files and may be compressed (for example, if they are in an Android .apk
 or are found via the classpath), the methods for extracting a {@link #path()} or {@link #file()} may not be appropriate for all
 types. Use the Reader or Stream methods here to hide these dependencies from your platform independent code.</comment>
        <owner>process</owner>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>writeString2</name>
            <comment>Writes the specified string to the file as UTF-8. Parent directories will be created if necessary.
append: If false, this file will be overwritten if it exists, otherwise it will be appended.
charset: May be null to use the default charset.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>append</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>charset</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>tempDirectory</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>prefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>type</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.Files.FileType</returntype>
        </method>
        <method>
            <name>readString2</name>
            <comment>Reads the entire file into a string using the specified charset.
charset: If null the default charset is used.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>charset</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>child</name>
            <comment>Returns a handle to the child with the specified name.</comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>copyTo</name>
            <comment>Copies this file or directory to the specified file or directory.
If this handle is a file, then
 1) if the destination is a file, it is overwritten, or
 2) if the destination is a directory, this file is copied into it, or
 3) if the destination doesn't exist, Mkdirs is called on the destination's parent and this file is copied into it with a new name.
If this handle is a directory, then
 1) if the destination is a file, GdxRuntimeException is thrown, or
 2) if the destination is a directory, this directory is copied into it recursively, overwriting existing files, or
 3) if the destination doesn't exist, Mkdirs is called on the destination and this directory is copied into it recursively.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dest</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>nameWithoutExtension</name>
            <comment>Returns the name of the file, without parent paths or the extension.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>name</name>
            <comment>Returns the name of the file, without any parent paths.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>length</name>
            <comment>Returns the length in bytes of this file, or 0 if this file is a directory, does not exist, or the size cannot otherwise be
 determined.</comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>path</name>
            <comment>Returns the path of the file as specified on construction, e.g. Files.internal("dir/file.png") -&gt; dir/file.png.
Backward slashes will be replaced by forward slashes.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>delete</name>
            <comment>Deletes this file or empty directory and returns success. Will not delete a directory that has children.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>readBytes</name>
            <comment>Reads the entire file into a byte array.</comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>deleteDirectory</name>
            <comment>Deletes this file or directory and all children, recursively.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>moveTo</name>
            <comment>Moves this file to the specified file, overwriting the file if it already exists.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dest</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>tempFile</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>prefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>lastModified</name>
            <comment>Returns the last modified time in milliseconds for this file. Zero is returned if the file doesn't exist. Zero is returned for internal files.</comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>readString</name>
            <comment>Reads the entire file into a string using the platform's default charset.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>mkdirs</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>parent</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
        </method>
        <method>
            <name>writeBytes</name>
            <comment>Writes the specified bytes to the file. Parent directories will be created if necessary.
append: If false, this file will be overwritten if it exists, otherwise it will be appended.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>append</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>extension</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>pathWithoutExtension</name>
            <comment>Returns the path and filename without the extension, e.g. dir/dir2/file.png -&gt; dir/dir2/file.
Backward slashes will be returned as forward slashes.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>emptyDirectory</name>
            <comment>Deletes all children of this directory, recursively.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDirectory</name>
            <comment>Returns true if this file is a directory. An internal handle to an empty directory will return false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>sibling</name>
            <comment>Returns a handle to the sibling with the specified name.</comment>
            <returntype>com.badlogic.gdx.files.FileHandle</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>writeString</name>
            <comment>Writes the specified string to the file using the default charset. Parent directories will be created if necessary.
append: If false, this file will be overwritten if it exists, otherwise it will be appended.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>append</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>exists</name>
            <comment>Returns true if the file exists. An internal handle to a directory will always return false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</name>
        <shortname>lgTextureRegion</shortname>
        <comment>Defines a rectangular area of a texture. The coordinate system used has its origin in the upper left corner with the x-axis pointing to the right and the y axis pointing downwards.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a region with no texture and no coordinates defined.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsFlipX</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsFlipY</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>InitializeWithTexture</name>
            <comment>Constructs a region the size of the specified texture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture2</name>
            <comment>Constructs a region with the specified texture.
Width: The width of the texture region. May be negative to flip the sprite when drawn.
Height: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Split</name>
            <comment>Creates tiles out of this TextureRegion starting from the top left corner going to the left and ending at the bottom right corner. Only complete tiles will be returned so if the region's width or height are not a multiple of the tile width and height not all of the region will be used. This will not work on texture regions returned from a TextureAtlas that have whitespace removed.
Returns a 2D array of TextureRegions indexed by (row,column).
TileWidth: A tile's width in pixels
TileHeight: A tile's height in pixels</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[][]</returntype>
            <parameter>
                <name>TileWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TileHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion</name>
            <comment>Constructs a region with the same texture and coordinates of the specified region.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture4</name>
            <comment>Constructs a region with the specified texture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture3</name>
            <comment>Constructs a region with the specified texture.
Width: The width of the texture region. May be negative to flip the sprite when drawn.
Height: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion2</name>
            <comment>Constructs a region with the same texture as the specified region and sets the coordinates relative to the specified region.
Width: The width of the texture region. May be negative to flip the sprite when drawn.
Height: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetRegion2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Flip</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Scroll</name>
            <comment>Offsets the region relative to the current region. Generally the region's size should be the entire size of the texture in the direction(s) it is scrolled.
xAmount: The percentage to offset horizontally.
yAmount: The percentage to offset vertically. This is done in texture space, so up is negative.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>V2</name>
            <returntype>float</returntype>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>U</name>
            <returntype>float</returntype>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionX</name>
            <returntype>int</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionY</name>
            <returntype>int</returntype>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>V</name>
            <returntype>float</returntype>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.TextureRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>U2</name>
            <returntype>float</returntype>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Texture</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTexture</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgTextureData</name>
        <shortname>lgTextureData</shortname>
        <owner>process</owner>
        <method>
            <name>consumeCompressedData</name>
            <comment>Uploads the pixel data to the OpenGL ES texture. The caller must bind an OpenGL ES texture. A call to Prepare must precede a call to this method.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>consumePixmap</name>
            <comment>Returns the Pixmap for upload by Texture. A call to Prepare must precede a call to this method. Any internal datastructures created in Prepare should be disposed of here.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
        </method>
        <method>
            <name>isPrepared</name>
            <comment>Returns whether the TextureData is prepared or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>useMipMaps</name>
            <comment>Returns whether to generate mipmaps or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>disposePixmap</name>
            <comment>Returns whether the caller of ConsumePixmap should dispose the Pixmap returned by ConsumePixmap.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>prepare</name>
            <comment>Prepares the TextureData for a call to ConsumePixmap or ConsumeCompressedData. This method can be called from a non OpenGL thread and should thus not interact with OpenGL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isManaged</name>
            <comment>Returns whether this implementation can cope with a EGL context loss.</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Format</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
            <comment>Returns the format of the pixel data.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
            <comment>Returns the TextureData type.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment>Returns the height of the pixel data.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment>Returns the width of the pixel data.</comment>
        </property>
        <field>
            <name>DATATYPE_Float</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Compressed</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
        <field>
            <name>DATATYPE_Pixmap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.TextureData.TextureDataType</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</name>
        <shortname>lgTextureAtlasRegion</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a new TextureAtlasRegion by copying the region and the properties of another TextureAtlasRegion.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</type>
            </parameter>
        </method>
        <method>
            <name>IsFlipX</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsFlipY</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Split</name>
            <comment>Creates tiles out of this TextureRegion starting from the top left corner going to the left and ending at the bottom right corner. Only complete tiles will be returned so if the region's width or height are not a multiple of the tile width and height not all of the region will be used. This will not work on texture regions returned from a TextureAtlas that have whitespace removed.
Returns a 2D array of TextureRegions indexed by (row,column).
TileWidth: A tile's width in pixels
TileHeight: A tile's height in pixels</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[][]</returntype>
            <parameter>
                <name>TileWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TileHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetRegion2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Flip</name>
            <comment>Flips the region, adjusting the offset so the image appears to be flip as if no whitespace has been removed for packing.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Scroll</name>
            <comment>Offsets the region relative to the current region. Generally the region's size should be the entire size of the texture in the direction(s) it is scrolled.
xAmount: The percentage to offset horizontally.
yAmount: The percentage to offset vertically. This is done in texture space, so up is negative.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>V2</name>
            <returntype>float</returntype>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginalHeight</name>
            <returntype>int</returntype>
            <comment>Gets the height of the image, before whitespace was removed for packing.</comment>
        </property>
        <property>
            <name>OffsetX</name>
            <returntype>float</returntype>
            <comment>Gets the offset from the left of the original image to the left of the packed image, after whitespace was removed for packing.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>U2</name>
            <returntype>float</returntype>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OffsetY</name>
            <returntype>float</returntype>
            <comment>Gets the offset from the bottom of the original image to the bottom of the packed image, after whitespace was removed for packing.</comment>
        </property>
        <property>
            <name>Texture</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTexture</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>U</name>
            <returntype>float</returntype>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <comment>Gets the name of the original image file, up to the first underscore. Underscores denote special instructions to the texture packer.</comment>
        </property>
        <property>
            <name>RegionX</name>
            <returntype>int</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RegionY</name>
            <returntype>int</returntype>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>V</name>
            <returntype>float</returntype>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Index</name>
            <returntype>int</returntype>
            <comment>Gets the number at the end of the original image file name, or -1 if none.
When sprites are packed, if the original file name ends with a number, it is stored as the index and is not considered as part of the sprite's name. This is useful for keeping animation frames in order.</comment>
        </property>
        <property>
            <name>Pads</name>
            <returntype>int[]</returntype>
            <comment>Gets the ninepatch pads, or null if not a ninepatch or has no padding. Returns 4 elements: left, right, top, bottom.</comment>
        </property>
        <property>
            <name>Splits</name>
            <returntype>int[]</returntype>
            <comment>Gets the ninepatch splits, or null if not a ninepatch. Returns 4 elements: left, right, top, bottom.</comment>
        </property>
        <property>
            <name>PackedHeight</name>
            <returntype>int</returntype>
            <comment>Gets the height of the image, after whitespace was removed for packing.</comment>
        </property>
        <property>
            <name>RegionHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OriginalWidth</name>
            <returntype>int</returntype>
            <comment>Gets the width of the image, before whitespace was removed and rotation was applied for packing.</comment>
        </property>
        <property>
            <name>PackedWidth</name>
            <returntype>int</returntype>
            <comment>Gets the width of the image, after whitespace was removed for packing.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlas</name>
        <shortname>lgTextureAtlas</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates an empty atlas to which regions can be added.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddRegion</name>
            <comment>Adds a region to the atlas. The texture for the specified region will be disposed when the atlas is disposed.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>FindRegions2</name>
            <comment>Returns all regions with the specified name, ordered by smallest to largest index, in an array. This method uses string comparison to find the regions, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion[]</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all resources associated with this TextureAtlas instance. This releases all the textures backing all TextureRegions and Sprites, which should no longer be used after calling Dispose.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CreateSprite2</name>
            <comment>Returns the first region found with the specified name and index as a sprite. This method uses string comparison to find the region and constructs a new sprite, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSprite</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Create9Patch</name>
            <comment>Returns the first region found with the specified name as a NinePatch. The region must have been packed with ninepatch splits. This method uses string comparison to find the region and constructs a new ninepatch, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateSprite</name>
            <comment>Returns the first region found with the specified name as a sprite. If whitespace was stripped from the region when it was packed, the sprite is automatically positioned as if whitespace had not been stripped. This method uses string comparison to find the region and constructs a new sprite, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgSprite</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateSprites</name>
            <comment>Returns all regions in the atlas as sprites. This method uses string comparison to find the regions and constructs new sprites, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>InitializeWithFile</name>
            <comment>Loads the specified pack file, using the internal path to find the page images.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile2</name>
            <comment>Loads the specified pack file, using the parent directory of the pack file to find the page images.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>PackFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile3</name>
            <comment>Loads the specified pack file and find the page images in the specified directory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>PackFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>ImagesDir</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>AddRegion2</name>
            <comment>Adds a region to the atlas. The specified texture will be disposed when the atlas is disposed.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAllRegions</name>
            <comment>Returns all regions in the atlas.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>FindRegion</name>
            <comment>Returns the first region found with the specified name. This method uses string comparison to find the region, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateSprites2</name>
            <comment>Returns all regions with the specified name as sprites, ordered by smallest to largest index. This method uses string comparison to find the regions and constructs new sprites, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateRegionDrawable</name>
            <comment>Returns the first region found with the specified name as a TextureRegionDrawable. This method uses string comparison to find the region and constructs a new TextureRegionDrawable, so the result should be cached rather than calling this method multiple times.
MinWidth and MinHeight are set to the region size.</comment>
            <returntype>anywheresoftware.b4a.libgdx.scene2d.lgTextureRegionDrawable</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindRegion2</name>
            <comment>Returns the first region found with the specified name and index. This method uses string comparison to find the region, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlasRegion</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAllTextures</name>
            <comment>Returns the textures of the pages, unordered.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>FindRegions</name>
            <comment>Returns all regions with the specified name, ordered by smallest to largest index, in a list. This method uses string comparison to find the regions, so the result should be cached rather than calling this method multiple times.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.TextureAtlas</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgTexture</name>
        <shortname>lgTexture</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>InternalPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources associated with the texture.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Bind2</name>
            <comment>Binds the texture to the given texture unit. Sets the currently active texture unit via glActiveTexture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Unit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithPixmap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
        </method>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureData</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithPixmap2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Bind</name>
            <comment>Binds this texture. The texture will be bound to the currently active texture unit specified via glActiveTexture.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InitializeWithFile2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetWrap</name>
            <comment>Sets the TextureWrap for this texture on the U and V axis. This will bind this texture!
U: The U (horizontal) wrap
V: The V (vertical) wrap</comment>
            <returntype>void</returntype>
            <parameter>
                <name>U</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</type>
            </parameter>
        </method>
        <method>
            <name>SetAssetManager</name>
            <comment>Sets the AssetManager. When the context is lost, textures managed by the asset manager are reloaded by the manager on a separate thread. Textures not managed by the AssetManager are reloaded via the usual means on the rendering thread.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>AssetMgr</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgAssetManager</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Data</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureData</type>
            </parameter>
        </method>
        <method>
            <name>IsManaged</name>
            <comment>Returns whether this texture is managed or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetTextureData</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureData</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws the given Pixmap to the texture at position X, Y. No clipping is performed so you have to make sure that you draw only inside the texture region. Note that this will only draw to mipmap level 0!</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetFilter</name>
            <comment>Sets the filter for this texture for minification and magnification. This will bind this texture!</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>TextureObjectHandle</name>
            <returntype>int</returntype>
            <comment>Returns the OpenGL handle for this texture.</comment>
        </property>
        <property>
            <name>ManagedStatus</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MagFilter</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
            <comment>Returns the texture filter used for magnification.</comment>
        </property>
        <property>
            <name>MinFilter</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
            <comment>Returns the texture filter used for minification.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment>Returns the height of the texture in pixels.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment>Returns the width of the texture in pixels.</comment>
        </property>
        <property>
            <name>Depth</name>
            <returntype>int</returntype>
            <comment>Returns the depth of the texture in pixels.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.Texture</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UWrap</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</returntype>
            <comment>Returns the TextureWrap used for horizontal (U) texture coordinates.</comment>
        </property>
        <property>
            <name>VWrap</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</returntype>
            <comment>Returns the TextureWrap used for vertical (V) texture coordinates.</comment>
        </property>
        <property>
            <name>NumManagedTextures</name>
            <returntype>int</returntype>
            <comment>Returns the number of managed textures currently loaded.</comment>
        </property>
        <field>
            <name>FILTER_Linear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapNearestNearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapLinearLinear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>WRAP_ClampToEdge</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</returntype>
        </field>
        <field>
            <name>FILTER_MipMapNearestLinear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapLinearNearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>WRAP_Repeat</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</returntype>
        </field>
        <field>
            <name>FILTER_Nearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>WRAP_MirroredRepeat</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureWrap</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</name>
        <shortname>lgSpriteBatch</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a new SpriteBatch with a size of 1000, one buffer, and (if GL2) the default shader. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis point to the right and the origin being in the bottom left corner of the screen. The projection will be pixel perfect with respect to the screen resolution.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>End</name>
            <comment>Finishes off rendering. Enables depth writes, disables blending and texturing. Must always be called after a call to Begin.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Flush</name>
            <comment>Causes any pending sprites to be rendered, without ending the SpriteBatch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources associated with this SpriteBatch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBlendFunction</name>
            <comment>Sets the blending function to be used when rendering sprites.
srcFunc: The source function, e.g. GL10_SRC_ALPHA. If set to -1, SpriteBatch won't change the blending function.
dstFunc: The destination function, e.g. GL10_ONE_MINUS_SRC_ALPHA</comment>
            <returntype>void</returntype>
            <parameter>
                <name>srcFunc</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstFunc</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawTex2</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y and stretching the region to cover the given width and height.
X: The X-coordinate in screen space
Y: The Y-coordinate in screen space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DisableBlending</name>
            <comment>Disables blending for drawing sprites. Calling this within Begin/End will flush the batch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawRegion</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y having the width and height of the region.
X: The x-coordinate in screen space
Y: The y-coordinate in screen space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>EnableBlending</name>
            <comment>Enables blending for sprites. Calling this within Begin/End will flush the batch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawTexVert</name>
            <comment>Draws a rectangle using the given vertices. There must be 4 vertices, each made up of 5 elements in this order: x, y, color, u, v. The Color from the SpriteBatch is not applied.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>SpriteVertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawTex4</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y having the given width and height in pixels. The portion of the Texture given by srcX, srcY and srcWidth, srcHeight are used. These coordinates and sizes are given in texels.
X: The X-coordinate in screen space
Y: The Y-coordinate in screen space
srcX: The X-coordinate in texel space
srcY: The Y-coordinate in texel space
srcWidth: The source width in texels
srcHeight: The source height in texels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawTex3</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y having the given width and height in pixels. The portion of the Texture given by U, V and U2, V2 are used. These coordinates and sizes are given in texture size percentage. The rectangle will have the given tint Color.
X: The X-coordinate in screen space
Y: The Y-coordinate in screen space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawRegion3</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y and stretching the region to cover the given width and height. The rectangle is offset by originX, originY relative to the origin. Scale specifies the scaling factor by which the rectangle should be scaled around originX, originY. Rotation specifies the angle of counter clockwise rotation of the rectangle around originX, originY.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawRegion2</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y and stretching the region to cover the given width and height.
X: The x-coordinate in screen space
Y: The y-coordinate in screen space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawTex5</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y having the given width and height in pixels. The rectangle is offset by originX, originY relative to the origin. Scale specifies the scaling factor by which the rectangle should be scaled around originX, originY. Rotation specifies the angle of counter clockwise rotation of the rectangle around originX, originY. The portion of the Texture given by srcX, srcY and srcWidth, srcHeight is used. These coordinates and sizes are given in texels. flipX and flipY specify whether the texture portion should be flipped horizontally or vertically.
X: The X-coordinate in screen space
Y: The Y-coordinate in screen space
originX: The x-coordinate of the scaling and rotation origin relative to the screen space coordinates
originY: The y-coordinate of the scaling and rotation origin relative to the screen space coordinates
Width: The width in pixels
Height: The height in pixels
scaleX: The scale of the rectangle around originX/originY in x
scaleY: The scale of the rectangle around originX/originY in y
Rotation: The angle of counter clockwise rotation of the rectangle around originX/originY
srcX: The x-coordinate in texel space
srcY: The y-coordinate in texel space
srcWidth: The source width in texels
srcHeight: The source height in texels
flipX: Whether to flip the sprite horizontally
flipY: Whether to flip the sprite vertically</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>flipX</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>flipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsBlendingEnabled</name>
            <comment>Returns whether blending for sprites is enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DrawTex</name>
            <comment>Draws a rectangle with the bottom left corner at X,Y having the width and height of the texture.
X: The X-coordinate in screen space
Y: The Y-coordinate in screen space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a SpriteBatch with the specified size, one buffer, and (if GL2) the default shader.
Size: The max number of sprites in a single batch. Max of 5460.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateDefaultShader</name>
            <comment>Returns a new instance of the default shader used by SpriteBatch for GL2 when no shader is specified.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</returntype>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Constructs a SpriteBatch with the specified size and shader. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis point to the right and the origin being in the bottom left corner of the screen. The projection will be pixel perfect with respect to the screen resolution.
Size: The max number of sprites in a single batch. Max of 5460.
DefaultShader: The default shader to use. This is not owned by the SpriteBatch and must be disposed separately.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>DefaultShader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
        </method>
        <method>
            <name>Begin</name>
            <comment>Sets up the SpriteBatch for drawing. This will disable depth buffer writing. It enables blending and texturing. If you have more texture units enabled than the first one you have to disable them before calling this. Uses a screen coordinate system by default where everything is given in pixels. You can specify your own projection and modelview matrices via ProjectionMatrix and TransformMatrix.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color used to tint images when they are added to the SpriteBatch. Default is White.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>TotalRenderCalls</name>
            <returntype>int</returntype>
            <comment>Returns the number of rendering calls ever. Will not be reset.</comment>
        </property>
        <property>
            <name>TransformMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the transform matrix to be used by this SpriteBatch. If this is called inside a Begin/End block, the current batch is flushed to the GPU.</comment>
        </property>
        <property>
            <name>BlendSrcFunc</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RenderCalls</name>
            <returntype>int</returntype>
            <comment>Returns the number of render calls since the last Begin.</comment>
        </property>
        <property>
            <name>BlendDstFunc</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxSpritesInBatch</name>
            <returntype>int</returntype>
            <comment>Returns the maximum number of sprites rendered in one batch so far.</comment>
        </property>
        <property>
            <name>Shader</name>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <comment>Sets the shader to be used in a GL ES 2.0 environment. The vertex position attribute is called "a_position",
the texture coordinates attribute is called "a_texCoord0" and the color attribute is called "a_color". See the
lgShaderProgram.ATTRIBUTE constants. The texture coordinates attribute gets "0" appended to indicate the use
of the first texture unit. The combined transform and projection matrix is uploaded via a mat4 uniform called
"u_projTrans". The texture sampler is passed via a uniform called "u_texture".
This function will flush the batch before setting the new shader, so you can call it between Begin and End.</comment>
        </property>
        <property>
            <name>ProjectionMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the projection matrix to be used by this SpriteBatch. If this is called inside a Begin/End block, the current batch is flushed to the GPU.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.SpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Tint</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color used to tint images when they are added to the SpriteBatch. Default is White.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgSprite</name>
        <shortname>lgSprite</shortname>
        <owner>process</owner>
        <method>
            <name>TranslateX</name>
            <comment>Sets the X position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TranslateY</name>
            <comment>Sets the Y position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetOrigin</name>
            <comment>Sets the origin in relation to the sprite position for scaling and rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rotate90</name>
            <comment>Rotates this sprite 90 degrees in-place by rotating the texture coordinates. This rotation is unaffected by Rotation and Rotate.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Clockwise</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of the sprite when drawn, before scaling and rotation are applied. If origin, rotation, or scale are changed, it is slightly more efficient to set the bounds after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetPosition</name>
            <comment>Sets the position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetOriginCenter</name>
            <comment>Places origin in the center of the sprite.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion2</name>
            <comment>Creates a sprite with width, height, and texture region equal to the specified size, relative to specified sprite's texture region.
srcWidth: The width of the texture region. May be negative to flip the sprite when drawn.
srcHeight: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Sets the sprite rotation in degrees relative to the current rotation. Rotation is centered on the origin set with SetOrigin.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetScale</name>
            <comment>Sets the sprite scale for both X and Y. The sprite scales out from the origin. This will not affect the Width and Height values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Sets the position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment>Makes this sprite a copy in every way of the specified sprite.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Sets the sprite scale relative to the current scale. For example: original scale 2 -&amp;gt; sprite.scale(4) -&amp;gt; final scale 6.
The sprite scales out from the origin. This will not affect the Width and Height values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Amount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Flip</name>
            <comment>Performs a flip. To set a state, call SetFlip.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Scroll</name>
            <comment>Offsets the region relative to the current region. Generally the region's size should be the entire size of the texture in the direction(s) it is scrolled.
xAmount: The percentage to offset horizontally.
yAmount: The percentage to offset vertically. This is done in texture space, so up is negative.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a sprite. It will need a texture region and bounds set before it can be drawn.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetSize</name>
            <comment>Sets the size of the sprite when drawn, before scaling and rotation are applied. If origin, rotation, or scale are changed, it is slightly more efficient to set the size after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithSprite</name>
            <comment>Creates a sprite that is a copy in every way of the specified sprite.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Sprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSprite</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture2</name>
            <comment>Creates a sprite with width, height, and texture region equal to the specified size. The texture region's upper left corner will be 0,0.
srcWidth: The width of the texture region. May be negative to flip the sprite when drawn.
srcHeight: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture</name>
            <comment>Creates a sprite with width, height, and texture region equal to the size of the given texture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion</name>
            <comment>Creates a sprite based on a specific TextureRegion. The new sprite region is a copy of the given region; altering one does not affect the other.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture3</name>
            <comment>Creates a sprite with width, height, and texture region equal to the specified size.
srcWidth: The width of the texture region. May be negative to flip the sprite when drawn.
srcHeight: The height of the texture region. May be negative to flip the sprite when drawn.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>AlphaModulation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetFlip</name>
            <comment>Sets the sprite's flip state regardless of current condition.
X: the desired horizontal flip state
Y: the desired vertical flip state</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color of this sprite.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>V2</name>
            <parameter>
                <name>V2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Alpha</name>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <comment>Sets the alpha portion of the color used to tint this sprite.</comment>
        </property>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <comment>Returns the height of the sprite, not accounting for scale.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.Sprite</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment>Returns the packed vertices, colors, and texture coordinates for this sprite.</comment>
        </property>
        <property>
            <name>U2</name>
            <parameter>
                <name>U2</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Tint</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color used to tint this sprite. Default is White.</comment>
        </property>
        <property>
            <name>U</name>
            <parameter>
                <name>U</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>V</name>
            <parameter>
                <name>V</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BoundingRectangle</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment>Returns the bounding axis aligned Rectangle that bounds this sprite. The rectangles x and y coordinates describe its bottom left corner. If you change the position or size of the sprite, you have to fetch the triangle again for it to be recomputed.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <comment>Returns the width of the sprite, not accounting for scale.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>Degrees</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the rotation of the sprite in degrees. Rotation is centered on the origin set with SetOrigin.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the Y position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the X position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <comment>Gets the X scale of the sprite, independent of the size set by SetSize.</comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <comment>Gets the Y scale of the sprite, independent of the size set by SetSize.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgShapeRenderer</name>
        <shortname>lgShapeRenderer</shortname>
        <owner>process</owner>
        <method>
            <name>End</name>
            <comment>Finishes the batch of shapes and ensures they get rendered.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Flush</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Arc</name>
            <comment>Calls Arc2 by estimating the number of segments needed for a smooth arc.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Circle2</name>
            <comment>Draws a circle with the specified number of segments.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Segments</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Triangle</name>
            <comment>Draws a triangle in the X/Y plane.
The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Triangle2</name>
            <comment>Draws a triangle in the X/Y plane with coloured corners.
The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.
Col1: color of the point defined by X1 and Y1
Col2: color of the point defined by X2 and Y2
Col3: color of the point defined by X3 and Y3</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Col1</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col2</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col3</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>Polyline2</name>
            <comment>Draws a polyline in the X/Y plane. The vertices must contain at least 2 points (4 floats X,Y). The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RectLine</name>
            <comment>Draws a rectangle with one edge centered at X1, Y1 and the opposite edge centered at X2, Y2.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Cone</name>
            <comment>Calls Cone2 by estimating the number of segments needed for a smooth circular base.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Multiplies the current transformation matrix by a rotation matrix.
Angle: Angle in degrees.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>axisX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>axisY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>axisZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Multiplies the current transformation matrix by a translation matrix.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Multiplies the current transformation matrix by a scale matrix.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>MaxVertices</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Line4</name>
            <comment>Draws a line. The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>V1</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>X</name>
            <comment>Draws two crossed lines.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Begin</name>
            <comment>Starts a new batch of shapes. All shapes within the batch have to have the type specified. The call to this method must be paired with a call to End. In case OpenGL ES 1.x is used, the projection and modelview matrix will be modified.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ShpType</name>
                <type EnumType="true">com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType</type>
            </parameter>
        </method>
        <method>
            <name>Line5</name>
            <comment>Draws a line in the X/Y plane. The ShapeType passed to Begin has to be SHAPETYPE_Line. The line is drawn with 2 colors interpolated between start &amp;amp; end point.
C1: Color at start of the line.
C2: Color at end of the line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>C1</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>C2</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>Circle</name>
            <comment>Calls Circle2 by estimating the number of segments needed for a smooth circle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Ellipse</name>
            <comment>Calls Ellipse2 by estimating the number of segments needed for a smooth ellipse.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Point</name>
            <comment>Draws a point. The ShapeType passed to Begin has to be SHAPETYPE_Point.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Line3</name>
            <comment>Draws a line. The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>V1</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>V2</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Line2</name>
            <comment>Draws a line. The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources associated with this ShapeRenderer.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Rect3</name>
            <comment>Draws a rectangle in the X/Y plane. The X and Y coordinates specify the bottom left corner of the rectangle. The OriginX and OriginY specify the point about which to rotate the rectangle. The rotation is in degrees.
The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rect2</name>
            <comment>Draws a rectangle in the X/Y plane with the specified colors. The X and Y coordinates specify the bottom left corner of the rectangle. The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.
Col1: The color at (x, y)
Col2: The color at (x + width, y)
Col3: The color at (x + width, y + height)
Col4: The color at (x, y + height)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Col1</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col2</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col3</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col4</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>Arc2</name>
            <comment>Draws an arc with the specified number of segments.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Segments</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Ellipse2</name>
            <comment>Draws an ellipse with the specified number of segments.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Segments</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Box</name>
            <comment>Draws a cube. The X, Y and Z coordinate specify the bottom left front corner of the rectangle. The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Depth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Cone2</name>
            <comment>Draws a cone with the specified number of segments.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Segments</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Polygon2</name>
            <comment>Draws a polygon in the X/Y plane. The vertices must contain at least 3 points (6 floats X,Y). The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Polygon</name>
            <comment>Draws a polygon in the X/Y plane. The vertices must contain at least 3 points (6 floats X,Y). The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Rect</name>
            <comment>Draws a rectangle in the X/Y plane. The X and Y coordinates specify the bottom left corner of the rectangle. The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Identity</name>
            <comment>Sets the transformation matrix to identity.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Curve</name>
            <comment>Draws a curve with the specified number of segments.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cX1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cY1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cX2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>cY2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Segments</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Rect4</name>
            <comment>Draws a rectangle in the X/Y plane with the specified colors. The X and Y coordinates specify the bottom left corner of the rectangle. The OriginX and OriginY specify the point about which to rotate the rectangle. The rotation is in degrees.
The ShapeType passed to Begin has to be SHAPETYPE_Filled or SHAPETYPE_Line.
Col1: The color at (x, y)
Col2: The color at (x + width, y)
Col3: The color at (x + width, y + height)
Col4: The color at (x, y + height)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Col1</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col2</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col3</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Col4</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>Polyline</name>
            <comment>Draws a polyline in the X/Y plane.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Line</name>
            <comment>Draws a line in the X/Y plane. The ShapeType passed to Begin has to be SHAPETYPE_Line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color to be used by shapes.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>TransformMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the transformation matrix.</comment>
        </property>
        <property>
            <name>CurrentType</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType</returntype>
            <comment>Returns the current ShapeType used.</comment>
        </property>
        <property>
            <name>ProjectionMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the projection matrix to be used for rendering. Usually this will be set to Camera.Combined.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.glutils.ShapeRenderer</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color to be used by shapes.</comment>
        </property>
        <field>
            <name>SHAPETYPE_Filled</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Point</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType</returntype>
        </field>
        <field>
            <name>SHAPETYPE_Line</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</name>
        <shortname>lgShaderProgram</shortname>
        <owner>process</owner>
        <method>
            <name>SetUniform1fL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>End</name>
            <comment>Disables this shader. Must be called when one is done with the shader. Don't mix it with Dispose, that will release the shader resources.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FetchUniformLocation</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Pedantic</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4L</name>
            <comment>Sets the uniform matrix with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform2fV</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform1fV</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform1fVL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4fVL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4iL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformColorL</name>
            <comment>Sets the uniform with the given location and color. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>GetManagedStatus</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetUniform2f</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeType</name>
            <comment>Returns the type of the attribute, one of lgGL.GL20_FLOAT, lgGL.GL20_FLOAT_VEC2 etc.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetVertexAttributeL</name>
            <comment>Sets the vertex attribute with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Size: the number of components, must be &amp;gt;= 1 and &amp;lt;= 4
Type: the type, must be one of lgGL.GL20_BYTE, lgGL.GL20_UNSIGNED_BYTE, lgGL.GL20_SHORT, lgGL.GL20_UNSIGNED_SHORT, lgGL.GL20_FIXED, or lgGL.GL20_FLOAT.
Normalize: whether fixed point data should be normalized. Will not work on the desktop
Stride: the stride in bytes between successive attributes
Buffer: the buffer containing the vertex attributes.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Normalize</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Buffer</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>EnableVertexAttribute</name>
            <comment>Enables the vertex attribute with the given name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>HasAttribute</name>
            <comment>Returns whether the attribute is available in the shader</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform2i</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Begin</name>
            <comment>Makes OpenGL ES 2.0 use this vertex and fragment shader pair. When you are done with this shader you have to call End.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetUniformMatrix3t</name>
            <comment>Sets the uniform matrix with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Transpose: whether the matrix should be transposed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
            <parameter>
                <name>Transpose</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform2fL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Constructs a new ShaderProgram and immediately compiles it.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>VertexShader</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FragmentShader</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsCompiled</name>
            <comment>Returns whether this ShaderProgram compiled successfully.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetUniform2fVL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>HasUniform</name>
            <comment>Returns whether the uniform is available in the shader</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform3f</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetUniformLocation</name>
            <comment>Returns the location of the uniform or -1.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform3i</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4t</name>
            <comment>Sets the uniform matrix with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Transpose: whether the matrix should be transposed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>Transpose</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform3fVL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFiles</name>
            <comment>Constructs a new ShaderProgram and immediately compiles it.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>VertexShader</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>FragmentShader</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4fV</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4tL</name>
            <comment>Sets the uniform matrix with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Transpose: whether the matrix should be transposed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>Transpose</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformColor</name>
            <comment>Sets the uniform with the given name and color. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4fVL</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DisableVertexAttribute</name>
            <comment>Disables the vertex attribute with the given name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4i</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4f</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value4</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeLocation</name>
            <comment>Returns the location of the attribute or -1.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix3</name>
            <comment>Sets the uniform matrix with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix4</name>
            <comment>Sets the uniform matrix with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix3tL</name>
            <comment>Sets the uniform matrix with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Transpose: whether the matrix should be transposed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
            <parameter>
                <name>Transpose</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetAttributef</name>
            <comment>Sets the given attribute.
Name: the name of the attribute
Value1: the first value
Value2: the second value
Value3: the third value
Value4: the fourth value</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value4</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetUniformMatrix3L</name>
            <comment>Sets the uniform matrix with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources associated with this shader. Must be called when the shader is no longer used.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetUniform3fL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetVertexAttribute</name>
            <comment>Sets the vertex attribute with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Name: the attribute name
Size: the number of components, must be &amp;gt;= 1 and &amp;lt;= 4
Type: the type, must be one of lgGL.GL20_BYTE, lgGL.GL20_UNSIGNED_BYTE, lgGL.GL20_SHORT, lgGL.GL20_UNSIGNED_SHORT, lgGL.GL20_FIXED, or lgGL.GL20_FLOAT.
Normalize: whether fixed point data should be normalized. Will not work on the desktop
Stride: the stride in bytes between successive attributes
Buffer: the buffer containing the vertex attributes.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Normalize</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Buffer</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform1i</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4fL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Value4</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform1f</name>
            <comment>Sets the uniform with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform1iL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetVertexAttributeL2</name>
            <comment>Sets the vertex attribute with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Size: the number of components, must be &amp;gt;= 1 and &amp;lt;= 4
Type: the type, must be one of lgGL.GL20_BYTE, lgGL.GL20_UNSIGNED_BYTE, lgGL.GL20_SHORT, lgGL.GL20_UNSIGNED_SHORT, lgGL.GL20_FIXED, or lgGL.GL20_FLOAT.
Normalize: whether fixed point data should be normalized.
Stride: the stride in bytes between successive attributes
Offset: byte offset into the vertex buffer object bound to lgGL.GL20_ARRAY_BUFFER.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Normalize</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetUniformType</name>
            <comment>Returns the type of the uniform, one of lgGL.GL20_FLOAT, lgGL.GL20_FLOAT_VEC2 etc.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetAttributeSize</name>
            <comment>Returns the size of the attribute or 0.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform3fV</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetUniformSize</name>
            <comment>Returns the size of the uniform or 0.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform3iL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetVertexAttribute2</name>
            <comment>Sets the vertex attribute with the given name. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.
Name: the attribute name
Size: the number of components, must be &amp;gt;= 1 and &amp;lt;= 4
Type: the type, must be one of lgGL.GL20_BYTE, lgGL.GL20_UNSIGNED_BYTE, lgGL.GL20_SHORT, lgGL.GL20_UNSIGNED_SHORT, lgGL.GL20_FIXED, or lgGL.GL20_FLOAT.
Normalize: whether fixed point data should be normalized.
Stride: the stride in bytes between successive attributes
Offset: byte offset into the vertex buffer object bound to lgGL.GL20_ARRAY_BUFFER.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Normalize</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform4fV</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetUniform2iL</name>
            <comment>Sets the uniform with the given location. Throws an IllegalArgumentException in case it is not called in between a Begin/End block.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value2</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>FragmentShaderSource</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the source of the fragment shader.</comment>
        </property>
        <property>
            <name>Attributes</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Returns the attributes</comment>
        </property>
        <property>
            <name>VertexShaderSource</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the source of the vertex shader.</comment>
        </property>
        <property>
            <name>Log</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the log info for the shader compilation and program linking stage. The shader needs to be bound for this method to have an effect.</comment>
        </property>
        <property>
            <name>Pedantic</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Pedantic</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets the flag indicating whether attributes &amp;amp; uniforms must be present at all times.</comment>
        </property>
        <property>
            <name>Uniforms</name>
            <returntype>java.lang.String[]</returntype>
            <comment>Returns the uniforms</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.glutils.ShaderProgram</returntype>
            <comment></comment>
        </property>
        <field>
            <name>ATTRIBUTE_TEXCOORD</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_NORMAL</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_TANGENT</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_COLOR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_POSITION_</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ATTRIBUTE_BINORMAL</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgScissorStack</name>
        <shortname>lgScissorStack</shortname>
        <owner>process</owner>
        <method>
            <name>PushScissors</name>
            <comment>Pushes a new scissor Rectangle onto the stack, merging it with the current top of the stack. The minimal area of overlap between the top of stack rectangle and the provided rectangle is pushed onto the stack. This will invoke GLCommon.glScissor with the final top of stack rectangle. In case no scissor is yet on the stack this will also enable GL10_SCISSOR_TEST automatically.
Returns True if the scissors were pushed, False if the scissor area was zero, in this case the scissors were not pushed and no drawing should occur.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Scissor</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <method>
            <name>PopScissors</name>
            <comment>Pops the current scissor rectangle from the stack and sets the new scissor area to the new top of stack rectangle. In case no more rectangles are on the stack, GL10_SCISSOR_TEST is disabled.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
        </method>
        <method>
            <name>CalculateScissors</name>
            <comment>Calculates a scissor rectangle in OpenGL ES window coordinates from a Camera, a transformation Matrix4 and an axis aligned Rectangle. The rectangle will get transformed by the camera and transform matrices and is then projected to screen coordinates. Note that only axis aligned rectangles will work with this method. If either the Camera or the Matrix4 have rotational components, the output of this method will not be suitable for GLCommon.glScissor.
Camera: the orthographic camera
Viewport...: the viewport position and dimensions
BatchTransform: the transformation Matrix4
Area: the Rectangle to transform to window coordinates
Scissor: the Rectangle to store the result in</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</type>
            </parameter>
            <parameter>
                <name>ViewportX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>BatchTransform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <parameter>
                <name>Area</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
            <parameter>
                <name>Scissor</name>
                <type>com.badlogic.gdx.math.Rectangle</type>
            </parameter>
        </method>
        <property>
            <name>Viewport</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment>Returns the current viewport in OpenGL ES window coordinates based on the currently applied scissor.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgPolygonSpriteBatch</name>
        <shortname>lgPolygonSpriteBatch</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a new PolygonSpriteBatch with a default size of 2000, the default shader (if GL2), and one buffer. Sets the projection matrix to an orthographic projection with y-axis point upwards, x-axis point to the right and the origin being in the bottom left corner of the screen. The projection will be pixel perfect with respect to the current screen resolution.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>End</name>
            <comment>Finishes off rendering. Enables depth writes, disables blending and texturing. Must always be called after a call to Begin.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Flush</name>
            <comment>Causes any pending polygons to be rendered, without ending the PolygonSpriteBatch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources associated with this PolygonSpriteBatch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBlendFunction</name>
            <comment>Sets the blending function to be used when rendering polygons.
srcFunc: The source function, e.g. GL10_SRC_ALPHA. If set to -1, PolygonSpriteBatch won't change the blending function.
dstFunc: The destination function, e.g. GL10_ONE_MINUS_SRC_ALPHA</comment>
            <returntype>void</returntype>
            <parameter>
                <name>srcFunc</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstFunc</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DisableBlending</name>
            <comment>Disables blending. Calling this within Begin/End will flush the batch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawRegion</name>
            <comment>Draws a polygon region with the bottom left corner at X,Y having the width and height of the region.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>EnableBlending</name>
            <comment>Enables blending. Calling this within Begin/End will flush the batch.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawRegion3</name>
            <comment>Draws a polygon region with the bottom left corner at X,Y and stretching the region to cover the given width and height. The polygon region is offset by OriginX, OriginY relative to the origin. Scale specifies the scaling factor by which the polygon region should be scaled around OriginX, OriginY. Rotation specifies the angle of counter clockwise rotation of the rectangle around OriginX, OriginY.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OriginY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ScaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ScaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Rotation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawRegion2</name>
            <comment>Draws a polygon region with the bottom left corner at X,Y and stretching the region to cover the given width and height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsBlendingEnabled</name>
            <comment>Returns whether blending is enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a PolygonSpriteBatch with the specified size, the default shader (if GL2), and one buffer.
Size: The max number of vertices and number of triangles in a single batch. Max of 10920.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawPolygon</name>
            <comment>Draws the polygon using the given vertices and triangles. Each vertices must be made up of 5 elements in this order: x, y, color, u, v.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>PolygonVertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>VerticesOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>VerticesCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>PolygonTriangles</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>TrianglesOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TrianglesCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateDefaultShader</name>
            <comment>Returns a new instance of the default shader used by PolygonSpriteBatch for GL2 when no shader is specified.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</returntype>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Constructs a PolygonSpriteBatch with the specified size and shader.
Size: The max number of vertices and number of triangles in a single batch. Max of 10920.
DefaultShader: The default shader to use. This is not owned by the PolygonSpriteBatch and must be disposed separately.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>DefaultShader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
        </method>
        <method>
            <name>Begin</name>
            <comment>Sets up the PolygonSpriteBatch for drawing. This will disable depth buffer writing. It enables blending and texturing. If you have more texture units enabled than the first one you have to disable them before calling this. Uses a screen coordinate system by default where everything is given in pixels. You can specify your own projection and modelview matrices via ProjectionMatrix and TransformMatrix.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color used to tint images when they are added to the PolygonSpriteBatch. Default is White.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>TotalRenderCalls</name>
            <returntype>int</returntype>
            <comment>Returns the number of rendering calls ever. Will not be reset.</comment>
        </property>
        <property>
            <name>TransformMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the transform matrix to be used by this PolygonSpriteBatch. If this is called inside a Begin/End block, the current batch is flushed to the GPU.</comment>
        </property>
        <property>
            <name>RenderCalls</name>
            <returntype>int</returntype>
            <comment>Returns the number of render calls since the last Begin.</comment>
        </property>
        <property>
            <name>MaxTrianglesInBatch</name>
            <returntype>int</returntype>
            <comment>Returns the maximum number of triangles rendered in one batch so far.</comment>
        </property>
        <property>
            <name>Shader</name>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <comment>Sets the shader to be used in a GL ES 2.0 environment. The vertex position attribute is called "a_position",
the texture coordinates attribute is called "a_texCoord0" and the color attribute is called "a_color". See the
lgShaderProgram.ATTRIBUTE constants. The texture coordinates attribute gets "0" appended to indicate the use
of the first texture unit. The combined transform and projection matrix is uploaded via a mat4 uniform called
"u_projTrans". The texture sampler is passed via a uniform called "u_texture".
This function will flush the batch before setting the new shader, so you can call it between Begin and End.</comment>
        </property>
        <property>
            <name>ProjectionMatrix</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <parameter>
                <name>Projection</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
            <comment>Gets or sets the projection matrix to be used by this PolygonSpriteBatch. If this is called inside a Begin/End block, the current batch is flushed to the GPU.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Tint</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color used to tint images when they are added to the PolygonSpriteBatch. Default is White.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgPolygonSprite</name>
        <shortname>lgPolygonSprite</shortname>
        <owner>process</owner>
        <method>
            <name>TranslateX</name>
            <comment>Sets the X position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TranslateY</name>
            <comment>Sets the Y position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetOrigin</name>
            <comment>Sets the origin in relation to the sprite's position for scaling and rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>originX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>originY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetBounds</name>
            <comment>Sets the position and size of the sprite when drawn, before scaling and rotation are applied. If origin, rotation, or scale are changed, it is slightly more efficient to set the bounds after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetPosition</name>
            <comment>Sets the position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetSize</name>
            <comment>Sets the size of the sprite when drawn, before scaling and rotation are applied. If origin, rotation, or scale are changed, it is slightly more efficient to set the size after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithSprite</name>
            <comment>Creates a sprite that is a copy in every way of the specified sprite.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>PolygonSprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonSprite</type>
            </parameter>
        </method>
        <method>
            <name>SetRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</type>
            </parameter>
        </method>
        <method>
            <name>DrawAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>PSpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonSpriteBatch</type>
            </parameter>
            <parameter>
                <name>AlphaModulation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Sets the position relative to the current position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to translate after those operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xAmount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yAmount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Sets the sprite's rotation relative to the current rotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Degrees</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Sets the sprite's scale relative to the current scale.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Amount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>PolygonSprite</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonSprite</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>PSpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPolygonSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color of this sprite.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>OriginY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OriginX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment>Returns the packed vertices, colors, and texture coordinates for this sprite.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.PolygonSprite</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Tint</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color used to tint this sprite. Default is White.</comment>
        </property>
        <property>
            <name>BoundingRectangle</name>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <comment>Returns the bounding axis aligned Rectangle that bounds this sprite. The rectangles x and y coordinates describe its bottom left corner. If you change the position or size of the sprite, you have to fetch the triangle again for it to be recomputed.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the Y position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
        </property>
        <property>
            <name>Rotation</name>
            <returntype>float</returntype>
            <parameter>
                <name>Degrees</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the X position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient to set the position after those operations. If both position and size are to be changed, it is better to use SetBounds.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgPolygonRegion</name>
        <shortname>lgPolygonRegion</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Loads a PolygonRegion from a PSH (Polygon SHape) file. The PSH file format defines the polygon vertices before triangulation. Lines not prefixed with "s" are ignored.
PSH files can be created with external tools, e.g.: https://code.google.com/p/libgdx-polygoneditor/</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a PolygonRegion with the specified vertices and triangles.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Triangles</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Region</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Triangles</name>
            <returntype>short[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TextureCoords</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.PolygonRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgPixmap</name>
        <shortname>lgPixmap</shortname>
        <comment>A Pixmap represents an image in memory. It has a width and height expressed in pixels as well as a Format specifying the number and order of color components per pixel. Coordinates of pixels are specified with respect to the top left corner of the image, with the x-axis pointing to the right and the y-axis pointing downwards.
 
 By default all methods use blending. You can disable blending with SetBlending. The DrawPixmap method will scale and stretch the source image to a target image. There either nearest neighbour or bilinear filtering can be used.
 
 A Pixmap stores its data in native heap memory. It is mandatory to call dispose() when the pixmap is no longer needed, otherwise memory leaks will result.</comment>
        <owner>process</owner>
        <method>
            <name>FillRectangle</name>
            <comment>Fills a rectangle starting at X, Y extending by width to the right and by height downwards (Y-axis points downwards) using the current color.
X: The X coordinate.
Y: The Y coordinate.
Width: The width in pixels.
Height: The height in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Pixmap instance with the given width, height and format.
Width: The width in pixels
Height: The height in pixels
Format: One of the Format constants.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Format</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</type>
            </parameter>
        </method>
        <method>
            <name>DrawCircle</name>
            <comment>Draws a circle outline with the center at X,Y and a radius using the current color and stroke width.
X: The X-coordinate of the center.
Y: The Y-coordinate of the center.
Radius: The radius in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithArray</name>
            <comment>Creates a new Pixmap instance from the given encoded image data. The image can be encoded as JPEG, PNG or BMP.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>EncodedData</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawLine</name>
            <comment>Draws a line between the given coordinates using the currently set color.
X: The X-coordinate of the first point
Y: The Y-coordinate of the first point
X2: The X-coordinate of the second point
Y2: The Y-coordinate of the second point</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all resources associated with this Pixmap.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawPixel</name>
            <comment>Draws a pixel at the given location with the current color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPixel</name>
            <comment>Returns the 32-bit RGBA8888 value of the pixel at X, Y. For Alpha formats the RGB components will be one.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile</name>
            <comment>Creates a new Pixmap instance from the given file. The file must be a Png, Jpeg or Bitmap. Paletted formats are not supported.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>DrawRectangle</name>
            <comment>Draws a rectangle outline starting at X,Y extending by width to the right and by height downwards (Y-axis points downwards) using the current color.
X: The X coordinate.
Y: The Y coordinate.
Width: The width in pixels.
Height: The height in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawPixel2</name>
            <comment>Draws a pixel at the given location with the given color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA8888</name>
            <comment>Sets the color, encoded as RGBA8888, for the following drawing operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>FillTriangle</name>
            <comment>Fills a triangle with vertices at X1,Y1 and X2,Y2 and X3,Y3 using the current color.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>X2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>X3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>FillCircle</name>
            <comment>Fills a circle with the center at X,Y and a radius using the current color.
X: The X-coordinate of the center.
Y: The Y-coordinate of the center.
Radius: The radius in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Radius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColor</name>
            <comment>Sets the color for the following drawing operations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>DrawPixmap</name>
            <comment>Draws an area from another Pixmap to this Pixmap.
Pixmap: The other Pixmap.
X: The target X-coordinate (top left corner).
Y: The target Y-coordinate (top left corner).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Fill</name>
            <comment>Fills the complete bitmap with the currently set color.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawPixmap2</name>
            <comment>Draws an area from another Pixmap to this Pixmap.
Pixmap: The other Pixmap.
X: The target X-coordinate (top left corner).
Y: The target Y-coordinate (top left corner).
srcX: The source X-coordinate (top left corner).
srcY: The source Y-coordinate (top left corner).
srcWidth: The width of the area from the other Pixmap in pixels.
srcHeight: The height of the area from the other Pixmap in pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color for the following drawing operations.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DrawPixmap3</name>
            <comment>Draws an area from another Pixmap to this Pixmap. This will automatically scale and stretch the source image to the specified target rectangle. Set Filter to specify the type of filtering to be used (nearest neighbour or bilinear).
Pixmap: The other Pixmap.
srcX: The source X-coordinate (top left corner).
srcY: The source Y-coordinate (top left corner).
srcWidth: The width of the area from the other Pixmap in pixels.
srcHeight: The height of the area from the other Pixmap in pixels.
dstX: The target X-coordinate (top left corner).
dstY: The target Y-coordinate (top left corner).
dstWidth: The target width.
dstHeight: The target height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>srcX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstY</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>GLFormat</name>
            <returntype>int</returntype>
            <comment>Returns the OpenGL ES format of this Pixmap. Used as the seventh parameter to glTexImage2D.</comment>
        </property>
        <property>
            <name>Filter</name>
            <parameter>
                <name>Filter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Filter</type>
            </parameter>
            <comment>Sets the type of interpolation Filter to be used in conjunction with DrawPixmap3.</comment>
        </property>
        <property>
            <name>GLInternalFormat</name>
            <returntype>int</returntype>
            <comment>Returns the OpenGL ES format of this Pixmap. Used as the third parameter to glTexImage2D.</comment>
        </property>
        <property>
            <name>Format</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
            <comment>Returns the Format of this Pixmap.</comment>
        </property>
        <property>
            <name>GLType</name>
            <returntype>int</returntype>
            <comment>Returns the OpenGL ES type of this Pixmap. Used as the eighth parameter to glTexImage2D.</comment>
        </property>
        <property>
            <name>Pixels</name>
            <returntype>byte[]</returntype>
            <comment>Returns the direct ByteBuffer holding the pixel data. For the format Alpha each value is encoded as a byte. For the format LuminanceAlpha the luminance is the first byte and the alpha is the second byte of the pixel. For the formats RGB888 and RGBA8888 the color components are stored in a single byte each in the order red, green, blue (alpha). For the formats RGB565 and RGBA4444 the pixel colors are stored in shorts in machine dependent order.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment>Returns the height of the Pixmap in pixels.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment>Returns the width of the Pixmap in pixels.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.Pixmap</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Blending</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Blending</returntype>
            <parameter>
                <name>Blending</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Blending</type>
            </parameter>
            <comment>Gets or sets the type of Blending to be used for all operations. Default is BLENDING_SourceOver.</comment>
        </property>
        <field>
            <name>FORMAT_LuminanceAlpha</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_RGB565</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_Intensity</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_RGBA8888</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FILTER_BiLinear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Filter</returntype>
        </field>
        <field>
            <name>FORMAT_Alpha</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>BLENDING_None</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Blending</returntype>
        </field>
        <field>
            <name>BLENDING_SourceOver</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Blending</returntype>
        </field>
        <field>
            <name>FORMAT_RGBA4444</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FILTER_NearestNeighbour</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Filter</returntype>
        </field>
        <field>
            <name>FORMAT_RGB888</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgPerspectiveCamera</name>
        <shortname>lgPerspectiveCamera</shortname>
        <owner>process</owner>
        <method>
            <name>GetPickRay</name>
            <comment>Creates a picking Ray from the coordinates given in screen coordinates. It is assumed that the viewport spans the whole screen. The screen coordinates origin is assumed to be in the top left corner, its y-axis pointing down, the x-axis pointing to the right. The returned instance is not a new instance but an internal member only accessible via this function.
X: the X-coordinate in screen coordinates.
Y: the Y-coordinate in screen coordinates.</comment>
            <returntype>com.badlogic.gdx.math.collision.Ray</returntype>
            <parameter>
                <name>screenX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>screenY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Update</name>
            <comment>Recalculates the projection and view matrix of this camera and the frustum planes. Use this after you've manipulated any of the attributes of the camera.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Unproject</name>
            <comment>Translates a point given in screen coordinates to world space.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Coord</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>LookAt</name>
            <comment>Recalculates the direction of the camera to look at the point (x, y, z).
X: the x-coordinate of the point to look at
Y: the y-coordinate of the point to look at
Z: the z-coordinate of the point to look at</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Moves the camera by the given amount on each axis.
X: the displacement on the x-axis
Y: the displacement on the y-axis
Z: the displacement on the z-axis</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Rotates the direction and up vector of this camera by the given angle around the given axis. The direction and up vector will not be orthogonalized.
Angle: the angle
AxisX: the x-component of the axis
AxisY: the y-component of the axis
AxisZ: the z-component of the axis</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AxisX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AxisY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AxisZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Project</name>
            <comment>Translates the Vector3 given in world space to screen coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Coord</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>Update2</name>
            <comment>Recalculates the projection and view matrix of this camera and the frustum planes if UpdateFrustum is true. Use this after you've manipulated any of the attributes of the camera.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>UpdateFrustum</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a new PerspectiveCamera with the given field of view and viewport size. The aspect ratio is derived from the viewport size.
FieldOfView: the field of view in degrees
ViewportWidth: the viewport width
ViewportHeight: the viewport height</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FieldOfView</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportHeight</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RotateAround</name>
            <comment>Rotates the direction and up vector of this camera by the given angle around the given axis, with the axis attached to the given
point. The direction and up vector will not be orthogonalized.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Point</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>Axis</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Up</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the unit length up vector of the camera.</comment>
        </property>
        <property>
            <name>ViewportWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.PerspectiveCamera</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Far</name>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the far clipping plane distance. Has to be positive.</comment>
        </property>
        <property>
            <name>InvProjectionView</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the inverse combined projection and view matrix.</comment>
        </property>
        <property>
            <name>Frustum</name>
            <returntype>com.badlogic.gdx.math.Frustum</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Direction</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the unit length direction vector of the camera.</comment>
        </property>
        <property>
            <name>ViewportHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>View</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the view matrix.</comment>
        </property>
        <property>
            <name>Projection</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the projection matrix.</comment>
        </property>
        <property>
            <name>FieldOfView</name>
            <returntype>float</returntype>
            <parameter>
                <name>FieldOfView</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the field of view in degrees.</comment>
        </property>
        <property>
            <name>Near</name>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the near clipping plane distance. Has to be positive.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the position of the camera.</comment>
        </property>
        <property>
            <name>Combined</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the combined projection and view matrix.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgOrthographicCamera</name>
        <shortname>lgOrthographicCamera</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetToOrtho2</name>
            <comment>Sets this camera to an orthographic projection, centered at (viewportWidth/2, viewportHeight/2), with the y-axis pointing up or down.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>yDown</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ViewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ViewportHeight</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetToOrtho</name>
            <comment>Sets this camera to an orthographic projection using a viewport fitting the screen resolution, centered at (lgGdx.Graphics.Width/2, lgGdx.Graphics.Height/2), with the y-axis pointing up or down.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>yDown</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Update</name>
            <comment>Recalculates the projection and view matrix of this camera and the frustum planes. Use this after you've manipulated any of the attributes of the camera.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Unproject</name>
            <comment>Translates a point given in screen coordinates to world space.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Coord</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Moves the camera by the given amount on each axis.
X: The displacement on the X-axis.
Y: The displacement on the Y-axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Rotate</name>
            <comment>Rotates the camera by the given angle around the direction vector. The direction and up vector will not be orthogonalized.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Translate2</name>
            <comment>Moves the camera by the given vector.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>vec</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Project</name>
            <comment>Translates the Vector2 given in world space to screen coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Coord</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <method>
            <name>Update2</name>
            <comment>Recalculates the projection and view matrix of this camera and the frustum planes if UpdateFrustum is true. Use this after you've manipulated any of the attributes of the camera.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>UpdateFrustum</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a new OrthographicCamera, using the given viewport width and height. For pixel perfect 2D rendering just supply the screen size, for other unit scales (e.g. meters for box2d) proceed accordingly. The camera will show the region [-viewportWidth/2, -viewportHeight/2]- [viewportWidth/2, viewportHeight/2].
viewportWidth: The viewport width.
viewportHeight: The viewport height.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>viewportWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>viewportHeight</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Up</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the unit length up vector of the camera.</comment>
        </property>
        <property>
            <name>Zoom</name>
            <returntype>float</returntype>
            <parameter>
                <name>Zoom</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ViewportWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.OrthographicCamera</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Far</name>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the far clipping plane distance. Has to be positive.</comment>
        </property>
        <property>
            <name>InvProjectionView</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the inverse combined projection and view matrix.</comment>
        </property>
        <property>
            <name>Frustum</name>
            <returntype>com.badlogic.gdx.math.Frustum</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Direction</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the unit length direction vector of the camera.</comment>
        </property>
        <property>
            <name>ViewportHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>View</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the view matrix.</comment>
        </property>
        <property>
            <name>Projection</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the projection matrix.</comment>
        </property>
        <property>
            <name>Near</name>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the near clipping plane distance. Has to be positive.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <comment>Gets the position of the camera.</comment>
        </property>
        <property>
            <name>Combined</name>
            <returntype>com.badlogic.gdx.math.Matrix4</returntype>
            <comment>Returns the combined projection and view matrix.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</name>
        <shortname>lgNinePatch</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>NinePatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture2</name>
            <comment>Constructs a degenerate "nine" patch with only a center component.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture</name>
            <comment>Constructs a degenerate "nine" patch with only a center component.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion</name>
            <comment>Constructs a degenerate "nine" patch with only a center component.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>SetPadding</name>
            <comment>Sets the padding for content inside this ninepatch. By default the padding is set to match the exterior of the ninepatch, so the content should fit exactly within the middle patch.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion3</name>
            <comment>Creates a ninepatch by cutting up the given texture region into nine patches. The subsequent parameters define the 4 lines that will cut the texture region into 9 pieces.
Left: Pixels from left edge.
Right: Pixels from right edge.
Top: Pixels from top edge.
Bottom: Pixels from bottom edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegion2</name>
            <comment>Constructs a degenerate "nine" patch with only a center component.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithTexture3</name>
            <comment>Creates a ninepatch by cutting up the given texture into nine patches. The subsequent parameters define the 4 lines that will cut the texture region into 9 pieces.
Left: Pixels from left edge.
Right: Pixels from right edge.
Top: Pixels from top edge.
Bottom: Pixels from bottom edge.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Texture</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTexture</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithRegions</name>
            <comment>Constructs a ninepatch from the given nine texture regions. The provided patches must be consistently sized (e.g., any left edge textures must have the same width, etc). Patches may be null. Patch indices are specified via the constants TOP_LEFT, TOP_CENTER, etc.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Regions</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[]</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Batch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>NinePatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgNinePatch</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RightWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>RightWidth</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the draw-time width of the three right edge patches.</comment>
        </property>
        <property>
            <name>PadBottom</name>
            <returntype>float</returntype>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the bottom padding. If not set, returns BottomHeight.</comment>
        </property>
        <property>
            <name>MiddleWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>MiddleWidth</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the draw-time width of the three middle edge patches.</comment>
        </property>
        <property>
            <name>TotalHeight</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadRight</name>
            <returntype>float</returntype>
            <parameter>
                <name>Right</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the right padding. If not set, returns RightWidth.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.NinePatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Texture</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTexture</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color. The color will be blended with the batch color, then combined with the texture colors at draw time. Default is White.</comment>
        </property>
        <property>
            <name>TotalWidth</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PadTop</name>
            <returntype>float</returntype>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the top padding. If not set, returns TopHeight.</comment>
        </property>
        <property>
            <name>BottomHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>BottomHeight</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the draw-time height of the three bottom edge patches.</comment>
        </property>
        <property>
            <name>LeftWidth</name>
            <returntype>float</returntype>
            <parameter>
                <name>LeftWidth</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the draw-time width of the three left edge patches.</comment>
        </property>
        <property>
            <name>PadLeft</name>
            <returntype>float</returntype>
            <parameter>
                <name>Left</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the left padding. If not set, returns LeftWidth.</comment>
        </property>
        <property>
            <name>MiddleHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>MiddleHeight</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the height of the middle row of the patch. At render time, this is implicitly the requested render-height of the entire nine patch, minus the top and bottom height.</comment>
        </property>
        <property>
            <name>TopHeight</name>
            <returntype>float</returntype>
            <parameter>
                <name>TopHeight</name>
                <type>float</type>
            </parameter>
            <comment>Gets or sets the draw-time height of the three top edge patches.</comment>
        </property>
        <field>
            <name>TOP_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BOTTOM_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIDDLE_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BOTTOM_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIDDLE_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOP_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIDDLE_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BOTTOM_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOP_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgMipMapGenerator</name>
        <shortname>lgMipMapGenerator</shortname>
        <owner>process</owner>
        <method>
            <name>GenerateMipMap2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>TextureWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TextureHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GenerateMipMap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
            <parameter>
                <name>TextureWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>TextureHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>UseHardwareMipMap</name>
            <parameter>
                <name>UseHWMipMap</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgMesh</name>
        <shortname>lgMesh</shortname>
        <owner>process</owner>
        <method>
            <name>CalculateBoundingBox4</name>
            <comment>Calculates the BoundingBox of the specified part.
Out: the bounding box to store the result in.
Offset: the start index of the part.
Count: the amount of indices the part contains. 
Returns the value specified by Out.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>CalculateBoundingBox3</name>
            <comment>Calculates the BoundingBox of the specified part.
Out: the bounding box to store the result in.
Offset: the start index of the part.
Count: the amount of indices the part contains. 
Returns the value specified by Out.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>UnbindS</name>
            <comment>Unbinds the underlying VertexBufferObject and IndexBufferObject is indices were given. Use this with OpenGL ES 2.0 and when auto-bind is disabled.
Shader: the shader (does not unbind the shader)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
        </method>
        <method>
            <name>CalculateBoundingBox2</name>
            <comment>Calculates the BoundingBox of the vertices contained in this mesh. In case no vertices are defined yet a GdxRuntimeException is thrown.
Bbox: the bounding box to store the result in.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Bbox</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
        </method>
        <method>
            <name>TransformUV</name>
            <comment>Transforms the texture coordinates in the mesh. This is a potentially slow operation, use with care.
It will also create a temporary float() which will be garbage collected.
Matrix: the transformation matrix</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
        </method>
        <method>
            <name>Create2</name>
            <comment>Create a new Mesh that is a combination of the supplied meshes. The meshes must have the same VertexAttributes signature.
Not all primitive types, like line strip and triangle strip, can be combined.
IsStatic: whether this mesh is static or not. Allows for internal optimizations.
Meshes: the meshes to combine
Returns the combined mesh.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgMesh</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Meshes</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgMesh[]</type>
            </parameter>
        </method>
        <method>
            <name>CalculateRadiusSquared</name>
            <comment>Calculates the squared radius of the bounding sphere around the specified center for the specified part.
CenterX: The X coordinate of the center of the bounding sphere
CenterY: The Y coordinate of the center of the bounding sphere
CenterZ: The Z coordinate of the center of the bounding sphere
Offset: the start index of the part.
Count: the amount of indices the part contains.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>CenterX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>ExtendBoundingBox</name>
            <comment>Extends the specified BoundingBox with the specified part.
Out: the bounding box to store the result in.
Offset: the start index of the part.
Count: the amount of indices the part contains. 
Returns the value specified by Out.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Create3</name>
            <comment>Create a new Mesh that is a combination of the supplied meshes. The meshes must have the same VertexAttributes signature.
If transformations is supplied, it must have the same length as meshes. 
Not all primitive types, like line strip and triangle strip, can be combined.
IsStatic: whether this mesh is static or not. Allows for internal optimizations.
Meshes: the meshes to combine
Transformations: the transformations to apply to the meshes 
Returns the combined mesh.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgMesh</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Meshes</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgMesh[]</type>
            </parameter>
            <parameter>
                <name>Transformations</name>
                <type>com.badlogic.gdx.math.Matrix4[]</type>
            </parameter>
        </method>
        <method>
            <name>InvalidateAllMeshes</name>
            <comment>Invalidates all meshes so the next time they are rendered new VBO handles are generated.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetVertexAttribute</name>
            <comment>Returns the first VertexAttribute having the given usage, or null if no attribute with that usage was found.</comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
            <parameter>
                <name>Usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Copy</name>
            <comment>Copies this mesh.
IsStatic: whether the new mesh is static or not. Allows for internal optimizations.
Returns the copy of this mesh.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgMesh</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetVertices</name>
            <comment>Copies the vertices from the mesh to the float array. The float array must be large enough to hold all the mesh's vertices.
Vertices: the array to copy the vertices to.</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>UnbindS2</name>
            <comment>Unbinds the underlying VertexBufferObject and IndexBufferObject is indices were given. Use this with OpenGL ES 2.0 and when auto-bind is disabled.
Shader: the shader (does not unbind the shader)
Locations: array containing the attribute locations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <parameter>
                <name>Locations</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>Transform</name>
            <comment>Transforms the positions in the mesh. Normals will be kept as is. This is a potentially slow operation, use with care.
It will also create a temporary float() which will be garbage collected.
Matrix: the transformation matrix</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>TransformUV2</name>
            <comment>Transforms the texture coordinates (UV) in the float array. This is a potentially slow operation, use with care.
Matrix: the transformation matrix
Vertices: the float array
VertexSize: the number of floats in each vertex
Offset: the offset within a vertex to the texture location
Start: the vertex to start with
Count: the amount of vertices to transform</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Matrix</name>
                <type>com.badlogic.gdx.math.Matrix3</type>
            </parameter>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>VertexSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Create</name>
            <comment>Create a new Mesh that is a combination of transformations of the supplied base mesh.
Not all primitive types, like line strip and triangle strip, can be combined.
IsStatic: whether this mesh is static or not. Allows for internal optimizations.
Transformations: the transformations to apply to the meshes 
Returns the combined mesh.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgMesh</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Base</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgMesh</type>
            </parameter>
            <parameter>
                <name>Transformations</name>
                <type>com.badlogic.gdx.math.Matrix4[]</type>
            </parameter>
        </method>
        <method>
            <name>GetVertices2</name>
            <comment>Copies the remaining vertices from the Mesh to the float array. The float array must be large enough to hold the remaining vertices.
SrcOffset: the offset (in number of floats) of the vertices in the mesh to copy.
Vertices: the array to copy the vertices to.</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>SrcOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Scales the positions in the mesh. Normals will be kept as is. This is a potentially slow operation, use with care.
It will also create a temporary float() which will be garbage collected.
ScaleX: scale on x
ScaleY: scale on y
ScaleZ: scale on z</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ScaleX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ScaleY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ScaleZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CalculateBoundingBox</name>
            <comment>Calculates the BoundingBox of the vertices contained in this mesh. In case no vertices are defined yet a GdxRuntimeException is thrown. This function creates a new BoundingBox instance.
Returns the bounding box.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new Mesh with the given attributes.
IsStatic: whether this mesh is static or not. Allows for internal optimizations.
MaxVertices: the maximum number of vertices this mesh can hold
MaxIndices: the maximum number of indices this mesh can hold
Attributes: the VertexAttributes. Each vertex attribute defines one property of a vertex such as position, normal or texture coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>MaxVertices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxIndices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Attributes</name>
                <type>com.badlogic.gdx.graphics.VertexAttributes</type>
            </parameter>
        </method>
        <method>
            <name>GetVertices3</name>
            <comment>Copies the specified vertices from the Mesh to the float array. The float array must be large enough to hold count vertices.
SrcOffset: the offset (in number of floats) of the vertices in the mesh to copy.
Count: the amount of floats to copy.
Vertices: the array to copy the vertices to.</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>SrcOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>SetVertices2</name>
            <comment>Sets the vertices of this mesh. The attributes are assumed to be given in float format.
Vertices: the vertices.
Offset: the offset into the vertices array
Count: the number of floats to use</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a new Mesh with the given attributes. Adds extra optimizations for dynamic (frequently modified) meshes.
StaticVertices: whether vertices of this mesh are static or not. Allows for internal optimizations.
StaticIndices: whether indices of this mesh are static or not. Allows for internal optimizations.
MaxVertices: the maximum number of vertices this mesh can hold
MaxIndices: the maximum number of indices this mesh can hold
Attributes: the VertexAttributes. Each vertex attribute defines one property of a vertex such as position, normal or texture coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StaticVertices</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>StaticIndices</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>MaxVertices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxIndices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Attributes</name>
                <type>com.badlogic.gdx.graphics.VertexAttributes</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>BindS2</name>
            <comment>Binds the underlying VertexBufferObject and IndexBufferObject if indices where given. Use this when auto-bind is disabled.
Shader: the shader (does not bind the shader)
Locations: array containing the attribute locations.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <parameter>
                <name>Locations</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new Mesh with the given attributes.
IsStatic: whether this mesh is static or not. Allows for internal optimizations.
MaxVertices: the maximum number of vertices this mesh can hold
MaxIndices: the maximum number of indices this mesh can hold
Attributes: an array of VertexAttribute. Each vertex attribute defines one property of a vertex such as position, normal or texture coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>MaxVertices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxIndices</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Attributes</name>
                <type>com.badlogic.gdx.graphics.VertexAttribute[]</type>
            </parameter>
        </method>
        <method>
            <name>RenderS3</name>
            <comment>Renders the mesh using the given primitive type. Offset specifies the offset into either the vertex buffer or the index
buffer depending on whether indices are defined. Count specifies the number of vertices or indices to use thus count /
#vertices-per-primitive primitives are rendered.
This method will automatically bind each vertex attribute as specified at construction time via VertexAttributes to
the respective shader attributes. The binding is based on the alias defined for each VertexAttribute.
This method must only be called after the lgShaderProgram.Begin method has been called!
Shader: the shader to be used
PrimitiveType: the GL primitive type
Offset: the offset into the vertex or index buffer
Count: number of vertices or indices to use
AutoBind: overrides the AutoBind member of this Mesh</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <parameter>
                <name>PrimitiveType</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>AutoBind</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RenderS2</name>
            <comment>Renders the mesh using the given primitive type. Offset specifies the offset into either the vertex buffer or the index
buffer depending on whether indices are defined. Count specifies the number of vertices or indices to use thus count /
#vertices-per-primitive primitives are rendered.
This method will automatically bind each vertex attribute as specified at construction time via VertexAttributes to
the respective shader attributes. The binding is based on the alias defined for each VertexAttribute.
This method must only be called after the lgShaderProgram.Begin method has been called!
Shader: the shader to be used
PrimitiveType: the GL primitive type
Offset: the offset into the vertex or index buffer
Count: number of vertices or indices to use</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <parameter>
                <name>PrimitiveType</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Frees all resources associated with this mesh</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetIndices2</name>
            <comment>Sets the indices of this mesh.
Indices: the indices
Offset: the offset into the indices array
Count: the number of indices to copy</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Indices</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>BindS</name>
            <comment>Binds the underlying VertexBufferObject and IndexBufferObject if indices where given. Use this when auto-bind is disabled.
Shader: the shader (does not bind the shader)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
        </method>
        <method>
            <name>RenderS</name>
            <comment>Renders the mesh using the given primitive type. If indices are set for this mesh then NumIndices / #vertices-per-
primitive primitives are rendered. If no indices are set then NumVertices / #vertices-per-primitive primitives are
rendered.
This method will automatically bind each vertex attribute as specified at construction time via VertexAttributes to
the respective shader attributes. The binding is based on the alias defined for each VertexAttribute.
This method must only be called after the lgShaderProgram.Begin method has been called!
Shader: the shader to be used
PrimitiveType: the GL primitive type</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Shader</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgShaderProgram</type>
            </parameter>
            <parameter>
                <name>PrimitiveType</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ExtendBoundingBox2</name>
            <comment>Extends the specified BoundingBox with the specified part.
Out: the bounding box to store the result in.
Offset: the start index of the part.
Count: the amount of indices the part contains. 
Returns the value specified by Out.</comment>
            <returntype>com.badlogic.gdx.math.collision.BoundingBox</returntype>
            <parameter>
                <name>Out</name>
                <type>com.badlogic.gdx.math.collision.BoundingBox</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>UpdateVertices</name>
            <comment>Updates (a portion of) the vertices. Does not resize the backing buffer.
TargetOffset: the offset in number of floats of the mesh part.
Source: the vertex data to update the mesh part with</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TargetOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Source</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>UpdateVertices2</name>
            <comment>Updates (a portion of) the vertices. Does not resize the backing buffer.
TargetOffset: the offset in number of floats of the mesh part.
Source: the vertex data to update the mesh part with
SourceOffset: the offset in number of floats within the source array
Count: the number of floats to update</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TargetOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Source</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>SourceOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Copy2</name>
            <comment>Copies this mesh optionally removing duplicate vertices and/or reducing the amount of attributes.
IsStatic: whether the new mesh is static or not. Allows for internal optimizations.
RemoveDuplicates: whether to remove duplicate vertices if possible. Only the vertices specified by usage are checked.
Usage: which attributes (if available) to copy
Returns the copy of this mesh.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgMesh</returntype>
            <parameter>
                <name>IsStatic</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>RemoveDuplicates</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Usage</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>GetIndices</name>
            <comment>Copies the indices from the mesh to the short array. The short array must be large enough to hold all the mesh's indices.
Indices: the array to copy the indices to</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Indices</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>SetVertices</name>
            <comment>Sets the vertices of this mesh. The attributes are assumed to be given in float format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertices</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>GetIndices2</name>
            <comment>Copies the indices from the mesh to the short array. The short array must be large enough to hold DestOffset + all the mesh's indices.
Indices: the array to copy the indices to
DestOffset: the offset in the indices array to start copying</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Indices</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>DestOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CalculateRadius</name>
            <comment>Calculates the squared radius of the bounding sphere around the specified center for the specified part.
CenterX: The X coordinate of the center of the bounding sphere
CenterY: The Y coordinate of the center of the bounding sphere
CenterZ: The Z coordinate of the center of the bounding sphere</comment>
            <returntype>float</returntype>
            <parameter>
                <name>CenterX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetIndices</name>
            <comment>Sets the indices of this mesh.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Indices</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>CalculateRadius3</name>
            <comment>Calculates the squared radius of the bounding sphere around the specified center for the specified part.
CenterX: The X coordinate of the center of the bounding sphere
CenterY: The Y coordinate of the center of the bounding sphere
CenterZ: The Z coordinate of the center of the bounding sphere
Offset: the start index of the part.
Count: the amount of indices the part contains.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>CenterX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Transform</name>
                <type>com.badlogic.gdx.math.Matrix4</type>
            </parameter>
        </method>
        <method>
            <name>CalculateRadius2</name>
            <comment>Calculates the squared radius of the bounding sphere around the specified center for the specified part.
CenterX: The X coordinate of the center of the bounding sphere
CenterY: The Y coordinate of the center of the bounding sphere
CenterZ: The Z coordinate of the center of the bounding sphere
Offset: the start index of the part.
Count: the amount of indices the part contains.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>CenterX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>CenterZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Count</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>ManagedStatus</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NumVertices</name>
            <returntype>int</returntype>
            <comment>Returns the number of defined vertices.</comment>
        </property>
        <property>
            <name>VertexSize</name>
            <returntype>int</returntype>
            <comment>Returns the size of a single vertex in bytes.</comment>
        </property>
        <property>
            <name>MaxVertices</name>
            <returntype>int</returntype>
            <comment>Returns the maximum number of vertices this mesh can hold.</comment>
        </property>
        <property>
            <name>NumIndices</name>
            <returntype>int</returntype>
            <comment>Returns the number of defined indices.</comment>
        </property>
        <property>
            <name>IndicesBuffer</name>
            <returntype>java.nio.ShortBuffer</returntype>
            <comment>Returns the backing shortbuffer holding the indices.</comment>
        </property>
        <property>
            <name>MaxIndices</name>
            <returntype>int</returntype>
            <comment>Returns the maximum number of indices this mesh can hold.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.Mesh</returntype>
            <comment></comment>
        </property>
        <property>
            <name>VerticesBuffer</name>
            <returntype>java.nio.FloatBuffer</returntype>
            <comment>Returns the backing FloatBuffer holding the vertices.</comment>
        </property>
        <property>
            <name>AutoBind</name>
            <parameter>
                <name>AutoBind</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether to bind the underlying VertexArray or VertexBufferObject automatically on a call to one of the
 render functions. Usually you want to use autobind. Manual binding is an expert functionality. There is a driver bug on the
 MSM720xa chips that will fuck up memory if you manipulate the vertices and indices of a Mesh multiple times while it is
 bound. Keep this in mind.</comment>
        </property>
        <property>
            <name>VertexAttributes</name>
            <returntype>com.badlogic.gdx.graphics.VertexAttributes</returntype>
            <comment>Returns the vertex attributes of this Mesh.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgGraphics</name>
        <shortname>lgGraphics</shortname>
        <owner>process</owner>
        <method>
            <name>RequestRendering</name>
            <comment>Requests a new frame to be rendered if the rendering mode is non-continuous. This method can be called from any thread.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SupportsExtension</name>
            <comment>Returns whether the OpenGL extension is supported.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Extension</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsFullscreen</name>
            <comment>Returns whether the app is fullscreen or not.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClearManagedCaches</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>RawDeltaTime</name>
            <returntype>float</returntype>
            <comment>Returns the time span between the current frame and the last frame in seconds, without smoothing.</comment>
        </property>
        <property>
            <name>PpiX</name>
            <returntype>float</returntype>
            <comment>Returns the pixels per inch on the x-axis.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment>Returns the height in pixels of the display surface.</comment>
        </property>
        <property>
            <name>PpcY</name>
            <returntype>float</returntype>
            <comment>Returns the pixels per centimeter on the y-axis.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>T</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ContinuousRendering</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>IsContinuous</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether to render continuously. In case rendering is performed non-continuously, the following events will trigger a redraw:
 - a call to RequestRendering;
 - input events from the touch screen or keyboard;
 - a call to CallSubUI.
 This method can be called from any thread.</comment>
        </property>
        <property>
            <name>FramesPerSecond</name>
            <returntype>int</returntype>
            <comment>Returns the average number of frames per second.</comment>
        </property>
        <property>
            <name>PpcX</name>
            <returntype>float</returntype>
            <comment>Returns the pixels per centimeter on the x-axis.</comment>
        </property>
        <property>
            <name>View</name>
            <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DeltaTime</name>
            <returntype>float</returntype>
            <comment>Returns the time span between the current frame and the last frame in seconds. Might be smoothed over n frames.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment>Returns the width in pixels of the display surface.</comment>
        </property>
        <property>
            <name>PpiY</name>
            <returntype>float</returntype>
            <comment>Returns the pixels per inch on the y-axis.</comment>
        </property>
        <property>
            <name>GL20</name>
            <returntype>com.badlogic.gdx.graphics.GL20</returntype>
            <comment>Returns the GL20 instance.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgGL</name>
        <shortname>lgGL</shortname>
        <owner>process</owner>
        <method>
            <name>glUniform3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glReleaseShaderCompiler</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glGetActiveUniform</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttribPointer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>normalized</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ptr</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glClearDepthf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>depth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetBufferParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCompressedTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>imageSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferTexture2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetBooleanv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glBindFramebuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDisable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glScissor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glActiveTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sfactor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dfactor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPixelStorei</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glLinkProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetError</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glTexParameteri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glClearStencil</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>s</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glEnableVertexAttribArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawElements</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indices</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribPointerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glDisableVertexAttribArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindAttribLocation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteRenderbuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glFinish</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glVertexAttrib4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib1fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glLineWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glStencilOp</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zfail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zpass</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetAttachedShaders</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>maxcount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>shaders</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderPrecisionFormat</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadertype</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>precisiontype</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>range</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>precision</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDetachShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetActiveAttrib</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glDrawArrays</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glRenderbufferStorage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBufferSubData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glDepthRangef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glStencilMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenRenderbuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glClearColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glColorMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glGetIntegerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glBindTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteFramebuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glSampleCoverage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>invert</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glCreateShader</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetFloatv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glClear</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCompressedTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>imageSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glShaderBinary</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shaders</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
            <parameter>
                <name>binaryformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>binary</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>length</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGenFramebuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetProgramiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glCullFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetFramebufferAttachmentParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glViewport</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDepthFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetRenderbufferParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glBindRenderbuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPolygonOffset</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>factor</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferRenderbuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffertarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetProgramInfoLog</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib2f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformiv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetAttribLocation</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glIsFramebuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glStencilFuncSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCompileShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsBuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glShaderSource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glReadPixels</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glBufferData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>java.nio.Buffer</type>
            </parameter>
            <parameter>
                <name>usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glStencilFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib3f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glAttachShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib4fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glIsProgram</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glIsRenderbuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetUniformLocation</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>glFlush</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glGetTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glStencilMaskSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCreateProgram</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glIsShader</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glValidateProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniformMatrix3fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>transpose</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glGetVertexAttribfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib2fv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glStencilOpSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zfail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zpass</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFuncSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>srcRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcAlpha</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsTexture</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetShaderInfoLog</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pixels</name>
                <type>java.nio.Buffer</type>
            </parameter>
        </method>
        <method>
            <name>glUseProgram</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>program</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenerateMipmap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindBuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexAttrib1f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>indx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.FloatBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glDepthMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquationSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>modeRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>modeAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform2iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glFrontFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCheckFramebufferStatus</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glEnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform3iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <method>
            <name>glUniform1i</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteShader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shader</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glUniform4iv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>location</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>v</name>
                <type>java.nio.IntBuffer</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.GL20</returntype>
            <comment></comment>
        </property>
        <field>
            <name>GL20_DITHER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_TEXTURE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DEPTH_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TRIANGLE_FAN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TRUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DONT_CARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DEPTH_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINE_LOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FRONT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_INCOMPLETE_ATTACHMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DIFFUSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_VERSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE8_RGB5_A1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_COORD_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LUMINANCE_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NORMALIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FASTEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COPY_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OES_VERSION_1_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_TEXTURE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SMOOTH_LINE_WIDTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INCR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_COMPONENT16</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_IMPLEMENTATION_COLOR_READ_FORMAT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POLYGON_OFFSET_FACTOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_PASS_DEPTH_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COLOR_ATTACHMENT0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_PROJECTION_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNSIGNED_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STREAM_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_EQUATION_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINE_WIDTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_GREEN_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ALPHA_TEST_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALPHA_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CCW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_NORMAL_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_ALPHA_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNPACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CLAMP_TO_EDGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DECR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_REPLACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SMOOTH_POINT_SIZE_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SAMPLE_COVERAGE_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_PASS_DEPTH_PASS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INVALID_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_AND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_STENCIL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_INVALID_ENUM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_BLEND_SRC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_DEPTH_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NOTEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_VALUE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE16</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TRIANGLE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE17</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE18</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_INTERNAL_FORMAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE19</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE12</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE13</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE14</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE15</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ZERO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRONT_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_XOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_INDEX8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHADER_COMPILER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_BUFFER_USAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BUFFER_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BOOL_VEC2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINEAR_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE20</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_NORMAL_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LOW_INT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BOOL_VEC4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE22</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BOOL_VEC3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE21</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STATIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE29</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE27</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE28</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE25</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE26</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_MAX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE23</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERTEX_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE24</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DEPTH_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OES_point_size_array</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_UNSUPPORTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_KEEP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DOT3_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ATTACHED_SHADERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TRIANGLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FUNC_ADD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE31</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE30</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SAMPLE_ALPHA_TO_ONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_PRIMARY_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NOTEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE4_RGB5_A1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VENDOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SPOT_EXPONENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INVALID_OPERATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MEDIUM_INT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_LOGIC_OP_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_MODELVIEW_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SCISSOR_BOX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GENERATE_MIPMAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MULTISAMPLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ZERO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RED_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_VALUE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SPECULAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NICEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POINT_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLER_CUBE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_CONSTANT_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RGBA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VIEWPORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CULL_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POINT_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_PROGRAM_POINT_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BOOL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BUFFER_USAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SPOT_DIRECTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_GREEN_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DOT3_RGBA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_ARRAY_POINTER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_PROJECTION_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ACTIVE_UNIFORMS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_MAX_ANISOTROPY_EXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_OUT_OF_MEMORY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_STACK_OVERFLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NAND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TRUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SAMPLE_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINE_LOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNSIGNED_SHORT_4_4_4_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STATIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CONSTANT_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE8_RGB8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERTEX_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_INTERPOLATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_RGB_SCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_HIGH_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_CUBE_MAP_TEXTURE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_DST_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_IMPLEMENTATION_COLOR_READ_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC2_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COORD_REPLACE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ALIASED_LINE_WIDTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POLYGON_OFFSET_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MODELVIEW_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COMBINE_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRONT_AND_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ELEMENT_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE8_RGBA8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_BINDING_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_STACK_UNDERFLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNSIGNED_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE9</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_COORD_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_STENCIL_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FALSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC0_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINEAR_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_TEXTURE_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_BLEND_DST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DYNAMIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_GENERATE_MIPMAP_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_PACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_POLYGON_OFFSET_FACTOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EQUIV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COLOR_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE10</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_ELEMENTS_VERTICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ACTIVE_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE11</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_VIEWPORT_DIMS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MODELVIEW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_PASS_DEPTH_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_VEC2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COLOR_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_VEC4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_VEC3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OR_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_MIN_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_INCR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND1_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC2_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FRONT_AND_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POINTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_DENSITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE8_RGBA4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ELEMENT_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_BLUE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LUMINANCE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ES_VERSION_2_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EXTENSIONS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIP_PLANE3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINE_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_TEXTURE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINE_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHADER_SOURCE_LENGTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_WRAP_T</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_WRAP_S</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINEAR_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE4_R5_G6_B5_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_NORMAL_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLE_BUFFERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ONE_MINUS_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_RED_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_MAG_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CURRENT_PROGRAM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ACTIVE_ATTRIBUTES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_EQUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NEAREST_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_NORMAL_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ACTIVE_ATTRIBUTE_MAX_LENGTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE4_RGB8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MAX_ELEMENTS_INDICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_VARYING_VECTORS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FUNC_REVERSE_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHTING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_PASS_DEPTH_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INVALID_ENUM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_RENDERBUFFER_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLE_COVERAGE_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_BUFFER_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNPACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRONT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CLEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_ARRAY_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_INDEX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ACTIVE_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_VIEWPORT_DIMS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_INCOMPLETE_DIMENSIONS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CONSTANT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_VERTEX_UNIFORM_VECTORS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_RED_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RGBA4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE4_RGBA4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_ARRAY_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_COMPONENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_INT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DYNAMIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LUMINANCE_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CULL_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_VENDOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FLAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NEAREST_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLE_ALPHA_TO_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_NORMALIZED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SUBPIXEL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_BINDING_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_HEIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_GREEN_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_PREVIOUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_GEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_BLUE_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PROJECTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ELEMENT_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OUT_OF_MEMORY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CURRENT_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_COORD_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_TEXTURE_IMAGE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CURRENT_VERTEX_ATTRIB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_INVALID_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NO_ERROR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CURRENT_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_IMPLEMENTATION_COLOR_READ_FORMAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LUMINANCE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_GREATER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC1_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERTEX_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_STENCIL_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_REPEAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DELETE_STATUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MODELVIEW_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PERSPECTIVE_CORRECTION_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COPY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ALPHA_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_EXTENSIONS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TRIANGLE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_LIGHTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_ARRAY_BUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OR_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_RGBA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_INVALID_OPERATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_REPLACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DEPTH_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COMBINE_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNSIGNED_SHORT_5_6_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ELEMENT_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SCISSOR_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_MAT2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_NEGATIVE_X</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_MAT4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FLOAT_MAT3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TRIANGLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FALSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_PASS_DEPTH_PASS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_NEGATIVE_Y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_NEGATIVE_Z</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FASTEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INVALID_FRAMEBUFFER_OPERATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_FRONT_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COLOR_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CLAMP_TO_EDGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_COORD_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_ARRAY_STRIDE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ADD_SIGNED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NUM_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MATRIX_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHADING_LANGUAGE_VERSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COMBINE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_STENCIL_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_ENV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SAMPLE_COVERAGE_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SPOT_CUTOFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EXP2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COLOR_MATERIAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHADER_BINARY_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INT_VEC3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INT_VEC2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SHADE_MODEL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ALPHA_TEST_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INT_VEC4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ONE_MINUS_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POLYGON_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OES_point_sprite</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALIASED_LINE_WIDTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLER_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_VERTEX_ATTRIBS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_EXP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COMPILE_STATUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OES_read_format</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TRIANGLE_FAN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_DISTANCE_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_SRC_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_POLYGON_OFFSET_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NICEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_EQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_MAG_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CCW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VALIDATE_STATUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_IMPLEMENTATION_COLOR_READ_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SCISSOR_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SAMPLE_BUFFERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DEPTH_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_LINE_WIDTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COLOR_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_VERTEX_TEXTURE_IMAGE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CONSTANT_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_GENERATE_MIPMAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_OES_compressed_paletted_texture</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_PASS_DEPTH_PASS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_ATTACHMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT_MODEL_TWO_SIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_DEPTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MEDIUM_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SAMPLE_ALPHA_TO_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_GEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_RENDERER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_STENCIL_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_UNSIGNED_SHORT_5_5_5_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_POLYGON_OFFSET_FILL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SHININESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COLOR_LOGIC_OP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC1_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_REPEAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHADER_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_SHORT_5_5_5_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NUM_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MAX_ELEMENTS_VERTICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MODULATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALPHA_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NORMAL_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_SHORT_5_6_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POSITION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VIEWPORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND0_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_POSITIVE_X</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_SHADER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FOG_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLE_COVERAGE_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_BINDING_CUBE_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SRC_ALPHA_SATURATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_AMBIENT_AND_DIFFUSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND1_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INCR_WRAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FUNC_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERTEX_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DONT_CARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FIXED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_POSITIVE_Z</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_CUBE_MAP_POSITIVE_Y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_QUADRATIC_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_UNSIGNED_SHORT_4_4_4_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ADD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_AND_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SRC_ALPHA_SATURATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_AMBIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_COMBINED_TEXTURE_IMAGE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_AND_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ONE_MINUS_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SRC0_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ONE_MINUS_CONSTANT_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_ENV_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERTEX_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ONE_MINUS_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_COLOR_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SPRITE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_HIGH_INT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAGMENT_SHADER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ACTIVE_UNIFORM_MAX_LENGTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_KEEP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DEPTH_ATTACHMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_ALIASED_POINT_SIZE_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CURRENT_TEXTURE_COORDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_MAX_CLIP_PLANES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NEAREST_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINEAR_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OES_VERSION_1_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CULL_FACE_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RGB5_A1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_COORD_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_RESCALE_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE4_RGBA8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RGB565</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NO_ERROR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND2_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_WRAP_T</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_WRAP_S</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DECAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_COMPLETE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_POINTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_FRAGMENT_UNIFORM_VECTORS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CONSTANT_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_NEAREST_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERSION_ES_CL_1_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SUBPIXEL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_GREATER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERSION_ES_CL_1_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_CLIENT_ACTIVE_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_SAMPLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POLYGON_OFFSET_FILL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE_ENV_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND0_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_COORD_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE31</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE30</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_FILL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_GENERATE_MIPMAP_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_TEXTURE_MIN_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DEPTH_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERBUFFER_WIDTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_PROJECTION_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE28</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE29</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE26</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SCISSOR_BOX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE27</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE24</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE25</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE22</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE23</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_ALIASED_POINT_SIZE_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ALPHA_SCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLEND_EQUATION_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LIGHT_MODEL_AMBIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE21</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE20</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_LINEAR_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_SAMPLE_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_BLEND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_POLYGON_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_CULL_FACE_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_STENCIL_BACK_VALUE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_CW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE19</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DECR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LOW_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERSION_ES_CM_1_0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_VERSION_ES_CM_1_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_VERTEX_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE11</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_RENDERER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE12</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MIRRORED_REPEAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE13</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE14</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_OPERAND2_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE15</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE16</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE17</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE18</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_DECR_WRAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_MAX_TEXTURE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_INFO_LOG_LENGTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COLOR_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE10</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_PALETTE8_R5_G6_B5_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COVERAGE_BUFFER_BIT_NV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_MAX_ELEMENTS_INDICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_SIZE_MIN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_LINK_STATUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERTEX_ATTRIB_ARRAY_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE9</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_BLUE_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_TEXTURE_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_NUM_SHADER_BINARY_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_DITHER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL11_POINT_FADE_THRESHOLD_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL20_VERSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL10_TEXTURE2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgFrameBuffer</name>
        <shortname>lgFrameBuffer</shortname>
        <owner>process</owner>
        <method>
            <name>End2</name>
            <comment>Unbinds the framebuffer and sets the viewport sizes. All drawing will be performed to the normal framebuffer from here on.
X: the X-axis position of the viewport in pixels
Y: the Y-axis position of the viewport in pixels
Width: the width of the viewport in pixels
Height: the height of the viewport in pixels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new FrameBuffer object having the given dimensions and no depth buffer attached.
Format: the format of the color buffer; one of the FORMAT constants
Width: the width of the framebuffer in pixels
Height: the height of the framebuffer in pixels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Format</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>End</name>
            <comment>Unbinds the framebuffer. All drawing will be performed to the normal framebuffer from here on.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Releases all resources associated with this framebuffer.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>InitializeWithDepthBufferAttached</name>
            <comment>Creates a new FrameBuffer object having the given dimensions and a depth buffer attached.
Format: the format of the color buffer; one of the FORMAT constants
Width: the width of the framebuffer in pixels
Height: the height of the framebuffer in pixels</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Format</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Unbind</name>
            <comment>Unbinds the framebuffer. All drawing will be performed to the normal framebuffer from here on.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetDefaultFrameBufferPixmap</name>
            <comment>Returns a portion of the default framebuffer contents specified by X, Y, Width and Height, as a Pixmap (RGBA8888 format).
Because of differences in screen and image origins the framebuffer contents should be flipped along the Y axis if you intend
to save the Pixmap to disk. Flipping is not a cheap operation, so use this functionality wisely.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>FlipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Bind</name>
            <comment>Makes the framebuffer current so everything gets drawn to it.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetDefaultFrameBufferPixels</name>
            <comment>Returns a portion of the default framebuffer contents specified by X, Y, Width and Height, as a byte() array with a length
equal to the specified width * height * 4. The array will always contain RGBA8888 data. If the width and height specified
are larger than the framebuffer dimensions, the texture will be padded accordingly. Pixels that fall outside of the current
screen will have RGBA values of 0. Because of differences in screen and image origins the framebuffer contents should be
flipped along the Y axis if you intend to save them to disk as a bitmap. Flipping is not a cheap operation, so use this
functionality wisely.</comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>FlipY</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Begin</name>
            <comment>Binds the framebuffer and sets the viewport accordingly, so everything gets drawn to it.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>ManagedStatus</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ColorBufferTexture</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTexture</returntype>
            <comment>Returns the color buffer texture.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <comment>Returns the height of the framebuffer in pixels.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <comment>Returns the width of the framebuffer in pixels.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.glutils.FrameBuffer</returntype>
            <comment></comment>
        </property>
        <field>
            <name>FORMAT_RGB565</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_RGBA8888</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_RGBA4444</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
        <field>
            <name>FORMAT_RGB888</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Pixmap.Format</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgDecalBatch</name>
        <shortname>lgDecalBatch</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the batch renderer for lgDecal objects.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Flush</name>
            <comment>Flushes this batch, sending all contained decals to GL. After flushing the batch is empty once again.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispose</name>
            <comment>Frees up memory by dropping the buffer and underlying resources.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Add</name>
            <comment>Adds a decal to the batch, marking it for later rendering.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Decal</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgDecal</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes the batch renderer with the given amount of decal objects the buffer is able to hold when full.
Size: Maximum size of decal objects to hold in memory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>GroupStrategy</name>
            <parameter>
                <name>GroupStrategy</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Sets the GroupStrategy to use.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g3d.decals.DecalBatch</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Size</name>
            <returntype>int</returntype>
            <comment>Returns the maximum amount of decal objects this buffer can hold in memory.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgDecal</name>
        <shortname>lgDecal</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a decal assuming the dimensions of the given texture region.
HasTransparency: Whether or not this decal will be treated as having transparency.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>HasTransparency</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>TranslateZ</name>
            <comment>Moves by the specified amount of units along the Z axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TranslateX</name>
            <comment>Moves by the specified amount of units along the X axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TranslateY</name>
            <comment>Moves by the specified amount of units along the Y axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>LookAt</name>
            <comment>Sets the rotation of the decal to face the given point. Useful for billboarding.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <parameter>
                <name>Up</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
        </method>
        <method>
            <name>SetBlending</name>
            <comment>Sets the blending parameters for this decal.
SrcBlendFactor: Source blend factor used by glBlendFunc.
DstBlendFactor: Destination blend factor used by glBlendFunc.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>SrcBlendFactor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>DstBlendFactor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Translates by the specified amount of units.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetDimensions</name>
            <comment>Sets the width and height in world units.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Sets the scale along both the X and Y axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Scale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a decal with the given texture region.
Width: Width of the decal in world units.
Height: Height of the decal in world units.
HasTransparency: Whether or not this decal will be treated as having transparency.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>HasTransparency</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a decal with the given texture region.
Width: Width of the decal in world units.
Height: Height of the decal in world units.
SrcBlendFactor: Source blend used by glBlendFunc
DstBlendFactor: Destination blend used by glBlendFunc</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>SrcBlendFactor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>DstBlendFactor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color of all four vertices to the specified color.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>TextureRegion</name>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <comment>Sets the texture region.</comment>
        </property>
        <property>
            <name>RotationZ</name>
            <returntype>float</returntype>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the angle (in degrees) of rotation on the local Z axis.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>float</returntype>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the height in world units.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g3d.decals.Decal</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment>Returns the vertex array backing the decal. It should under no circumstances be modified.</comment>
        </property>
        <property>
            <name>RotationY</name>
            <returntype>float</returntype>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the angle (in degrees) of rotation on the local Y axis.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>Tint</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Sets the color used to tint this decal. Default is White.</comment>
        </property>
        <property>
            <name>RotationX</name>
            <returntype>float</returntype>
            <parameter>
                <name>Angle</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the angle (in degrees) of rotation on the local X axis.</comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>com.badlogic.gdx.math.Vector3</returntype>
            <parameter>
                <name>vecPosition</name>
                <type>com.badlogic.gdx.math.Vector3</type>
            </parameter>
            <comment>Gets/sets the position of this decal.</comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>float</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the width in world units.</comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the position on the Y axis.</comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the position on the X axis.</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleX</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the scale on the X axis.</comment>
        </property>
        <property>
            <name>Z</name>
            <returntype>float</returntype>
            <parameter>
                <name>Z</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the position on the Z axis.</comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <parameter>
                <name>scaleY</name>
                <type>float</type>
            </parameter>
            <comment>Gets/sets the scale on the Y axis.</comment>
        </property>
        <field>
            <name>Y3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>V2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>V3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>V4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>C4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>C3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>V1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>U4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>U3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>U2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>U1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Z1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>C1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>C2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Z4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Z3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Z2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgBitmapFontCache</name>
        <shortname>lgBitmapFontCache</shortname>
        <owner>process</owner>
        <method>
            <name>Clear</name>
            <comment>Removes all glyphs in the cache.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColors</name>
            <comment>Sets the color of all text currently in the cache. Does not affect subsequently added text.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>SetPosition</name>
            <comment>Sets the position of the text, relative to the position when the cached text was created.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetWrappedText</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text, which may contain newlines (CRLF) and is automatically wrapped within the specified width.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetText2</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text.
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Start: The first character of the string to draw.
End: The last character of the string to draw (exclusive).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Translate</name>
            <comment>Sets the position of the text, relative to its current position.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>X_amount</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y_amount</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a new BitmapFontCache.
Font: The font to use.
Integer: Whether to use integer positions and sizes.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
            <parameter>
                <name>Integer</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddMultiLineText</name>
            <comment>Adds glyphs for the specified text, which may contain newlines (CRLF).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new BitmapFontCache. It caches glyph geometry for a BitmapFont, providing a fast way to render static text. This saves needing to compute the location of each glyph each frame.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</type>
            </parameter>
        </method>
        <method>
            <name>SetColors2</name>
            <comment>Sets the color of the specified characters. This may only be called after SetText and is reset every time SetText is called.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Draw2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddWrappedText</name>
            <comment>Adds glyphs for the specified text, which may contain newlines (CRLF) and is automatically wrapped within the specified width.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetText</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddText2</name>
            <comment>Adds glyphs for the specified text.
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Start: The first character of the string to draw.
End: The last character of the string to draw (exclusive).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetWrappedText2</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text, which may contain newlines (CRLF) and is automatically wrapped within the specified width.
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Alignment: The horizontal alignment for the wrapped line. One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>SetColorsRGBA</name>
            <comment>Sets the color of all text currently in the cache. Does not affect subsequently added text.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetMultiLineText2</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text, which may contain newlines (CRLF).
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Alignment: The horizontal alignment. One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AlignmentWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>SetMultiLineText</name>
            <comment>Clears any cached glyphs and adds glyphs for the specified text, which may contain newlines (CRLF).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>AlphaModulation</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddWrappedText2</name>
            <comment>Adds glyphs for the specified text, which may contain newlines (CRLF) and is automatically wrapped within the specified width.
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Alignment: The horizontal alignment for the wrapped line. One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>AddMultiLineText2</name>
            <comment>Adds glyphs for the specified text, which may contain newlines (CRLF).
X: The X position for the left most character.
Y: The Y position for the top of most capital letters in the font (the cap height).
Alignment: The horizontal alignment. One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AlignmentWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>AddText</name>
            <comment>Adds glyphs for the specified text.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetBounds</name>
            <comment>Returns the size of the cached string. The height is the distance from the top of most capital letters in the font (the cap height) to the baseline of the last line of text.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color of subsequently added text. Does not affect text currently in the cache.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>UseIntegerPositions</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>integer</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this font uses integer positions for drawing. Default is to use them so filtering doesn't kick in as badly.</comment>
        </property>
        <property>
            <name>Font</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment>Returns the Y position of the cached string, relative to the position when the string was cached.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.BitmapFontCache</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Vertices</name>
            <returntype>float[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment>Returns the X position of the cached string, relative to the position when the string was cached.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color of subsequently added text. Does not affect text currently in the cache.</comment>
        </property>
        <field>
            <name>ALIGNMENT_Right</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
        <field>
            <name>ALIGNMENT_Left</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
        <field>
            <name>ALIGNMENT_Center</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</name>
        <shortname>lgBitmapFont</shortname>
        <owner>process</owner>
        <method>
            <name>DrawWrapped2</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position with the specified color. Each line is automatically wrapped within the specified width and the color is changed for the following drawing operations.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>DrawMultiLine</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawWrapped3</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position. Each line is automatically wrapped within the specified width.
Alignment: One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>DrawWrapped</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position. Each line is automatically wrapped within the specified width.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>DrawMultiLine3</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position.
AlignmentWidth: The width to consider for alignment.
Alignment: One of the ALIGNMENT constants.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>AlignmentWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Alignment</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</type>
            </parameter>
        </method>
        <method>
            <name>DrawMultiLine2</name>
            <comment>Draws a string, which may contain newlines (CRLF), at the specified position with the specified color. The color is changed for the following drawing operations.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>GetWrappedBounds</name>
            <comment>Returns the bounds of the specified text, which may contain newlines and is wrapped within the specified width. Note the returned TextBounds instance is reused.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>WrapWidth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetTextureFilter</name>
            <comment>Sets the filters of the font texture.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
        </method>
        <method>
            <name>Initialize4</name>
            <comment>Creates a BitmapFont with the glyphs relative to the specified region. If the region is null, the glyph textures are loaded from the image file given in the font file. The Dispose method will not dispose the region's texture in this case!
Region: The texture region containing the glyphs. The glyphs must be relative to the lower left corner (ie, the region should not be flipped). If the region is null the glyph images are loaded from the image path in the font file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FontFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>Initialize5</name>
            <comment>Creates a BitmapFont with the glyphs relative to the specified region. If the region is null, the glyph textures are loaded from the image file given in the font file. The Dispose method will not dispose the region's texture in this case!
Region: The texture region containing the glyphs. The glyphs must be relative to the lower left corner (ie, the region should not be flipped). If the region is null the glyph images are loaded from the image path in the font file.
Flip: If true, the glyphs will be flipped for use with a perspective where 0,0 is the upper left corner.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FontFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Region</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
            <parameter>
                <name>Flip</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Scale</name>
            <comment>Scales the font by the specified amount in both directions.
Note that smoother scaling can be achieved if the texture backing the BitmapFont is using FILTER_Linear (default = FILTER_Nearest).
Throws an IllegalArgument exception when ScaleXY is zero.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ScaleXY</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment>Draws a string at the specified position.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates a BitmapFont from a BMFont file. The image file name is read from the BMFont file and the image is loaded from the same directory.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FontFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates a BitmapFont from a BMFont file, using the specified image for glyphs. Any image specified in the BMFont file is ignored.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FontFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>ImageFile</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ComputeVisibleGlyphs</name>
            <comment>Returns the number of glyphs from the substring that can be rendered in the specified width.
Start: The first character of the string.
End: The last character of the string (exclusive).</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>AvailableWidth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a BitmapFont using the default 15pt Arial font included in the library. This is convenient to easily display text without bothering with generating a bitmap font.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw3</name>
            <comment>Draws a string at the specified position.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes the texture used by this BitmapFont's region if this BitmapFont created the texture.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw2</name>
            <comment>Draws a string at the specified position with the specified color. The color is changed for the following drawing operations.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>SpriteBatch</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgSpriteBatch</type>
            </parameter>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>X</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>GetMultiLineBounds</name>
            <comment>Returns the bounds of the specified text, which may contain newlines. Note the returned TextBounds instance is reused.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>ContainsCharacter</name>
            <comment>Returns true if the character is contained in this font.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Character</name>
                <type>char</type>
            </parameter>
        </method>
        <method>
            <name>GetBounds</name>
            <comment>Returns the bounds of the specified text. Note the returned TextBounds instance is reused.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>GetBounds2</name>
            <comment>Returns the bounds of the specified text. Note the returned TextBounds instance is reused.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</returntype>
            <parameter>
                <name>Str</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColorRGBA</name>
            <comment>Sets the color of this font.
R: Red, from 0 to 1
G: Green, from 0 to 1
B: Blue, from 0 to 1
A: Alpha, from 0 to 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>R</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>G</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>B</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>A</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>FixedWidthGlyphs</name>
            <parameter>
                <name>Glyphs</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Makes the specified glyphs fixed width. This can be useful to make the numbers in a font fixed width. Eg, when horizontally centering a score or loading percentage text, it will not jump around as different numbers are shown.</comment>
        </property>
        <property>
            <name>UseIntegerPositions</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>integer</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this font uses integer positions for drawing. Default is to use them so filtering doesn't kick in as badly.</comment>
        </property>
        <property>
            <name>CapHeight</name>
            <returntype>float</returntype>
            <comment>Returns the cap height, which is the distance from the top of most uppercase characters to the baseline. Since the drawing position is the cap height of the first line, the cap height can be used to get the location of the baseline.</comment>
        </property>
        <property>
            <name>Ascent</name>
            <returntype>float</returntype>
            <comment>Returns the ascent, which is the distance from the cap height to the top of the tallest glyph.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.BitmapFont</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LineHeight</name>
            <returntype>float</returntype>
            <comment>Returns the line height, which is the distance from one line of text to the next.</comment>
        </property>
        <property>
            <name>SpaceWidth</name>
            <returntype>float</returntype>
            <comment>Returns the width of the space character.</comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>Color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment>Gets or sets the color of this font.</comment>
        </property>
        <property>
            <name>Descent</name>
            <returntype>float</returntype>
            <comment>Returns the descent, which is the distance from the bottom of the glyph that extends the lowest to the baseline. This number is negative.</comment>
        </property>
        <property>
            <name>XHeight</name>
            <returntype>float</returntype>
            <comment>Returns the X-height, which is the distance from the top of most lowercase characters to the baseline.</comment>
        </property>
        <property>
            <name>Region</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OwnsTexture</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>integer</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether this font owns the texture. In case it does, the font will also dispose of the texture when Dispose is called. Use with care!</comment>
        </property>
        <property>
            <name>ScaleX</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ScaleY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <field>
            <name>FILTER_Linear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapNearestNearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapLinearLinear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapNearestLinear</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>ALIGNMENT_Right</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
        <field>
            <name>FILTER_MipMap</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_MipMapLinearNearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>FILTER_Nearest</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</returntype>
        </field>
        <field>
            <name>ALIGNMENT_Left</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
        <field>
            <name>ALIGNMENT_Center</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont.lgTextBounds</name>
        <shortname>lgBitmapFontTextBounds</shortname>
        <owner>process</owner>
        <field>
            <name>Height</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>Width</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.lgAnimation</name>
        <shortname>lgAnimation</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs an animation.
An Animation stores a list of TextureRegions representing an animated sequence, e.g. for running or jumping. Each region of an Animation is called a key frame; multiple key frames make up the animation.
FrameDuration: The time between frames in seconds.
KeyFrames: The TextureRegions representing the frames.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FrameDuration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeyFrames</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[]</type>
            </parameter>
        </method>
        <method>
            <name>IsAnimationFinished</name>
            <comment>Returns whether the animation would be finished if played without looping, given the state time.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>StateTime</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetKeyFrame2</name>
            <comment>Returns a TextureRegion representing the frame of animation for the given state time.
StateTime: The amount of seconds an object has spent in the state this Animation instance represents, e.g. running, jumping and so on.
Looping: Whether the animation is looping or not.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <parameter>
                <name>StateTime</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Looping</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetKeyFrameIndex</name>
            <comment>Returns the current frame number.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>StateTime</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetKeyFrame</name>
            <comment>Returns a TextureRegion representing the frame of animation for the given state time.
StateTime: The amount of seconds an object has spent in the state this Animation instance represents, e.g. running, jumping and so on using the mode specified by PlayMode.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <parameter>
                <name>StateTime</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs an animation.
An Animation stores a list of TextureRegions representing an animated sequence, e.g. for running or jumping. Each region of an Animation is called a key frame; multiple key frames make up the animation.
FrameDuration: The time between frames in seconds.
KeyFrames: The TextureRegions representing the frames.
PlayMode: One of the PLAYMODE constants.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FrameDuration</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>KeyFrames</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[]</type>
            </parameter>
            <parameter>
                <name>PlayMode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>KeyFrames</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion[]</returntype>
            <comment>Returns the KeyFrames() array where all the TextureRegions of the animation are stored.</comment>
        </property>
        <property>
            <name>PlayMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>PlayMode</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the animation play mode.</comment>
        </property>
        <property>
            <name>FrameDuration</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnimDuration</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g2d.Animation</returntype>
            <comment></comment>
        </property>
        <field>
            <name>PLAYMODE_LOOP_RANDOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PLAYMODE_LOOP_PINGPONG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PLAYMODE_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PLAYMODE_REVERSED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PLAYMODE_LOOP_REVERSED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PLAYMODE_LOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.PixmapPacker</name>
        <shortname>lgPixmapPacker</shortname>
        <comment>Packs {@link Pixmap} instances into one more more {@link Page} instances to generate an atlas of Pixmap instances. Provides
 means to directly convert the pixmap atlas to a {@link TextureAtlas}. The packer supports padding and border pixel duplication,
 specified during construction. The packer supports incremental inserts and updates of TextureAtlases generated with this
 class.&lt;/p&gt;
 
 All methods except {@link #getPage(String)} and {@link #getPages()} are thread safe. The methods
 {@link #generateTextureAtlas(TextureFilter, TextureFilter, boolean)} and
 {@link #updateTextureAtlas(TextureAtlas, TextureFilter, TextureFilter, boolean)} need to be called on the rendering thread, all
 other methods can be called from any thread.&lt;/p&gt;
 
 One-off usage:
 
 &lt;pre&gt;
 // 512x512 pixel pages, RGB565 format, 2 pixels of padding, border duplication
 PixmapPacker packer = new PixmapPacker(512, 512, Format.RGB565, 2, true);
 packer.pack(&amp;quot;First Pixmap&amp;quot;, pixmap1);
 packer.pack(&amp;quot;Second Pixmap&amp;quot;, pixmap2);
 TextureAtlas atlas = packer.generateTextureAtlas(TextureFilter.Nearest, TextureFilter.Nearest);
 &lt;/pre&gt;
 
 Note that you should not dispose the packer in this usage pattern. Instead, dispose the TextureAtlas if no longer needed.
 
 Incremental usage:
 
 &lt;pre&gt;
 // 512x512 pixel pages, RGB565 format, 2 pixels of padding, no border duplication
 PixmapPacker packer = new PixmapPacker(512, 512, Format.RGB565, 2, false);
 TextureAtlas incrementalAtlas = new TextureAtlas();
 
 // potentially on a separate thread, e.g. downloading thumbnails
 packer.pack(&amp;quot;thumbnail&amp;quot;, thumbnail);
 
 // on the rendering thread, every frame
 packer.updateTextureAtlas(incrementalAtlas, TextureFilter.Linear, TextureFilter.Linear);
 
 // once the atlas is no longer needed, make sure you get the final additions. This might
 // be more elaborate depending on your threading model.
 packer.updateTextureAtlas(incrementalAtlas, TextureFilter.Linear, TextureFilter.Linear);
 incrementalAtlas.dispose();
 &lt;/pre&gt;
 
 Pixmap-only usage:
 
 &lt;pre&gt;
 PixmapPacker packer = new PixmapPacker(512, 512, Format.RGB565, 2, true);
 packer.pack(&amp;quot;First Pixmap&amp;quot;, pixmap1);
 packer.pack(&amp;quot;Second Pixmap&amp;quot;, pixmap2);
 
 // do something interesting with the resulting pages
 for (Page page : packer.getPages()) {
 }
 
 // dispose of the packer in this case
 packer.dispose();
 &lt;/pre&gt;</comment>
        <owner>process</owner>
        <method>
            <name>GenerateTextureAtlas</name>
            <comment>Generates a new TextureAtlas from the Pixmap instances inserted so far.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlas</returntype>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all resources, including Pixmap instances for the pages created so far. These Pixmap instances are shared with any TextureAtlas generated or updated by either GenerateTextureAtlas or UpdateTextureAtlas.
Do not call this method if you generated or updated a TextureAtlas, instead dispose the TextureAtlas.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>UpdateTextureAtlas</name>
            <comment>Updates the given TextureAtlas, adding any new Pixmap instances packed since the last call to this function.
This can be used to insert Pixmap instances on a separate thread via Pack and update the TextureAtlas on the rendering thread.
This function must be called on the rendering thread.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Atlas</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureAtlas</type>
            </parameter>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>UseMipMaps</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Pack</name>
            <comment>Inserts the given Pixmap. You can later on retrieve the images position in the output image via the supplied name and the function GetRect.
Returns a Rectangle describing the area the pixmap was rendered to or null.
Throws RuntimeException in case the image did not fit due to the page size being too small or providing a duplicate name.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Image</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
        </method>
        <method>
            <name>GetRect</name>
            <comment>Returns the rectangle for the image in the page it's stored in or null.
name: the name of the image.</comment>
            <returntype>com.badlogic.gdx.math.Rectangle</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DuplicateBorder</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetPageIndex</name>
            <comment>Returns the index of the page containing the given packed rectangle, or -1.
name: the name of the image</comment>
            <returntype>int</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetPage</name>
            <comment>Returns the page the image is stored in or null.
name: the name of the image.</comment>
            <returntype>com.badlogic.gdx.graphics.g2d.PixmapPacker.Page</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>PageWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.PixmapPacker.Page</name>
        <shortname>lgPixmapPackerPage</shortname>
        <owner>process</owner>
        <property>
            <name>Pixmap</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.ParticleEmitter.RangedNumericValue</name>
        <shortname>lgParticleRangedNumericValue</shortname>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isAlwaysActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>newLowValue</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setLow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Active</name>
            <parameter>
                <name>active</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Low</name>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LowMin</name>
            <returntype>float</returntype>
            <parameter>
                <name>lowMin</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LowMax</name>
            <returntype>float</returntype>
            <parameter>
                <name>lowMax</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AlwaysActive</name>
            <parameter>
                <name>alwaysActive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.ParticleEmitter.ScaledNumericValue</name>
        <shortname>lgParticleScaledNumericValue</shortname>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isAlwaysActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setHigh</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>newHighValue</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getScale</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>newLowValue</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setLow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>min</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Active</name>
            <parameter>
                <name>active</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Low</name>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LowMin</name>
            <returntype>float</returntype>
            <parameter>
                <name>lowMin</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LowMax</name>
            <returntype>float</returntype>
            <parameter>
                <name>lowMax</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AlwaysActive</name>
            <parameter>
                <name>alwaysActive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HighMin</name>
            <returntype>float</returntype>
            <parameter>
                <name>highMin</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>High</name>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Timeline</name>
            <returntype>float[]</returntype>
            <parameter>
                <name>timeline</name>
                <type>float[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Scaling</name>
            <returntype>float[]</returntype>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HighMax</name>
            <returntype>float</returntype>
            <parameter>
                <name>highMax</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Relative</name>
            <parameter>
                <name>relative</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.ParticleEmitter.GradientColorValue</name>
        <shortname>lgParticleGradientColorValue</shortname>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isAlwaysActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getColor</name>
            <comment></comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Active</name>
            <parameter>
                <name>active</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AlwaysActive</name>
            <parameter>
                <name>alwaysActive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Colors</name>
            <returntype>float[]</returntype>
            <parameter>
                <name>colors</name>
                <type>float[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Timeline</name>
            <returntype>float[]</returntype>
            <parameter>
                <name>timeline</name>
                <type>float[]</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShapeValue</name>
        <shortname>lgParticleSpawnShapeValue</shortname>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isAlwaysActive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isEdges</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Active</name>
            <parameter>
                <name>active</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Shape</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</returntype>
            <parameter>
                <name>shape</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Side</name>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnEllipseSide</returntype>
            <parameter>
                <name>side</name>
                <type EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnEllipseSide</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AlwaysActive</name>
            <parameter>
                <name>alwaysActive</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Edges</name>
            <parameter>
                <name>edges</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>SPAWNSIDE_Bottom</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnEllipseSide</returntype>
        </field>
        <field>
            <name>SPAWNSHAPE_Point</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</returntype>
        </field>
        <field>
            <name>SPAWNSIDE_Top</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnEllipseSide</returntype>
        </field>
        <field>
            <name>SPAWNSIDE_Both</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnEllipseSide</returntype>
        </field>
        <field>
            <name>SPAWNSHAPE_Square</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</returntype>
        </field>
        <field>
            <name>SPAWNSHAPE_Line</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</returntype>
        </field>
        <field>
            <name>SPAWNSHAPE_Ellipse</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.graphics.g2d.ParticleEmitter.SpawnShape</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.MapObject</name>
        <shortname>lgMapObject</shortname>
        <comment>Generic Map entity with basic attributes like name, opacity, color</comment>
        <owner>process</owner>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the object is visible or not.</comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.MapLayer</name>
        <shortname>lgMapLayer</shortname>
        <comment>Map layer containing a set of objects and properties</comment>
        <owner>process</owner>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Objects</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapObjects</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>float</returntype>
            <parameter>
                <name>opacity</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile</name>
        <shortname>lgMapStaticTiledMapTile</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Creates a static tile with the given region.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextureRegion</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Clones the given tile.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Tile2Copy</name>
                <type>com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile</type>
            </parameter>
        </method>
        <property>
            <name>TextureRegion</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BlendMode</name>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
            <parameter>
                <name>blendMode</name>
                <type EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</type>
            </parameter>
            <comment>Gets or sets the BlendMode to use for rendering the tile.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>int</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <field>
            <name>BLENDMODE_None</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
        </field>
        <field>
            <name>BLENDMODE_Alpha</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile</name>
        <shortname>lgMapAnimatedTiledMapTile</shortname>
        <owner>process</owner>
        <property>
            <name>TextureRegion</name>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgTextureRegion</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BlendMode</name>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
            <parameter>
                <name>blendMode</name>
                <type EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</type>
            </parameter>
            <comment>Gets or sets the BlendMode to use for rendering the tile.</comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>int</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Properties</name>
            <returntype>anywheresoftware.b4a.libgdx.maps.lgMapProperties</returntype>
            <comment></comment>
        </property>
        <field>
            <name>BLENDMODE_None</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
        </field>
        <field>
            <name>BLENDMODE_Alpha</name>
            <comment></comment>
            <returntype EnumType="true">com.badlogic.gdx.maps.tiled.TiledMapTile.BlendMode</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgShortArray</name>
        <shortname>lgShortArray</shortname>
        <owner>process</owner>
        <method>
            <name>AddShortArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgShortArray</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithShortArray</name>
            <comment>Creates a new ordered array containing the elements in the specified array. The capacity is set to the number of elements, so any subsequent elements added will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>Insert</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>EnsureCapacity</name>
            <comment>Increases the size of the backing array to accommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes.
Returns items.</comment>
            <returntype>short[]</returntype>
            <parameter>
                <name>AdditionalCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Contains</name>
            <comment>Returns True if this array contains the specified value.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>Shuffle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Add</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>Peek</name>
            <comment>Returns the last item.</comment>
            <returntype>short</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an ordered array with the specified capacity.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates an array.
Ordered: If False, functions that remove elements may change the order of other elements in the array, which avoids a memory copy.
Capacity: Any elements added beyond this will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ordered</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an ordered array with a capacity of 16.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Sort</name>
            <comment>Sorts this array.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toArray</name>
            <comment>Returns the items as an array of shorts.</comment>
            <returntype>short[]</returntype>
        </method>
        <method>
            <name>Shrink</name>
            <comment>Reduces the size of the backing array to the size of the actual items. This is useful to release memory when many items have been removed, or if it is known that more items will not be added.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IndexOf</name>
            <comment>Returns an index of first occurrence of the given value in the array or -1 if no such value exists.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>RemoveValue</name>
            <comment>Removes the given value from the array if it exists.
Returns True if the value was found and removed, False otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>Truncate</name>
            <comment>Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is taken.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Values</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveRange</name>
            <comment>Removes the values between the specified indices, inclusive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Pop</name>
            <comment>Removes and returns the last item.</comment>
            <returntype>short</returntype>
        </method>
        <method>
            <name>Reverse</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Swap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>First</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>short</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Random</name>
            <comment>Returns a random item from the array, or zero if the array is empty.</comment>
            <returntype>short</returntype>
        </method>
        <method>
            <name>RemoveIndex</name>
            <comment>Removes and returns the item at the specified index.</comment>
            <returntype>short</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.utils.ShortArray</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgIntArray</name>
        <shortname>lgIntArray</shortname>
        <owner>process</owner>
        <method>
            <name>Insert</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>EnsureCapacity</name>
            <comment>Increases the size of the backing array to accommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes.
Returns items.</comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>AdditionalCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithIntArray</name>
            <comment>Creates a new ordered array containing the elements in the specified array. The capacity is set to the number of elements, so any subsequent elements added will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Contains</name>
            <comment>Returns True if this array contains the specified value.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Shuffle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddIntArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgIntArray</type>
            </parameter>
        </method>
        <method>
            <name>Add</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Peek</name>
            <comment>Returns the last item.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an ordered array with the specified capacity.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates an array.
Ordered: If False, functions that remove elements may change the order of other elements in the array, which avoids a memory copy.
Capacity: Any elements added beyond this will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ordered</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an ordered array with a capacity of 16.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Sort</name>
            <comment>Sorts this array.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toArray</name>
            <comment>Returns the items as an array of ints.</comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>Shrink</name>
            <comment>Reduces the size of the backing array to the size of the actual items. This is useful to release memory when many items have been removed, or if it is known that more items will not be added.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IndexOf</name>
            <comment>Returns an index of first occurrence of the given value in the array or -1 if no such value exists.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveValue</name>
            <comment>Removes the given value from the array if it exists.
Returns True if the value was found and removed, False otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Truncate</name>
            <comment>Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is taken.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Values</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveRange</name>
            <comment>Removes the values between the specified indices, inclusive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Pop</name>
            <comment>Removes and returns the last item.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Reverse</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Swap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>First</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Random</name>
            <comment>Returns a random item from the array, or zero if the array is empty.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>RemoveIndex</name>
            <comment>Removes and returns the item at the specified index.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.utils.IntArray</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgFontGenerator</name>
        <shortname>lgFontGenerator</shortname>
        <owner>process</owner>
        <method>
            <name>CreateFonts3</name>
            <comment>Creates BitmapFonts of various sizes from a TrueType font file.
 Returns a Map where the size is the key and the BitmapFont the value.
Internal: The internal path of the font file.
Sizes: An array containing the desired sizes in pixels.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sizes</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>CreateFonts2</name>
            <comment>Generates BitmapFonts of various sizes from a TrueType font file, containing glyphs for the given characters.
 Returns a Map where the size is the key and the BitmapFont the value.
File: The file handle.
Sizes: An array containing the desired sizes in pixels.
Characters: The characters the font should contain.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Sizes</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont2</name>
            <comment>Generates a new BitmapFont from a TrueType font file, containing glyphs for the given characters. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
File: The file handle.
Size: The size in pixels.
Characters: The characters the font should contain.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateFonts4</name>
            <comment>Creates BitmapFonts of various sizes from a TrueType font file.
 Returns a Map where the size is the key and the BitmapFont the value.
File: The file handle.
Sizes: An array containing the desired sizes in pixels.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Sizes</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>CreateFonts</name>
            <comment>Generates BitmapFonts of various sizes from a TrueType font file, containing glyphs for the given characters.
 Returns a Map where the size is the key and the BitmapFont the value.
Internal: The internal path of the font file.
Sizes: An array containing the desired sizes in pixels.
Characters: The characters the font should contain.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sizes</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont3</name>
            <comment>Generates a new BitmapFont from a TrueType font file. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
Internal: The internal path of the font file.
Size: The size in pixels.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont4</name>
            <comment>Generates a new BitmapFont from a TrueType font file. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
File: The file handle.
Size: The size in pixels.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont5</name>
            <comment>Generates a new BitmapFont from a TrueType font file, containing glyphs for the given characters. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
Internal: The internal path of the font file.
Size: The size in pixels.
Characters: The characters the font should contain.
GenMipMaps: Whether or not to generate mip maps for the resulting texture.
MinFilter: Minification filter (one of the FILTER constants of the lgBitmapFont class).
MagFilter: Magnification filter (one of the FILTER constants of the lgBitmapFont class).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>GenMipMaps</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont6</name>
            <comment>Generates a new BitmapFont from a TrueType font file, containing glyphs for the given characters. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
File: The file handle.
Size: The size in pixels.
Characters: The characters the font should contain.
GenMipMaps: Whether or not to generate mip maps for the resulting texture.
MinFilter: Minification filter (one of the FILTER constants of the lgBitmapFont class).
MagFilter: Magnification filter (one of the FILTER constants of the lgBitmapFont class).</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>GenMipMaps</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>MinFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
            <parameter>
                <name>MagFilter</name>
                <type EnumType="true">com.badlogic.gdx.graphics.Texture.TextureFilter</type>
            </parameter>
        </method>
        <method>
            <name>CreateFont</name>
            <comment>Generates a new BitmapFont from a TrueType font file, containing glyphs for the given characters. Throws a GdxRuntimeException in case the font could not be generated. Using big sizes might cause such an exception. All characters need to fit onto a single texture.
Internal: The internal path of the font file.
Size: The size in pixels.
Characters: The characters the font should contain.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgBitmapFont</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Characters</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgFloatArray</name>
        <shortname>lgFloatArray</shortname>
        <owner>process</owner>
        <method>
            <name>Insert</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>EnsureCapacity</name>
            <comment>Increases the size of the backing array to accommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes.
Returns items.</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>AdditionalCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Contains</name>
            <comment>Returns True if this array contains the specified value.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Shuffle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Add</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Peek</name>
            <comment>Returns the last item.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an ordered array with the specified capacity.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates an array.
Ordered: If False, functions that remove elements may change the order of other elements in the array, which avoids a memory copy.
Capacity: Any elements added beyond this will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ordered</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an ordered array with a capacity of 16.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Sort</name>
            <comment>Sorts this array.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toArray</name>
            <comment>Returns the items as an array of floats.</comment>
            <returntype>float[]</returntype>
        </method>
        <method>
            <name>InitializeWithFloatArray</name>
            <comment>Creates a new ordered array containing the elements in the specified array. The capacity is set to the number of elements, so any subsequent elements added will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Shrink</name>
            <comment>Reduces the size of the backing array to the size of the actual items. This is useful to release memory when many items have been removed, or if it is known that more items will not be added.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IndexOf</name>
            <comment>Returns an index of first occurrence of the given value in the array or -1 if no such value exists.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddFloatArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgFloatArray</type>
            </parameter>
        </method>
        <method>
            <name>RemoveValue</name>
            <comment>Removes the given value from the array if it exists.
Returns True if the value was found and removed, False otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Truncate</name>
            <comment>Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is taken.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveRange</name>
            <comment>Removes the values between the specified indices, inclusive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Pop</name>
            <comment>Removes and returns the last item.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Reverse</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Swap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>First</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Random</name>
            <comment>Returns a random item from the array, or zero if the array is empty.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>RemoveIndex</name>
            <comment>Removes and returns the item at the specified index.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.utils.FloatArray</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgAssetManager</name>
        <shortname>lgAssetManager</shortname>
        <owner>process</owner>
        <event>Error(FileName As String, Class As Object, Message As String)</event>
        <method>
            <name>Unload</name>
            <comment>Removes the asset and all its dependencies if they are not used by other assets.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates a new AssetManager with loaders for BitmapFont, Music, ParticleEffect, Pixmap, PolygonRegion, Sound, Texture, and TextureAtlas. To load a TiledMap, set TiledMapLoader after calling this.
EvtPrefix: Prefix of the Error event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EvtPrefix</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get2</name>
            <comment>Returns the asset with the given name and type.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>IsLoaded</name>
            <comment>Returns whether the asset with the given name is loaded.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment>Disposes all assets in the manager and stops all asynchronous loading.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetReferenceCount</name>
            <comment>Returns the reference count of an asset.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Load</name>
            <comment>Adds the given asset to the loading queue of the AssetManager.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>Update</name>
            <comment>Updates the AssetManager, keeping it loading any assets in the preload queue.
Returns False when the loading is finished.
Example:&lt;code&gt;
Sub lGdx_Render
   If AssetMgr.Update Then
      'Loading in progress
      ...
      Return
   End If
   'Loading is finished
   ...
&lt;/code&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>FinishLoading</name>
            <comment>Blocks until all assets are loaded.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Clear</name>
            <comment>Clears and disposes all assets and the preloading queue.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetDependencies</name>
            <comment>Returns the dependencies of an asset or null if the asset has no dependencies.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsLoaded2</name>
            <comment>Returns whether the asset with the given name and type is loaded.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.Class</type>
            </parameter>
        </method>
        <method>
            <name>LoadTMXWithParam</name>
            <comment>Adds the given TMX file to the loading queue of the AssetManager.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.Class</type>
            </parameter>
            <parameter>
                <name>Param</name>
                <type>com.badlogic.gdx.maps.tiled.TmxMapLoader.Parameters</type>
            </parameter>
        </method>
        <method>
            <name>GetAssetType</name>
            <comment>Returns the type of a loaded asset.</comment>
            <returntype>java.lang.Class</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment>Returns the asset with the given name.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Update2</name>
            <comment>Updates the AssetManager continuously for the specified number of milliseconds, yielding the CPU to the loading thread between updates. This may block for less time if all loading tasks are complete. This may block for more time if the portion of a single task that happens in the GL thread takes a long time.
Returns False when the loading is finished.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Millis</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ContainsAsset</name>
            <comment>Returns whether the asset is contained in this manager.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Asset</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>GetAssetFileName</name>
            <comment>Returns the filename of the asset or an empty string.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Asset</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>LoadedAssetNames</name>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
            <comment>Returns the file names of all loaded assets, or null.</comment>
        </property>
        <property>
            <name>TiledMapLoader</name>
            <parameter>
                <name>MapLoader</name>
                <type>int</type>
            </parameter>
            <comment>Sets the appropriate loader for the tiled map's file type. This property must be set before calling Load.</comment>
        </property>
        <property>
            <name>QueuedAssets</name>
            <returntype>int</returntype>
            <comment>Returns the number of currently queued assets.</comment>
        </property>
        <property>
            <name>LoadedAssets</name>
            <returntype>int</returntype>
            <comment>Returns the number of loaded assets.</comment>
        </property>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.assets.AssetManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Progress</name>
            <returntype>float</returntype>
            <comment>Returns the progress in percent of completion.</comment>
        </property>
        <field>
            <name>TYPE_Pixmap</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_Sound</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>MAPLOADER_tIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MAPLOADER_AtlasTMX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_Music</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>MAPLOADER_TMX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_TiledMap</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_PolygonRegion</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_TextureAtlas</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_BitmapFont</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_Texture</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
        <field>
            <name>TYPE_ParticleEffect</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.utils.lgArray</name>
        <shortname>lgArray</shortname>
        <owner>process</owner>
        <method>
            <name>Insert</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>EnsureCapacity</name>
            <comment>Increases the size of the backing array to accommodate the specified number of additional items. Useful before adding many items to avoid multiple backing array resizes.
Returns items.</comment>
            <returntype>java.lang.Object[]</returntype>
            <parameter>
                <name>AdditionalCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Contains</name>
            <comment>Returns True if this array contains the specified value.
Identity: If True, the comparison uses =. If False, the comparison uses the Equals function.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Identity</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>anywheresoftware.b4a.libgdx.utils.lgArray</type>
            </parameter>
        </method>
        <method>
            <name>Shuffle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LastIndexOf</name>
            <comment>Returns an index of last occurrence of the given value in the array or -1 if no such value exists. Search is started from the end of the array.
Identity: If True, the comparison uses =. If False, the comparison uses the Equals function.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Identity</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Add</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Peek</name>
            <comment>Returns the last item.</comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>Set</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>toList</name>
            <comment>Returns the items as a list.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Creates an ordered array with the specified capacity.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize3</name>
            <comment>Creates an array.
Ordered: If False, functions that remove elements may change the order of other elements in the array, which avoids a memory copy.
Capacity: Any elements added beyond this will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Ordered</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Capacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Creates an ordered array with a capacity of 16.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Sort</name>
            <comment>Sorts this array. The array elements must be able to be compared. This function is not thread safe.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>toArray</name>
            <comment>Returns the items as an array of objects.</comment>
            <returntype>java.lang.Object[]</returntype>
        </method>
        <method>
            <name>InitializeWithArray</name>
            <comment>Creates a new ordered array containing the elements in the specified array. The capacity is set to the number of elements, so any subsequent elements added will cause the backing array to be grown.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Array</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>Shrink</name>
            <comment>Reduces the size of the backing array to the size of the actual items. This is useful to release memory when many items have been removed, or if it is known that more items will not be added.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IndexOf</name>
            <comment>Returns an index of first occurrence of the given value in the array or -1 if no such value exists.
Identity: If True, the comparison uses =. If False, the comparison uses the Equals function.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Identity</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveValue</name>
            <comment>Removes the given value from the array if it exists.
Identity: If True, the comparison uses =. If False, the comparison uses the Equals function.
Returns True if the value was found and removed, False otherwise.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Identity</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Truncate</name>
            <comment>Reduces the size of the array to the specified size. If the array is already smaller than the specified size, no action is taken.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Values</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveRange</name>
            <comment>Removes the items between the specified indices, inclusive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>End</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>toList2</name>
            <comment>Returns the items in the given list.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>L</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <method>
            <name>Pop</name>
            <comment>Removes and returns the last item.</comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>Reverse</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Swap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>First</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Second</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveIndex</name>
            <comment>Removes and returns the item at the specified index.</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithList</name>
            <comment>Creates a new ordered array containing the items in the specified list. The capacity is set to the number of items.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>List</name>
                <type>anywheresoftware.b4a.objects.collections.List</type>
            </parameter>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.utils.Array</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.WheelJointDef</name>
        <shortname>lgBox2DWheelJointDef</shortname>
        <comment>Wheel joint definition. This requires defining a line of motion using an axis and an anchor point. The definition uses local
 anchor points and a local axis so that the initial configuration can violate the constraint slightly. The joint translation is
 zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when saving and loading a
 game.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchor</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>localAxisA</name>
            <comment>The local translation axis in body1.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>dampingRatio</name>
            <comment>Suspension damping ratio, one indicates critical damping</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>maxMotorTorque</name>
            <comment>The maximum motor torque, usually in N-m.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to body2's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>frequencyHz</name>
            <comment>Suspension frequency, zero indicates no suspension</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to body1's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>enableMotor</name>
            <comment>Enable/disable the joint motor.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>motorSpeed</name>
            <comment>The desired motor speed in radians per second.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.WheelJoint</name>
        <shortname>lgBox2DWheelJoint</shortname>
        <comment>A wheel joint. This joint provides two degrees of freedom: translation along an axis fixed in body1 and rotation in the plane.
 You can use a joint limit to restrict the range of motion and a joint motor to drive the rotation or to model rotational
 friction. This joint is designed for vehicle suspensions.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isMotorEnabled</name>
            <comment>Is the joint motor enabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enableMotor</name>
            <comment>Enable/disable the joint motor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getMotorTorque</name>
            <comment>Get the current motor torque given the inverse time step, usually in N-m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>invDt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpringFrequencyHz</name>
            <returntype>float</returntype>
            <parameter>
                <name>hz</name>
                <type>float</type>
            </parameter>
            <comment>Set/Get the spring frequency in hertz. Setting the frequency to zero disables the spring.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>MotorSpeed</name>
            <returntype>float</returntype>
            <parameter>
                <name>speed</name>
                <type>float</type>
            </parameter>
            <comment>Get the motor speed, usually in radians per second.</comment>
        </property>
        <property>
            <name>JointSpeed</name>
            <returntype>float</returntype>
            <comment>Get the current joint translation speed, usually in meters per second.</comment>
        </property>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxMotorTorque</name>
            <returntype>float</returntype>
            <parameter>
                <name>torque</name>
                <type>float</type>
            </parameter>
            <comment>Set/Get the maximum motor force, usually in N-m.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>LocalAxisA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>JointTranslation</name>
            <returntype>float</returntype>
            <comment>Get the current joint translation, usually in meters.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SpringDampingRatio</name>
            <returntype>float</returntype>
            <parameter>
                <name>ratio</name>
                <type>float</type>
            </parameter>
            <comment>Set/Get the spring damping ratio</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.WeldJointDef</name>
        <shortname>lgBox2DWeldJointDef</shortname>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>body1</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>body2</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchor</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>referenceAngle</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.WeldJoint</name>
        <shortname>lgBox2DWeldJoint</shortname>
        <comment>A weld joint essentially glues two bodies together. A weld joint may distort somewhat because the island constraint solver is
 approximate.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ReferenceAngle</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.RopeJointDef</name>
        <shortname>lgBox2DRopeJointDef</shortname>
        <comment>Rope joint definition. This requires two body anchor points and a maximum lengths. Note: by default the connected objects will
 not collide. see collideConnected in b2JointDef.</comment>
        <owner>process</owner>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>maxLength</name>
            <comment>The maximum length of the rope. Warning: this must be larger than b2_linearSlop or the joint will have no effect.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to bodyB's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to bodyA's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.RopeJoint</name>
        <shortname>lgBox2DRopeJoint</shortname>
        <comment>A rope joint enforces a maximum distance between two points on two bodies. It has no other effect. Warning: if you attempt to
 change the maximum length during the simulation you will get some non-physical behavior. A model that would allow you to
 dynamically modify the length would have some sponginess, so I chose not to implement it that way. See b2DistanceJoint if you
 want to dynamically control length.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxLength</name>
            <returntype>float</returntype>
            <parameter>
                <name>length</name>
                <type>float</type>
            </parameter>
            <comment>Get the maximum length of the rope.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef</name>
        <shortname>lgBox2DRevoluteJointDef</shortname>
        <comment>Revolute joint definition. This requires defining an anchor point where the bodies are joined. The definition uses local anchor
 points so that the initial configuration can violate the constraint slightly. You also need to specify the initial relative
 angle for joint limits. This helps when saving and loading a game. The local anchor points are measured from the body's origin
 rather than the center of mass because: 1. you might not know where the center of mass will be. 2. if you add/remove shapes
 from a body and recompute the mass, the joints will be broken.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment>Initialize the bodies, anchors, and reference angle using a world anchor point.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchor</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>lowerAngle</name>
            <comment>The lower angle for the joint limit (radians).</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>referenceAngle</name>
            <comment>The body2 angle minus body1 angle in the reference state (radians).</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>maxMotorTorque</name>
            <comment>The maximum motor torque used to achieve the desired motor speed. Usually in N-m.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>enableMotor</name>
            <comment>A flag to enable the joint motor.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>enableLimit</name>
            <comment>A flag to enable joint limits.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to body2's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to body1's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>motorSpeed</name>
            <comment>The desired motor speed. Usually in radians per second.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>upperAngle</name>
            <comment>The upper angle for the joint limit (radians).</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.RevoluteJoint</name>
        <shortname>lgBox2DRevoluteJoint</shortname>
        <comment>A revolute joint constrains two bodies to share a common point while they are free to rotate about the point. The relative
 rotation about the shared point is the joint angle. You can limit the relative rotation with a joint limit that specifies a
 lower and upper angle. You can use a motor to drive the relative rotation about the shared point. A maximum motor torque is
 provided so that infinite forces are not generated.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isMotorEnabled</name>
            <comment>Is the joint motor enabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enableLimit</name>
            <comment>Enable/disable the joint limit.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setLimits</name>
            <comment>Set the joint limits in radians.
upper: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>lower</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upper</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enableMotor</name>
            <comment>Enable/disable the joint motor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isLimitEnabled</name>
            <comment>Is the joint limit enabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getMotorTorque</name>
            <comment>Get the current motor torque, usually in N-m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>invDt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LowerLimit</name>
            <returntype>float</returntype>
            <comment>Get the lower joint limit in radians.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UpperLimit</name>
            <returntype>float</returntype>
            <comment>Get the upper joint limit in radians.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>MotorSpeed</name>
            <returntype>float</returntype>
            <parameter>
                <name>speed</name>
                <type>float</type>
            </parameter>
            <comment>Get the motor speed in radians per second.</comment>
        </property>
        <property>
            <name>JointSpeed</name>
            <returntype>float</returntype>
            <comment>Get the current joint angle speed in radians per second.</comment>
        </property>
        <property>
            <name>JointAngle</name>
            <returntype>float</returntype>
            <comment>Get the current joint angle in radians.</comment>
        </property>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxMotorTorque</name>
            <returntype>float</returntype>
            <parameter>
                <name>torque</name>
                <type>float</type>
            </parameter>
            <comment>Set the maximum motor torque, usually in N-m.</comment>
        </property>
        <property>
            <name>ReferenceAngle</name>
            <returntype>float</returntype>
            <comment>Get the current motor torque, usually in N-m.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.PulleyJointDef</name>
        <shortname>lgBox2DPulleyJointDef</shortname>
        <comment>Pulley joint definition. This requires two ground anchors, two dynamic body anchor points, max lengths for each side, and a
 pulley ratio.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment>Initialize the bodies, anchors, lengths, max lengths, and ratio using the world anchors.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>groundAnchorA</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>groundAnchorB</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>anchorA</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>anchorB</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>ratio</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>ratio</name>
            <comment>The pulley ratio, used to simulate a block-and-tackle.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to bodyB's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>lengthA</name>
            <comment>The a reference length for the segment attached to bodyA.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to bodyA's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>groundAnchorA</name>
            <comment>The first ground anchor in world coordinates. This point never moves.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>lengthB</name>
            <comment>The a reference length for the segment attached to bodyB.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>groundAnchorB</name>
            <comment>The second ground anchor in world coordinates. This point never moves.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.PulleyJoint</name>
        <shortname>lgBox2DPulleyJoint</shortname>
        <comment>The pulley joint is connected to two bodies and two fixed ground points. The pulley supports a ratio such that: length1 + ratio
 * length2 &lt;= constant Yes, the force transmitted is scaled by the ratio. The pulley also enforces a maximum length limit on
 both sides. This is useful to prevent one side of the pulley hitting the top.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Length2</name>
            <returntype>float</returntype>
            <comment>Get the current length of the segment attached to body2.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Ratio</name>
            <returntype>float</returntype>
            <comment>Get the pulley ratio.</comment>
        </property>
        <property>
            <name>Length1</name>
            <returntype>float</returntype>
            <comment>Get the current length of the segment attached to body1.</comment>
        </property>
        <property>
            <name>GroundAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>GroundAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef</name>
        <shortname>lgBox2DPrismaticJointDef</shortname>
        <comment>Prismatic joint definition. This requires defining a line of motion using an axis and an anchor point. The definition uses
 local anchor points and a local axis so that the initial configuration can violate the constraint slightly. The joint
 translation is zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when
 saving and loading a game.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment>Initialize the bodies, anchors, axis, and reference angle using the world anchor and world axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchor</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>axis</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>maxMotorForce</name>
            <comment>The maximum motor torque, usually in N-m.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>referenceAngle</name>
            <comment>The constrained angle between the bodies: body2_angle - body1_angle.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>enableMotor</name>
            <comment>Enable/disable the joint motor.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>upperTranslation</name>
            <comment>The upper translation limit, usually in meters.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAxisA</name>
            <comment>The local translation axis in body1.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>lowerTranslation</name>
            <comment>The lower translation limit, usually in meters.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>enableLimit</name>
            <comment>Enable/disable the joint limit.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to body2's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to body1's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>motorSpeed</name>
            <comment>The desired motor speed in radians per second.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.PrismaticJoint</name>
        <shortname>lgBox2DPrismaticJoint</shortname>
        <comment>A prismatic joint. This joint provides one degree of freedom: translation along an axis fixed in body1. Relative rotation is
 prevented. You can use a joint limit to restrict the range of motion and a joint motor to drive the motion or to model joint
 friction.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isMotorEnabled</name>
            <comment>Is the joint motor enabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getMotorForce</name>
            <comment>Get the current motor force given the inverse time step, usually in N.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>invDt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enableLimit</name>
            <comment>Enable/disable the joint limit.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setLimits</name>
            <comment>Set the joint limits, usually in meters.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>lower</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upper</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enableMotor</name>
            <comment>Enable/disable the joint motor.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isLimitEnabled</name>
            <comment>Is the joint limit enabled?</comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LowerLimit</name>
            <returntype>float</returntype>
            <comment>Get the lower joint limit, usually in meters.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UpperLimit</name>
            <returntype>float</returntype>
            <comment>Get the upper joint limit, usually in meters.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>MotorSpeed</name>
            <returntype>float</returntype>
            <parameter>
                <name>speed</name>
                <type>float</type>
            </parameter>
            <comment>Get the motor speed, usually in meters per second.</comment>
        </property>
        <property>
            <name>JointSpeed</name>
            <returntype>float</returntype>
            <comment>Get the current joint translation speed, usually in meters per second.</comment>
        </property>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ReferenceAngle</name>
            <returntype>float</returntype>
            <comment>Get the reference angle.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>JointTranslation</name>
            <returntype>float</returntype>
            <comment>Get the current joint translation, usually in meters.</comment>
        </property>
        <property>
            <name>MaxMotorForce</name>
            <returntype>float</returntype>
            <parameter>
                <name>force</name>
                <type>float</type>
            </parameter>
            <comment>Get the max motor force, usually in N.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.MouseJointDef</name>
        <shortname>lgBox2DMouseJointDef</shortname>
        <comment>Mouse joint definition. This requires a world target point, tuning parameters, and the time step.</comment>
        <owner>process</owner>
        <field>
            <name>maxForce</name>
            <comment>The maximum constraint force that can be exerted to move the candidate body. Usually you will express as some multiple of
 the weight (multiplier * mass * gravity).</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>dampingRatio</name>
            <comment>The damping ratio. 0 = no damping, 1 = critical damping.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>target</name>
            <comment>The initial world target point. This is assumed to coincide with the body anchor initially.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>frequencyHz</name>
            <comment>The response speed.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.MouseJoint</name>
        <shortname>lgBox2DMouseJoint</shortname>
        <comment>A mouse joint is used to make a point on a body track a specified world point. This a soft constraint with a maximum force.
 This allows the constraint to stretch and without applying huge forces. NOTE: this joint is not documented in the manual
 because it was developed to be used in the testbed. If you want to learn how to use the mouse joint, look at the testbed.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxForce</name>
            <returntype>float</returntype>
            <parameter>
                <name>force</name>
                <type>float</type>
            </parameter>
            <comment>Set/get the maximum force in Newtons.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>DampingRatio</name>
            <returntype>float</returntype>
            <parameter>
                <name>ratio</name>
                <type>float</type>
            </parameter>
            <comment>Set/get the damping ratio (dimensionless).</comment>
        </property>
        <property>
            <name>Target</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>target</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <comment>Use this to update the target point.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>Frequency</name>
            <returntype>float</returntype>
            <parameter>
                <name>hz</name>
                <type>float</type>
            </parameter>
            <comment>Set/get the frequency in Hertz.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.GearJointDef</name>
        <shortname>lgBox2DGearJointDef</shortname>
        <comment>Gear joint definition. This definition requires two existing revolute or prismatic joints (any combination will work). The
 provided joints must attach a dynamic body to a static body.</comment>
        <owner>process</owner>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>ratio</name>
            <comment>The gear ratio.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>joint2</name>
            <comment>The second revolute/prismatic joint attached to the gear joint.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
        </field>
        <field>
            <name>joint1</name>
            <comment>The first revolute/prismatic joint attached to the gear joint.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.GearJoint</name>
        <shortname>lgBox2DGearJoint</shortname>
        <comment>A gear joint is used to connect two joints together. Either joint can be a revolute or prismatic joint. You specify a gear
 ratio to bind the motions together: coordinate1 + ratio * coordinate2 = constant The ratio can be negative or positive. If one
 joint is a revolute joint and the other joint is a prismatic joint, then the ratio will have units of length or units of
 1/length.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>Joint1</name>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
            <comment>Get first joint.</comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Ratio</name>
            <returntype>float</returntype>
            <parameter>
                <name>ratio</name>
                <type>float</type>
            </parameter>
            <comment>Set/Get the gear ratio.</comment>
        </property>
        <property>
            <name>Joint2</name>
            <returntype>com.badlogic.gdx.physics.box2d.Joint</returntype>
            <comment>Get second joint.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.FrictionJointDef</name>
        <shortname>lgBox2DFrictionJointDef</shortname>
        <comment>Friction joint definition.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment>Initialize the bodies, anchors, axis, and reference angle using the world anchor and world axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchor</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>maxForce</name>
            <comment>The maximum friction force in N.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>maxTorque</name>
            <comment>The maximum friction torque in N-m.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to bodyB's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to bodyA's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.FrictionJoint</name>
        <shortname>lgBox2DFrictionJoint</shortname>
        <comment>Friction joint. This is used for top-down friction. It provides 2D translational friction and angular friction.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxForce</name>
            <returntype>float</returntype>
            <parameter>
                <name>force</name>
                <type>float</type>
            </parameter>
            <comment>Get the maximum friction force in N.</comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxTorque</name>
            <returntype>float</returntype>
            <parameter>
                <name>torque</name>
                <type>float</type>
            </parameter>
            <comment>Get the maximum friction torque in N*m.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.DistanceJointDef</name>
        <shortname>lgBox2DDistanceJointDef</shortname>
        <comment>Distance joint definition. This requires defining an anchor point on both bodies and the non-zero length of the distance joint.
 The definition uses local anchor points so that the initial configuration can violate the constraint slightly. This helps when
 saving and loading a game.</comment>
        <owner>process</owner>
        <method>
            <name>initialize</name>
            <comment>Initialize the bodies, anchors, and length using the world anchors.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bodyA</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>bodyB</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>anchorA</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
            <parameter>
                <name>anchorB</name>
                <type>com.badlogic.gdx.math.Vector2</type>
            </parameter>
        </method>
        <field>
            <name>bodyB</name>
            <comment>The second attached body</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
        <field>
            <name>dampingRatio</name>
            <comment>The damping ratio. 0 = no damping, 1 = critical damping.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>length</name>
            <comment>The natural length between the anchor points.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorB</name>
            <comment>The local anchor point relative to body2's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>frequencyHz</name>
            <comment>The mass-spring-damper frequency in Hertz.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>localAnchorA</name>
            <comment>The local anchor point relative to body1's origin.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
        </field>
        <field>
            <name>collideConnected</name>
            <comment>Set this flag to true if the attached bodies should collide.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>type</name>
            <comment>The joint type is set automatically for concrete joint types.</comment>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
        </field>
        <field>
            <name>bodyA</name>
            <comment>The first attached body.</comment>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.physics.box2d.joints.DistanceJoint</name>
        <shortname>lgBox2DDistanceJoint</shortname>
        <comment>A distance joint constrains two points on two bodies to remain at a fixed distance from each other. You can view this as a
 massless, rigid rod.</comment>
        <owner>process</owner>
        <method>
            <name>isActive</name>
            <comment>Short-cut function to determine if either body is inactive.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getReactionTorque</name>
            <comment>Get the reaction torque on body2 in N*m.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getReactionForce</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>inv_dt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>CollideConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalAnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BodyA</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the first body attached to this joint.</comment>
        </property>
        <property>
            <name>DampingRatio</name>
            <returntype>float</returntype>
            <parameter>
                <name>ratio</name>
                <type>float</type>
            </parameter>
            <comment>Set/get damping ratio.</comment>
        </property>
        <property>
            <name>LocalAnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AnchorB</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype EnumType="true">com.badlogic.gdx.physics.box2d.JointDef.JointType</returntype>
            <comment>Get the type of the concrete joint.</comment>
        </property>
        <property>
            <name>AnchorA</name>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Length</name>
            <returntype>float</returntype>
            <parameter>
                <name>length</name>
                <type>float</type>
            </parameter>
            <comment>Set/get the natural length. Manipulating the length can lead to non-physical behavior when the frequency is zero.</comment>
        </property>
        <property>
            <name>UserData</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>userData</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Get the user data</comment>
        </property>
        <property>
            <name>BodyB</name>
            <returntype>com.badlogic.gdx.physics.box2d.Body</returntype>
            <comment>Get the second body attached to this joint.</comment>
        </property>
        <property>
            <name>Frequency</name>
            <returntype>float</returntype>
            <parameter>
                <name>hz</name>
                <type>float</type>
            </parameter>
            <comment>Set/get frequency in Hz.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.net.SocketHints</name>
        <shortname>lgSocketHints</shortname>
        <comment>Options for {@link Socket} instances.</comment>
        <owner>process</owner>
        <field>
            <name>tcpNoDelay</name>
            <comment>True to enable TCP_NODELAY (disable/enable Nagle's algorithm).</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>performancePrefBandwidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>socketTimeout</name>
            <comment>Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a read()
 call on the InputStream associated with this Socket will block for only this amount of time</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>linger</name>
            <comment>Enable/disable SO_LINGER with the specified linger time in seconds. Only affects socket close.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>receiveBufferSize</name>
            <comment>The SO_RCVBUF (receive buffer) size in bytes.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>performancePrefLatency</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>trafficClass</name>
            <comment>The traffic class describes the type of connection that shall be established.  
 The traffic class must be in the range 0 &amp;lt;= trafficClass &amp;lt;= 255.
 The traffic class is bitset created by bitwise-or'ing values such the following :
 - IPTOS_LOWCOST (0x02) - cheap!
 - IPTOS_RELIABILITY (0x04) - reliable connection with little package loss.
 - IPTOS_THROUGHPUT (0x08) - lots of data being sent.
 - IPTOS_LOWDELAY (0x10) - low delay.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>lingerDuration</name>
            <comment>The linger duration in seconds (NOT milliseconds!). Only used if linger is true!</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>keepAlive</name>
            <comment>True to enable  SO_KEEPALIVE.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>performancePrefConnectionTime</name>
            <comment>Performance preferences are described by three integers whose values indicate the relative importance of short connection
 time, low latency, and high bandwidth. The absolute values of the integers are irrelevant; in order to choose a protocol the
 values are simply compared, with larger values indicating stronger preferences. Negative values represent a lower priority
 than positive values. If the application prefers short connection time over both low latency and high bandwidth, for
 example, then it could set performancePrefConnectionTime to 1 and the other properties to 0. If the application prefers high
 bandwidth above low latency, and low latency above short connection time, then it could set performancePrefConnectionTime to 0,
 performancePrefLatency to 1 and performancePrefBandwidth to 2.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>sendBufferSize</name>
            <comment>The SO_SNDBUF (send buffer) size in bytes.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.net.ServerSocketHints</name>
        <shortname>lgServerSocketHints</shortname>
        <comment>Options for {@link ServerSocket} instances.</comment>
        <owner>process</owner>
        <field>
            <name>reuseAddress</name>
            <comment>Enable/disable the SO_REUSEADDR socket option.</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>performancePrefBandwidth</name>
            <comment>See performancePrefConnectionTime for details.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>backlog</name>
            <comment>The listen backlog length. Needs to be greater than 0, otherwise the system default is used. 
 Backlog is the maximum queue length for incoming connection, i.e. maximum number of connections.
 If a connection indication arrives when the queue is full, the connection is refused.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>receiveBufferSize</name>
            <comment>The SO_RCVBUF (receive buffer) size in bytes.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>performancePrefLatency</name>
            <comment>See performancePrefConnectionTime for details.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>performancePrefConnectionTime</name>
            <comment>Performance preferences are described by three integers whose values indicate the relative importance of short connection
 time, low latency, and high bandwidth. The absolute values of the integers are irrelevant; in order to choose a protocol the
 values are simply compared, with larger values indicating stronger preferences. Negative values represent a lower priority
 than positive values. If the application prefers short connection time over both low latency and high bandwidth, for
 example, then it could set performancePrefConnectionTime to 1 and the other properties to 0. If the application prefers high
 bandwidth above low latency, and low latency above short connection time, then it could set performancePrefConnectionTime to 0,
 performancePrefLatency to 1 and performancePrefBandwidth to 2.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>acceptTimeout</name>
            <comment>The SO_TIMEOUT in milliseconds for how long to wait. Enter 0 for infinite wait.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.net.NetJavaSocketImpl</name>
        <shortname>lgSocket</shortname>
        <comment>Socket implementation using java.net.Socket.</comment>
        <owner>process</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isConnected</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RemoteAddress</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InputStream</name>
            <returntype>java.io.InputStream</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OutputStream</name>
            <returntype>java.io.OutputStream</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.VertexAttributes</name>
        <shortname>lgVertexAttributes</shortname>
        <comment>Instances of this class specify the vertex attributes of a mesh. VertexAttributes are used by {@link Mesh} instances to define
 its vertex structure. Vertex attributes have an order. The order is specified by the order they are added to this class.</comment>
        <owner>process</owner>
        <method>
            <name>findByUsage</name>
            <comment>Returns the first VertexAttribute for the given usage.
usage: The usage of the VertexAttribute to find.</comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
            <parameter>
                <name>usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Sets the vertex attributes in a specific order.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>attributes</name>
                <type>com.badlogic.gdx.graphics.VertexAttribute[]</type>
            </parameter>
        </method>
        <method>
            <name>get</name>
            <comment>Returns the VertexAttribute at the given index.</comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getOffset</name>
            <comment>Returns the offset for the first VertexAttribute with the specified usage.
usage: The usage of the VertexAttribute.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>size</name>
            <comment>
Return type: @return:the number of attributes</comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>VertexSize</name>
            <returntype>int</returntype>
            <comment>the size of a single vertex in bytes</comment>
        </property>
        <property>
            <name>Mask</name>
            <returntype>long</returntype>
            <comment>Calculates a mask based on the contained VertexAttribute instances. The mask is a bit-wise OR of each lgVertexAttribute.Usage.
Returns the mask.</comment>
        </property>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.VertexAttributes.Usage</name>
        <shortname>lgVertexAttributesUsage</shortname>
        <comment>The usage of a vertex attribute.</comment>
        <owner>process</owner>
        <field>
            <name>BoneWeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BiNormal</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TextureCoordinates</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Normal</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Generic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ColorPacked</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Tangent</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Position</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.VertexAttribute</name>
        <shortname>lgVertexAttribute</shortname>
        <comment>A single vertex attribute defined by its {@link Usage}, its number of components and its shader alias. The Usage is needed for
 the fixed function pipeline of OpenGL ES 1.x. Generic attributes are not supported in the fixed function pipeline. The number
 of components defines how many components the attribute has. The alias defines to which shader attribute this attribute should
 bind. The alias is used by a {@link Mesh} when drawing with a {@link ShaderProgram}. The alias can be changed at any time.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Constructs a new VertexAttribute.
Usage: one of the lgVertexAttributesUsage constants, used for the fixed function pipeline. Generic attributes are not supported in the fixed function pipeline.
NumComponents: the number of components of this attribute, must be between 1 and 4.
Alias: the alias used in a shader for this attribute. Can be changed after construction.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Usage</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>NumComponents</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Alias</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ColorUnpacked</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <method>
            <name>BoneWeight</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
            <parameter>
                <name>unit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TexCoords</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
            <parameter>
                <name>unit</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>equals</name>
            <comment>Tests to determine if the passed object was created with the same parameters</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>obj</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Normal</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <method>
            <name>equals2</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>other</name>
                <type>com.badlogic.gdx.graphics.VertexAttribute</type>
            </parameter>
        </method>
        <method>
            <name>Tangent</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <method>
            <name>Position</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Constructs a new VertexAttribute.
Usage: one of the lgVertexAttributesUsage constants, used for the fixed function pipeline. Generic attributes are not supported in the fixed function pipeline.
NumComponents: the number of components of this attribute, must be between 1 and 4.
Alias: the alias used in a shader for this attribute. Can be changed after construction.
Index: unit/index of the attribute, used for boneweights and texture coordinates.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Usage</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>NumComponents</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Alias</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Binormal</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.VertexAttribute</returntype>
        </method>
        <property>
            <name>Key</name>
            <returntype>int</returntype>
            <comment>Returns an unique number specifying the usage index (3 MSB) and unit (1 LSB).</comment>
        </property>
        <property>
            <name>Offset</name>
            <returntype>int</returntype>
            <comment>the offset of this attribute in bytes</comment>
        </property>
        <property>
            <name>NumComponents</name>
            <returntype>int</returntype>
            <comment>the number of components this attribute has</comment>
        </property>
        <property>
            <name>Usage</name>
            <returntype>int</returntype>
            <comment>the attribute usage (one of the lgVertexAttributesUsage constants)</comment>
        </property>
        <field>
            <name>unit</name>
            <comment>optional unit/index specifier, used for texture coordinates and bone weights</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>alias</name>
            <comment>the alias for the attribute used in a ShaderProgram</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.PixmapIO</name>
        <shortname>lgPixmapIO</shortname>
        <comment>Writes Pixmaps to various formats.</comment>
        <owner>process</owner>
        <method>
            <name>ReadCIM</name>
            <comment>Reads the Pixmap from the given file, assuming the Pixmap was written with the WriteCIM function.
Throws a GdxRuntimeException in case the file couldn't be read.</comment>
            <returntype>anywheresoftware.b4a.libgdx.graphics.lgPixmap</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>WriteCIM</name>
            <comment>Writes the Pixmap to the given file using a custom compression scheme. First three integers define the width, height and format, remaining bytes are zlib compressed pixels.
To be able to load the Pixmap to a Texture, use ".cim" as the file suffix!
Throws a GdxRuntimeException in case the Pixmap couldn't be written to the file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
        </method>
        <method>
            <name>WritePNG</name>
            <comment>Writes the pixmap as a PNG. Note this method uses quite a bit of working memory. WriteCIM is faster if the file does not need to be read outside of libGDX.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
            <parameter>
                <name>Pixmap</name>
                <type>anywheresoftware.b4a.libgdx.graphics.lgPixmap</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.badlogic.gdx.graphics.Color</name>
        <shortname>lgColor</shortname>
        <comment>A color class, holding the r, g, b and alpha component as floats in the range [0,1]. All methods perform clamping on the
 internal values after execution.</comment>
        <owner>process</owner>
        <method>
            <name>sub</name>
            <comment>Subtracts the given color from this color
color: the color
Return type: @return:this color</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>subRGBA</name>
            <comment>Subtracts the given values from this Color's component values.
r: Red component
g: Green component
b: Blue component
a: Alpha component
Return type: @return:this Color for chaining</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>luminanceAlpha</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>luminance</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>set</name>
            <comment>Sets this color to the given color.
color: the Color</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>add</name>
            <comment>Adds the given color to this color.
color: the color
Return type: @return:this color</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>toIntBits</name>
            <comment>Packs the color components into a 32-bit integer with the format ABGR.
Return type: @return:the packed color as a 32-bit int.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>rgb888</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>mulRGBA</name>
            <comment>Multiplies this Color's color components by the given ones.
r: Red component
g: Green component
b: Blue component
a: Alpha component
Return type: @return:this Color for chaining</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addRGBA</name>
            <comment>Adds the given color component values to this Color's values.
r: Red component
g: Green component
b: Blue component
a: Alpha component
Return type: @return:this Color for chaining</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rgba4444</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>alpha</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>valueOf</name>
            <comment>Returns a new color from a hex string with the format RRGGBBAA.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>hex</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>rgba8888</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRGBA</name>
            <comment>Sets this Color's component values.
r: Red component
g: Green component
b: Blue component
a: Alpha component
Return type: @return:this Color for chaining</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>rgb888ToColor</name>
            <comment>Sets the Color components using the specified integer value in the format RGB888. This is inverse to the rgb888(r, g, b)
 method.
color: The Color to be modified.
value: An integer color value in RGB888 format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rgba8888ToColor</name>
            <comment>Sets the Color components using the specified integer value in the format RGBA8888. This is inverse to the rgba8888(r, g, b,
 a) method.
color: The Color to be modified.
value: An integer color value in RGBA8888 format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>premultiplyAlpha</name>
            <comment>Multiplies the RGB values by the alpha.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>toFloatBits</name>
            <comment>Packs the color components into a 32-bit integer with the format ABGR and then converts it to a float.
Return type: @return:the packed color as a 32-bit float</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>rgb565ToColor</name>
            <comment>Sets the Color components using the specified integer value in the format RGB565. This is inverse to the rgb565(r, g, b)
 method.
color: The Color to be modified.
value: An integer color value in RGB565 format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>cpy</name>
            <comment>
Return type: @return:a copy of this color</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </method>
        <method>
            <name>mul</name>
            <comment>Multiplies the this color and the given color
color: the color
Return type: @return:this color.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
        </method>
        <method>
            <name>clamp</name>
            <comment>Clamps this Color's components to a valid range [0 - 1]
Return type: @return:this Color for chaining</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment>Returns the color encoded as hex string with the format RRGGBBAA.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>rgba4444ToColor</name>
            <comment>Sets the Color components using the specified integer value in the format RGBA4444. This is inverse to the rgba4444(r, g, b,
 a) method.
color: The Color to be modified.
value: An integer color value in RGBA4444 format.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rgb565</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>g</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>lerp</name>
            <comment>Linearly interpolates between this color and the target color by t which is in the range [0,1]. The result is stored in this
 color.
target: The target color
t: The interpolation coefficient
Return type: @return:This color for chaining.</comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
            <parameter>
                <name>target</name>
                <type>com.badlogic.gdx.graphics.Color</type>
            </parameter>
            <parameter>
                <name>t</name>
                <type>float</type>
            </parameter>
        </method>
        <field>
            <name>WHITE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>BLUE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>g</name>
            <comment>the red, green, blue and alpha components</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>b</name>
            <comment>the red, green, blue and alpha components</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>CYAN</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>GREEN</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>a</name>
            <comment>the red, green, blue and alpha components</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>PINK</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>DARK_GRAY</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>YELLOW</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>r</name>
            <comment>the red, green, blue and alpha components</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>BLACK</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>MAGENTA</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>LIGHT_GRAY</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>ORANGE</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>RED</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>GRAY</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
        <field>
            <name>CLEAR</name>
            <comment></comment>
            <returntype>com.badlogic.gdx.graphics.Color</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.strategy.lgSimpleOrthoGroupStrategy</name>
        <shortname>lgSimpleOrthoGroupStrategy</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes a minimalistic grouping strategy useful for orthogonal scenes where the camera faces the negative Z axis. Handles enabling and disabling of blending and uses world-Z only front to back sorting for transparent decals.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.strategy.lgDefaultGroupStrategy</name>
        <shortname>lgDefaultGroupStrategy</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes a minimalistic grouping strategy that splits decals into opaque and transparent ones enabling and disabling blending as needed. Opaque decals are rendered first (decal color is ignored in opacity check).
Use this strategy only if the vast majority of your decals are opaque and the few transparent ones are unlikely to overlap.
Can produce invisible artifacts when transparent decals overlap each other.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.libgdx.graphics.strategy.lgCameraGroupStrategy</name>
        <shortname>lgCameraGroupStrategy</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes a grouping strategy that sorts decals by distance from the camera.
This object needs to be explicitly disposed as it might allocate a ShaderProgram.
Camera: A lgOrthographicCamera or a lgPerspectiveCamera instance.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Camera</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>dispose</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>InternalObject</name>
            <returntype>com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aurelienribon.bodyeditor.BodyEditorLoader</name>
        <shortname>lgBox2DBodyEditorLoader</shortname>
        <comment>Loads the collision fixtures defined with the Physics Body Editor
 application. You only need to give it a body and the corresponding fixture
 name, and it will attach these fixtures to your body.</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getOrigin</name>
            <comment>Gets the origin point attached to the given name. Since the point is
 normalized in [0,1] coordinates, it needs to be scaled to your body
 size. Warning: this method returns the same Vector2 object each time, so
 copy it if you need it for later use.</comment>
            <returntype>com.badlogic.gdx.math.Vector2</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SortedList</name>
            <comment>Gets a sorted list of all names.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
        </method>
        <method>
            <name>AttachFixture</name>
            <comment>Creates and applies the fixtures defined in the editor. The name
 parameter is used to retrieve the right fixture from the loaded file.

 The body reference point (the red cross in the tool) is by default
 located at the bottom left corner of the image. This reference point
 will be put right over the BodyDef position point. Therefore, you should
 place this reference point carefully to let you place your body in your
 world easily with its BodyDef.position point. Note that to draw an image
 at the position of your body, you will need to know this reference point
 (see getOrigin).

 Also, saved shapes are normalized. As shown in the tool, the width of
 the image is considered to be always 1 meter. Thus, you need to provide
 a scale factor so the polygons get resized according to your needs (not
 every body is 1 meter large in your game, I guess).
body: The Box2d body you want to attach the fixture to.
name: The name of the fixture you want to load.
fd: The fixture parameters to apply to the created body fixture.
scale: The desired scale of the body. The default width is 1.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>body</name>
                <type>com.badlogic.gdx.physics.box2d.Body</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>fd</name>
                <type>com.badlogic.gdx.physics.box2d.FixtureDef</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getImagePath</name>
            <comment>Gets the image path attached to the given name.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Internal</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitializeWithFile2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>File</name>
                <type>com.badlogic.gdx.files.FileHandle</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <version>0.98</version>
    <comment>libGDX for B4A
 based on the nightly builds of v1.0.0</comment>
    <author>Wrapped by Fr\u00e9d\u00e9ric Leneuf-Magaud</author>
</root>
