Version=3.8
IconFile=
NumberOfModules=6
Module1=GameActivity
Module2=Point
Module3=Player
Module4=Constants
Module5=GameSquare
Module6=Turn
Build1=Default,pineysoft.squarepaddocks
Build2=Debug,pineysoft.squarepaddocks,WithDebug
DoNotOverwriteManifest=False
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
NumberOfFiles=26
File1=Bluetooth.png
File2=bounce.wav
File3=checkboxOff.png
File4=checkboxOn.png
File5=gametitle.png
File6=GameTypeScreen.bal
File7=Giggle1.mp3
File8=grass.png
File9=layout1.bal
File10=monsterImage1.png
File11=monsterImage10.png
File12=monsterImage11.png
File13=monsterImage12.png
File14=monsterImage2.png
File15=monsterImage3.png
File16=monsterImage4.png
File17=monsterImage5.png
File18=monsterImage6.png
File19=monsterImage7.png
File20=monsterImage8.png
File21=monsterImage9.png
File22=phone.png
File23=playgamebutton.png
File24=StartScreen.bal
File25=wifi.png
File26=winnerScreen.bal
NumberOfLibraries=6
Library1=animationplus
Library2=audio
Library3=core
Library4=phone
Library5=reflection
Library6=serial
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Square Paddocks
	#VersionCode: 11
	#VersionName: 1.1
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim admin As BluetoothAdmin
	Dim serial1 As Serial
	Dim foundDevices As List
	Type NameAndMac (Name As String, Mac As String)
	Dim connectedDevice As NameAndMac
	Dim IsMaster As Boolean
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim btnGTContinue As Button
	Private rdbBlueTooth As RadioButton
	Private rdbLocalPlay As RadioButton
	Private rdbWifi As RadioButton
	Private btnDiscoverMe As Button
	Private btnSearch As Button
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	If FirstTime Then
		admin.Initialize("admin")
		serial1.Initialize("serial1")
	End If	
	Activity.LoadLayout("GameTypeScreen")
	If FirstTime Then
		rdbLocalPlay.Checked = True
		UpdateRadioButtonSettings		
	End If

End Sub

Sub Activity_Resume
	btnSearch.Enabled = False
	btnDiscoverMe.Enabled = False
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed = True Then
		serial1.Disconnect
	End If
End Sub

Sub Admin_StateChanged (NewState As Int, OldState As Int)
	btnSearch.Enabled = (NewState = admin.STATE_ON)
	btnDiscoverMe.Enabled = btnSearch.Enabled
End Sub

Sub UpdateRadioButtonSettings
	Dim spConst As Constants
	spConst.Initialize
	
	If rdbLocalPlay.checked Then
		btnDiscoverMe.Enabled = False
		btnSearch.Enabled = False
		btnGTContinue.Enabled = True
		GameActivity.GameMode = spConst.GAMETYPE_MODE_LOC
	Else If rdbBlueTooth.Checked Then
		btnDiscoverMe.Enabled = True
		btnSearch.Enabled = True
		btnGTContinue.Enabled = False
		GameActivity.GameMode = spConst.GAMETYPE_MODE_BT
	End If
End Sub
Sub btnGTContinue_Click
	StartActivity(GameActivity)
End Sub
Sub rdbBlueTooth_CheckedChange(Checked As Boolean)
	If admin.IsEnabled = False Then
		If admin.Enable = False Then 
			ToastMessageShow("Error enabling Bluetooth adapter.", True)
			rdbLocalPlay.Checked = True
		Else
			ToastMessageShow("Enabling Bluetooth adapter...", False)
			'the StateChanged event will be soon raised
		End If
	Else
		Admin_StateChanged(admin.STATE_ON, 0)
	End If
	
	UpdateRadioButtonSettings
End Sub
Sub btnDiscoverMe_Click
		'this intent makes the device discoverable for 300 seconds.
	Dim i As Intent
	i.Initialize("android.bluetooth.adapter.action.REQUEST_DISCOVERABLE", "")
	i.PutExtra("android.bluetooth.adapter.extra.DISCOVERABLE_DURATION", 300)
	StartActivity(i)
	
	serial1.Listen
End Sub
Sub btnSearch_Click
		foundDevices.Initialize
	If admin.StartDiscovery	= False Then 
		ToastMessageShow("Error starting discovery process.", True)
	Else
		ProgressDialogShow("Searching for devices...")
	End If
End Sub

Sub Admin_DiscoveryFinished
	ProgressDialogHide
	If foundDevices.Size = 0 Then
		ToastMessageShow("No device found.", True)
	Else
		Dim l As List
		l.Initialize
		For i = 0 To foundDevices.Size - 1
			Dim nm As NameAndMac
			nm = foundDevices.Get(i)
			l.Add(nm.Name)
		Next
		Dim res As Int
		res = InputList(l, "Choose device to connect", -1)
		If res <> DialogResponse.CANCEL Then
			connectedDevice = foundDevices.Get(res)
			ProgressDialogShow("Trying to connect to: " & connectedDevice.Name & " (" & connectedDevice.Mac & ")")
			GameActivity.IsMaster = True
			serial1.Connect(connectedDevice.Mac)
		End If
	End If
End Sub

Sub Admin_DeviceFound (Name As String, MacAddress As String)
	Log(Name & ":" & MacAddress)
	Dim nm As NameAndMac
	nm.Name = Name
	nm.Mac = MacAddress
	foundDevices.Add(nm)
	ProgressDialogShow("Searching for devices (~ device found)...".Replace("~", foundDevices.Size))
End Sub


Sub Serial1_Connected (Success As Boolean)
	
	ProgressDialogHide
	Log("connected: " & Success)
	If Success = False Then
		Log(LastException.Message)
		ToastMessageShow("Error connecting: " & LastException.Message, True)
	Else
		Dim spConst As Constants
		spConst.Initialize
		
		If rdbBlueTooth.Checked Then		
			GameActivity.GameMode = spConst.GAMETYPE_MODE_BT
		Else If rdbWifi.Checked Then
			GameActivity.GameMode = spConst.GAMETYPE_MODE_WIFI
		Else
			GameActivity.GameMode = spConst.GAMETYPE_MODE_LOC
		End If
	
		StartActivity(GameActivity)
	End If
End Sub
Sub rdbLocalPlay_CheckedChange(Checked As Boolean)
	UpdateRadioButtonSettings	
End Sub